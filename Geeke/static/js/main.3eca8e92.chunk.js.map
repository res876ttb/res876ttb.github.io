{"version":3,"sources":["reportWebVitals.js","states/editorMisc.js","utils/Misc.js","constant.js","states/editor.js","utils/NumberListUtils.js","utils/Dispatcher.js","components/InlineStyleLink.js","components/InlineStyleMath.js","utils/Decorator.js","utils/KeyboardUtils.js","utils/DraggableBlockUtils.js","components/BlcokDragButton.js","components/BasicBlock.js","components/BulletListBlock.js","components/CheckListBlock.js","components/CodeBlock.js","components/HeadingBlock.js","components/NumberedListBlock.js","components/BlockDragMask.js","components/PageDragShadow.js","components/PageTitle.js","components/QuoteBlock.js","components/ToggleListBlock.js","components/PopupMenu.js","components/InlineStyleLinkEditor.js","components/InlineStyleMathEditor.js","components/PageOutline.js","components/Page.js","utils/CheckListUtils.js","utils/ToggleListUtils.js","components/Geeke.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","type","pmsc","initPageMiscState","Map","Set","blockKey","offset","textfield","initEditorMiscState","pages","focusEditor","selectionState","initPage","dispatch","pageUuid","callback","state","has","set","setPopupMenuRange","menuRange","setPageValue","setLinkRange","linkRange","setPreLinkRange","preLinkRange","setMathRange","mathRange","setMouseOverBlockKey","setDragShadowPos","dragShadowPos","setEditingCode","editingCode","setEditingMenu","editingMenu","setEditingMath","editingMath","pmscKey","value","get","setSelectionState","uuidBytes","getFirstBlockKey","contentState","getBlockMap","keys","next","getLastBlockKey","blockMap","Array","from","pop","updateBlockData","blockData","Modifier","setBlockData","SelectionState","focusKey","focusOffset","anchorKey","anchorOffset","GeekeMap","Object","fromEntries","this","getCaretRange","window","getSelection","selection","rangeCount","range","getRangeAt","cloneRange","collapse","getClientRects","checkOverlap","s1","e1","s2","e2","includeLast","isOSX","navigator","userAgent","indexOf","oneRem","getRemEle","document","getElementById","parseFloat","getComputedStyle","fontSize","body","getRem","remToPx","rem","indentWidth","editorTopPadding","editorDraggableButtonLeftPadding","blockDataKeys","constBlockType","headingType","magicMathStr","styleMap","STRIKETHROUGH","textDecoration","CODE","backgroundColor","borderRadius","fontFamily","padding","TEXTRED","color","TEXTORANGE","TEXTYELLOW","TEXTGREEN","TEXTBLUE","TEXTPURPLE","TEXTPINK","TEXTBROWN","TEXTGRAY","BGRED","BGORANGE","BGYELLOW","BGGREEN","BGBLUE","BGPURPLE","BGPINK","BGBROWN","BGGRAY","colorList","constAceEditorAction","constMoveDirection","languageMap","abap","assembly","autohotkey","batch","c","cpp","cc","clojure","coffee","csharp","css","dart","diff","docker","elixir","elm","erlang","fortran","fsharp","gherkin","glsl","go","golang","graphql","graphqlschema","groovy","haskell","html","java","javascript","json","kotlin","latex","less","lisp","livescript","lua","makefile","make","markdown","matlab","nix","objectivec","ocaml","pascal","perl","php","txt","text","plaintext","plain_text","powershell","prolog","python","r","ruby","rust","sass","scala","scheme","scss","sh","shell","sql","swift","tcl","typescript","verilog","vhdl","xml","yaml","yml","languageList","codeBlockThemeMap","languageOptions","map","v","toLowerCase","label","languageReverseMap","lv","codeBlockThemeReverseMap","k","themeOptions","permissionConst","emptyPageObj","uuid","author","space","title","content","tags","background","backLinks","comments","Permision","read","write","icon","readOnly","public","createDate","lastModifiedDate","ancestors","initState","cachedPages","entries","setEditorState","editorState","showEditorSelection","newSelectionState","page","newEditorState","EditorState","forceSelection","toggleBold","toggleStyle","toggleItalic","toggleStrikethrough","toggleUnderline","toggleCode","inlineStyle","newContentState","getCurrentContent","currentStyle","getCurrentInlineStyle","isCollapsed","setInlineStyleOverride","remove","add","removeInlineStyle","applyInlineStyle","push","createEmptyInlineMath","math","customSelection","getEntityKeyFunc","entityKey","createEntity","getLastCreatedEntityKey","currentContent","insertText","applyEntity","removeInlineMath","removeText","curBlock","getBlockForKey","findEntityRanges","entity","start","end","getText","slice","removeRange","updateInlineMathData","replaceEntityData","findPreviousBlockWithSameDepth","indentLevel","prevBlock","prevBlockData","prevIndentLevel","getBlockBefore","getKey","getData","findNextBlockWithSameDepth","nextBlock","nextBlockData","nextIndentLevel","getBlockAfter","trimNumberListWithSameDepth","startOrder","curBlockData","curBlockType","getType","curBlockKey","curIndentLevel","newBlockData","curNumberListOrder","trimNumberListInWholePage","numberListOrderMap","parentKeyMap","curDepth","firstBlockKey","blockDepth","blockType","blockParentKey","parentKey","delete","isShowBlock","key","Dispatcher","dispatchFunc","isDispatch","reset","func","args","newStore","callbacks","console","error","i","length","CustomTooltip","withStyles","tooltip","maxWidth","Tooltip","CustomButton","root","minWidth","Button","CustomCopyIcon","FileCopyIcon","CustomEditIcon","EditIcon","InlineStyleLink","props","url","getEntity","useDispatch","useSelector","editorMisc","triggerEsc","useState","open","setOpen","keepClose","setKeepClose","showCopyMessage","setShowCopyMessage","purl","URL","useEffect","handleCloseCopyMessage","e","Grid","container","direction","justifyContent","alignItems","placement","href","onClick","setTimeout","removeEntity","className","target","rel","interactive","arrow","onOpen","onClose","enterDelay","altKey","children","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","InlineStyleMath","startOffset","endOffset","styleClass","getStartKey","getEndKey","getStartOffset","getEndOffset","getAnchorKey","getFocusKey","katexId","offsetKey","caretPos","getFocusOffset","getAnchorOffset","middle","leftCaret","rightCaret","caret","mathDom","katex","renderToString","throwOnError","id","style","dangerouslySetInnerHTML","__html","contentEditable","inlineEntityStretagy","contentBlock","character","decorator","CompositeDecorator","strategy","component","defaultKeyboardHandlingConfig","indentBlock","convertBlockTypeInline","numberList","bulletList","keyCommandConst","dispatcherNotFoundConst","blockDataPreserveConstant","blockDataPreserveConfig","specialBlockSet","mapKeyToEditorCommand","config","keyCode","preventDefault","shiftKey","getDefaultKeyBinding","mapKeyToEditorCommand_tab","mapKeyToEditorCommand_space","defaultBackspaceFunciton","KeyBindingUtil","isOptionKeyCommand","isCtrlKeyCommand","hasCommandModifier","endKey","baseIndentLevel","needTrimNumberList","mapKeyToEditorCommand_backspace","defaultDeleteFunciton","getLength","mapKeyToEditorCommand_delete","focusBlockKey","focusBlock","hasShift","checkMoveUp","leftKey","getEntityAt","previousBlock","checkMoveDown","rightKey","mapKeyToEditorCommand_arrowKey","mapKeyToEditorCommand_s","mapKeyToEditorCommand_e","mapKeyToEditorCommand_k","mapKeyToEditorCommand_slash","handleKeyCommand_moreIndent","dispatcher","curContent","curSelection","startBlockKey","endBlockKey","focusBlockLength","keyArray","startIndex","endIndex","startBlock","minIndentLevel","Math","min","changeMoreIndent","nextBlockDepth","newNextBlockData","handleKeyCommand_lessIndent","returnResult","updated","block","handleKeyCommand_default","command","RichUtils","handleKeyCommand","handleKeyCommand_checkBlockTypeConversion","caretPosition","focusBlockType","blockText","__firstSpaceIndex","firstSpaceIndex","insertSpaceToCurrentSelection","focusInlineStyle","getInlineStyleAt","focusEntity","keyword","rangeToRemove","newType","newHeadingType","match","setBlockType","focusBlockData","prevBlockNumberListOrder","handleConvertToNumberList","focusBlockContent","selectionToRemoveText","handleKeyCommand_backspace","prevBlockKeyWithSameDepth","dataChanged","removeBlockData","blockDataKey","newParentBlock","newParentBlockKey","assert","tempBlock","tempBlockData","tempBlockDepth","newTempBlockData","removeSelectionState","prevNumberListOrder","handleKeyCommand_delete","nextBlockKey","baseNumberListOrder","nextNextBlock","tempBlockKey","tempData","previousBlockKey","newNextBlock","handleKeyCommand_deleteMultipleBlocks","nextToEndBlock","baseBlock","baseBlockData","curBlockDepth","depthDelta","handleKeyCommand_moveUpToSpecialBlock","focusSpecialBlock","handleKeyCommand_moveDownToSpecialBlock","handleKeyCommand_moveToPreviousBlock","restArgs","blurAceEditor","handleFocusEditor","previousBlockLength","handleKeyCommand_moveToNextBlock","handleKeyCommand_toggleInlineStrikeThrough","toggleInlineStyle","handleKeyCommand_toggleInlineCode","handleKeyCommand_triggerEditorEsc","handleKeyCommand_toggleInlineLink","handleKeyCommand_toggleInlineMath","handleKeyCommand_toggleInlineMathDirection","handleKeyCommand_toggleSlashMenu","handleAceEditor","editor","action","moveCursor","cursor","getCursor","selectionAnchor","getSelectionAnchor","selectionLead","getSelectionLead","row","column","handleAceEditor_up","editSession","getSession","lastLine","lastLineLastPosition","getLine","handleAceEditor_down","handleAceEditor_left","handleAceEditor_right","getValue","onBlur","handleAceEditor_backspace","getElementAtDropPosition","x","y","elements","elementsFromPoint","getBlockElementFromAnyDomEle","curElement","nodeName","hasAttribute","parentNode","getBlockKeyFromBlockElement","element","getAttribute","split","getBlockDepthFromBlockKey","moveAtomicBlock","atomicBlock","targetRange","insertionMode","createWithContent","AtomicBlockUtils","handleDrop_normalBlock","selectedBlocks","mouseX","clientX","mouseY","clientY","editorId","editorRect","getBoundingClientRect","editorTopFromPageTop","top","editorBottomFromPageTop","bottom","editorRightFromPageLeft","right","insertBeforeFirstBlock","insertAfterLastBlock","cursorDeltaX","left","depth","floor","targetBlockKey","dropComponent","blockElement","warn","previousKey","blockKeyToBeMoved","blockLengthToBeMoved","merge","selectionBefore","selectionAfter","firstSelectedBlockData","indentLevelDelta","acceptSelection","thisKey","max","onMouseOver","stopPropagation","onMouseLeave","BlockDargButton","topOffset","paddingLeft","dargShadowId","editorMiscPage","editorPage","mouseOverBlockKey","newShadowPos","_setDragShadowPos","draggable","onDragStart","renderEleId","handleDropCallback","hasFocus","getHasFocus","targetRect","targetWidth","width","targetHeight","height","curChild","baseBlockDepth","computedEle","targetMarginLeft","getPropertyValue","replace","targetPaddingLeft","targetPaddingRight","offsetX","editorLeftPadding","offsetXBackground","targetTextWidth","clone","cloneNode","lineHeight","moreBlocks","createElement","innerHTML","position","dragShadowEle","appendChild","BasicBlock","blockProps","handleBlockDargStart","geeke","_onMouseOver","_onMouseLeave","BulletListBlock","CheckListBlock","handleToggleCheckList","checkListCheck","Checkbox","checked","size","CodeBlockSelection","CodeBlockMenuButtons","updateCodeLanguage","updateCodeTheme","updateCodeWrapping","updateShowLineNumber","focusAceEditor","codeLanguage","codeTheme","codeContent","codeWrapping","showLineNumber","languageName","themeName","languageAnchorEl","setLanguageAnchorEl","themeAnchorEl","setThemeAnchorEl","settingAnchorEl","setSettingAnchorEl","languageMenuOpen","Boolean","themeMenuOpen","settingmenuOpen","handleCloseLanguageMenu","handleCloseThemeMenu","codeBlockMenuStyles","menu","provided","boxShadow","control","margin","minHeight","indicatorsContainer","display","valueContainer","option","ButtonGroup","variant","currentTarget","textTransform","Popover","anchorEl","transformOrigin","options","autoFocus","menuIsOpen","maxMenuHeight","styles","placeholder","onChange","Switch","CodeBlock","updateSelectionState","keyCommandDispatcher","aceEditor","useRef","editorKeyCommand","setEditorKeyCommand","setBackgroundColor","focusCodeBlock","moveDirection","current","navigateFileEnd","navigateFileStart","focus","focusFunc","setSpecialFocusFunc","blur","clearSelection","updateCodeBlockData","changeType","newValue","processedCodeTheme","newBackgroundColor","targetStyle","styleSheets","cssRules","j","selectorText","getBackgroundColorWithClass","aceEditorCommands","name","bindKey","win","mac","exec","aceEditorProps","ref","mode","wrapEnabled","theme","onFocus","minLines","maxLines","Infinity","highlightActiveLine","showGutter","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","commands","language","wrapping","border","HeadingBlock","uuidv4","headingId","isFirstBlock","paddingTop","blockHeadingType","headingtype","NumberedListBlock","numberListOrder","BlockDragMask","dragMaskParam","parseInt","nopacity","masks","mask","lastMaskLeft","PageDragShadow","elementId","updateEditor","initShadowPos","innerWidth","innerHeight","mousePosition","setMousePosition","setDragMaskParam","enable","createDragMask","throttle","editorTop","editorBottom","editorWidth","lastBlockKey","targetbottom","createDragMaskParam","trailing","getMousePosition","onDragEnd","handleDrop","setDraggingBlock","onmousemove","onmouseup","_onDragEnd","dragging","_setDraggingBlock","newPos","cancel","PageTitle","ContentState","createFromText","setTitle","geeke-id","geeke-type","blockStyleFn","keyBindingFn","QuoteBlock","ToggleListBlock","handleToggleToggleList","toggleListToggle","textColorList","menuDescription","Bold","Italic","Underline","Strikethrough","Code","Link","ButtonDescription","PopupMenu","menuPosition","setMenuPosition","showMenu","setShowMenu","setAnchorEl","textColorEl","setTextColorEl","backgroundColorEl","setBackgroundColorEl","anchorId","throttle_updateMenuPosition","editorDom","selectionRect","menuHeight","newPosition","offsetTop","offsetLeft","keepFocusOnEditor","toggleFunc","setTextColor","textColorStyle","upperColor","toUpperCase","_setTextColor","_setBackgroundColor","seperator","dropdownIcon","fontColorButtons","Popper","transition","TransitionProps","Fade","timeout","Paper","elevation","MenuList","context","MenuItem","dense","onMouseDown","paddingRight","backgroundColorButtons","buttonDescription_Bold","buttonDescription_Italic","buttonDescription_Underline","buttonDescription_Strikethrough","buttonDescription_Code","buttonDescription_Link","buttonDescription_Math","menuItems","_toggleBold","_toggleItalic","_toggleUnderline","_toggleStrikethrough","_toggleCode","CustonButton","InlineStyleLinkEditor","anchorPosition","setAnchorPosition","linkContent","setLinkContent","showCorssLineWarning","setShowCrossLineWarning","showEmptySelectionWarning","setShowEmptySelectionWarning","initAnchorPosition","clearState","closeEditor","curSelectionState","anchorBlock","firstLinkEntityKey","curEntityKey","curEntity","data","onKeyDown","nativeEvent","link","validUrl","plink","clearMin","clearMax","rangesOfOverlapLink","toggleLink","Menu","getContentAnchorEl","TextField","fontWeight","marginRight","CustomMenuList","outline","InlineStyleMathEditor","mathContent","setMathContent","lastMathContent","setLastMathContent","mathEntityKey","setMathEntityKey","setCurBlockKey","setFocusEditor","firstSelection","setFirstSelection","setEditorMiscSelectionState","firstMathEntityKey","newMathEntityKey","revertEntity","handleKeyDown","selectionStart","selectionEnd","inputRef","input","inputProps","setSelectionRange","PageOutlineBox","marginLeft","Box","PageOutlineTooltip","tooltipPlacementTop","PageOutlineList","tocItem","hovering","level","showToc","pow","borderBottom","PageOutline","focusHeading","setFocusHeading","setHovering","setShowToc","handleScrollEnd","debounce","curY","blocks","targetBlockIdx","lastStart","lastEnd","closestBsearchIdx","curIdx","blockId","removeEventListener","addEventListener","headings","querySelectorAll","toc","previousHeadingLevel","heading","headingLevel","headingContent","textContent","p","m","sx","onMouseEnter","Page","dataId","editingLink","commandConfig","findSelectedBlocks","isBackward","getIsBackward","setSelectedBlocks","isSelectedBlock","checkSelectionState","toggleCheckList","setNewSelectionState","toggle","toggleToggleList","setFocusBlockKey","setMoveDirection","escNum","defaultBlockProps","_mapKeyToEditorCommand","_handleKeyCommand","handleReturn","originalBlockKey","toggleBlockData","insertSoftNewline","newMap","forEach","splitBlock","_handleReturn","blockRendererFn","setSelectionStateByKey","spellCheck","customStyleMap","setFocusEditorUuid","textArea","select","msg","execCommand","log","err","removeChild","copyTextToClipboard","JSON","stringify","convertToRaw","Geeke","editorMiscPages","fakePageUuid","convertFromRaw","parse","run","initPageMisc","Container","enableMapSet","event","alert","MuiTheme","createTheme","palette","primary","light","main","dark","secondary","store","createStore","combineReducers","oldState","produce","ReactDOM","render","ThemeProvider","StrictMode","ondragover"],"mappings":"kLAYeA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCORQ,EAAO,aAEAC,EAEJ,EAFIA,EAGI,EAHJA,EAIE,EAJFA,EAKE,EALFA,EAMI,EANJA,EAOI,EAPJA,EAQO,EARPA,EASI,EATJA,EAUK,EAVLA,EAWK,GAXLA,EAYC,GAZDA,EAaA,GAbAA,EAcG,GAdHA,EAeA,GAfAA,EAgBE,GAhBFA,EAiBO,GAGdC,EAAoB,CACxB,CAACD,EAAY,MACb,CAACA,EAAoB,EAAE,GAAI,GAAG,EAAO,KAAM,KAC3C,CAACA,GAAkB,GACnB,CAACA,GAAkB,GACnB,CAACA,GAAoB,GACrB,CAACA,EAAoB,MACrB,CAACA,EAAuB,IAAIE,KAC5B,CAACF,EAAoB,MACrB,CAACA,EAAqB,IAAIG,KAC1B,CAACH,EAAqB,MACtB,CAACA,EAAiB,GAClB,CAACA,EAAgB,MACjB,CAACA,EAAmB,MACpB,CAACA,EAAgB,MACjB,CAACA,GAAkB,GACnB,CAACA,EAAuB,CAACI,SAAU,GAAIC,QAAS,EAAGC,UAAW,KAG1DC,EAAsB,CAC1BC,MAAO,IAAIN,IACXO,YAAa,KACbC,eAAgB,MAMLC,EAAW,SAACC,EAAUC,GACjCD,EAAS,CACPb,OACAe,SAAU,SAACC,GAKT,OAJKA,EAAMP,MAAMQ,IAAIH,IACnBE,EAAMP,MAAMS,IAAIJ,EAAU,IAAIX,IAAID,IAG7Bc,MAqEAG,EAAoB,SAACN,EAAUC,EAAUM,GAArB,OAC/BC,EAAaR,EAAUC,EAAUb,EAAqBmB,IAC3CE,EAAe,SAACT,EAAUC,EAAUS,GAArB,OAC1BF,EAAaR,EAAUC,EAAUb,EAAgBsB,IACtCC,EAAkB,SAACX,EAAUC,EAAUW,GAArB,OAC7BJ,EAAaR,EAAUC,EAAUb,EAAmBwB,IACzCC,EAAe,SAACb,EAAUC,EAAUa,GAArB,OAC1BN,EAAaR,EAAUC,EAAUb,EAAgB0B,IACtCC,EAAuB,SAACf,EAAUC,EAAUT,GAArB,OAClCgB,EAAaR,EAAUC,EAAUb,EAAYI,IAClCwB,EAAmB,SAAChB,EAAUC,EAAUgB,GAArB,OAC9BT,EAAaR,EAAUC,EAAUb,EAAoB6B,IAC1CC,EAAiB,SAAClB,EAAUC,EAAUkB,GAArB,OAC5BX,EAAaR,EAAUC,EAAUb,EAAkB+B,IACxCC,EAAiB,SAACpB,EAAUC,EAAUoB,GAArB,OAC5Bb,EAAaR,EAAUC,EAAUb,EAAkBiC,IAOxCC,EAAiB,SAACtB,EAAUC,EAAUsB,GAArB,OAC5Bf,EAAaR,EAAUC,EAAUb,EAAkBmC,IAI/Cf,EAAe,SAACR,EAAUC,EAAUuB,EAASC,GACjDzB,EAAS,CACPb,OACAe,SAAU,SAACC,GAGT,OAFWA,EAAMP,MAAM8B,IAAIzB,GACtBI,IAAImB,EAASC,GACXtB,MAiBAwB,EAAoB,SAAC3B,EAAUF,GAC1CE,EAAS,CACPb,OACAe,SAAU,SAACC,GAET,OADAA,EAAML,eAAiBA,EAChBK,M,2DCtLPyB,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAStG,I,EAAMC,EAAmB,SAACC,GAE/B,OADiBA,EAAaC,cACdC,OAAOC,OAAOR,OAGnBS,GAAkB,SAACJ,GAC9B,IAAMK,EAAWL,EAAaC,cAC9B,OAAOK,MAAMC,KAAKF,EAASH,QAAQM,OAGxBC,GAAkB,SAACT,EAActC,EAAUgD,GAAsC,IAA3B1C,EAA0B,uDAAT,KAClF,OAAIA,EACK2C,WAASC,aAAaZ,EAAchC,EAAgB0C,GAEpDC,WAASC,aACdZ,EACA,IAAIa,iBAAe,CACjBC,SAAUpD,EACVqD,YAAa,EACbC,UAAWtD,EACXuD,aAAc,IAEhBP,IAKOQ,GAAb,8JACE,WACE,OAAOC,OAAOC,YAAYC,UAF9B,eAA8B7D,MAyCjB8D,GAAgB,WAE3B,GADmD,qBAAxBC,OAAOC,aACjB,CACf,IAAMC,EAAYF,OAAOC,eACzB,GAA6B,IAAzBC,EAAUC,WAAkB,CAC9B,IAAMC,EAAQF,EAAUG,WAAW,GAAGC,aAGtC,GAFAF,EAAMG,UAAS,GACFH,EAAMI,iBAAiB,GAElC,OAAOJ,GAIb,OAAO,MAoBIK,GAAe,SAACC,EAAIC,EAAIC,EAAIC,GAA6B,IAAzBC,EAAwB,wDACnE,GAAIA,GACF,GAAKJ,EAAKE,GAAMD,EAAKC,GAAQA,EAAKF,GAAMG,EAAKH,EAAK,OAAO,OAEzD,GAAKA,EAAKE,GAAMD,GAAMC,GAAQA,EAAKF,GAAMG,GAAMH,EAAK,OAAO,EAE7D,OAAO,GC7HIK,IAAgD,IAAxCC,UAAUC,UAAUC,QAAQ,OAOpCC,GALE,WACb,IAAIC,EAAYC,SAASC,eAAe,gBACxC,OAAIF,EAAkBG,WAAWC,iBAAiBJ,GAAWK,UACjDF,WAAWC,iBAAiBH,SAASK,MAAMD,UAEnCE,GACTC,GAAU,SAACC,GAAD,OAASA,EAAMV,IAEzBW,GAAc,IAGdC,GAAmB,GACnBC,GAAmC,IAQnCC,GACE,cADFA,GAEM,kBAFNA,GAGK,iBAHLA,GAIO,mBAJPA,GAKA,YALAA,GAME,cANFA,GAOE,cAPFA,GAQG,eARHA,GASG,eATHA,GAUA,YAVAA,GAWK,iBAGLC,GACF,WADEA,GAEC,cAFDA,GAGC,cAHDA,GAIA,aAJAA,GAKC,cALDA,GAMJ,QANIA,GAOF,UAPEA,GAQL,OAIKC,GACP,KADOA,GAEP,KAFOA,GAGP,KAHOA,GAIP,KAJOA,GAKP,KALOA,GAMP,KAIOC,GAAe,iBAGfC,GAAW,CACtBC,cAAe,CACbC,eAAgB,gBAElBC,KAAM,CACJC,gBAAiB,wBACjBC,aAAc,SACdC,WAAY,YACZC,QAAS,eAIXC,QAAS,CAAEC,MAAO,WAClBC,WAAY,CAAED,MAAO,WACrBE,WAAY,CAAEF,MAAO,WACrBG,UAAW,CAAEH,MAAO,WACpBI,SAAU,CAAEJ,MAAO,WACnBK,WAAY,CAAEL,MAAO,WACrBM,SAAU,CAAEN,MAAO,WACnBO,UAAW,CAAEP,MAAO,WACpBQ,SAAU,CAAER,MAAO,WAGnBS,MAAO,CAAEd,gBAAiB,aAC1Be,SAAU,CAAEf,gBAAiB,aAC7BgB,SAAU,CAAEhB,gBAAiB,aAC7BiB,QAAS,CAAEjB,gBAAiB,aAC5BkB,OAAQ,CAAElB,gBAAiB,aAC3BmB,SAAU,CAAEnB,gBAAiB,aAC7BoB,OAAQ,CAAEpB,gBAAiB,aAC3BqB,QAAS,CAAErB,gBAAiB,aAC5BsB,OAAQ,CAAEtB,gBAAiB,cAGhBuB,GAAY,CAAC,MAAO,SAAU,SAAU,QAAS,OAAQ,SAAU,OAAQ,QAAS,QAGpFC,GACL,EADKA,GAEP,EAFOA,GAGL,EAHKA,GAIJ,EAJIA,GAKA,EAGAC,GACP,EADOA,GAEL,EAGKC,GAAc,CACzBC,KAAM,OACNC,SAAU,eACVC,WAAY,aACZC,MAAO,YACPC,EAAG,QACHC,IAAK,QACLC,GAAI,QACJC,QAAS,UACTC,OAAQ,SACR,MAAO,QACP,KAAM,SACNC,OAAQ,SACRC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,OAAQ,aACRC,OAAQ,SACRC,IAAK,MACLC,OAAQ,SACRC,QAAS,UACT,KAAM,SACNC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,GAAI,SACJC,OAAQ,SACRC,QAAS,gBACTC,cAAe,gBACfC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,IAAK,MACLC,SAAU,WACVC,KAAM,WACNC,SAAU,WACVC,OAAQ,SACRC,IAAK,MACLC,WAAY,aACZ,cAAe,aACfC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,IAAK,MACLC,IAAK,aACLC,KAAM,aACNC,UAAW,aACXC,WAAY,aACZC,WAAY,aACZC,OAAQ,SACRC,OAAQ,SACRC,EAAG,IACHC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,GAAI,KACJC,MAAO,KACPC,IAAK,MACLC,MAAO,QACPC,IAAK,MACLC,WAAY,aACZC,QAAS,UACTC,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,IAAK,QAGMC,GAAe,CAC1B,OACA,WACA,aACA,QACA,IACA,UACA,SACA,MACA,KACA,MACA,OACA,OACA,SACA,SACA,MACA,SACA,UACA,KACA,UACA,OACA,KACA,UACA,SACA,UACA,OACA,OACA,aACA,OACA,SACA,QACA,OACA,OACA,aACA,MACA,WACA,WACA,SACA,MACA,cACA,QACA,SACA,OACA,MACA,YACA,aACA,SACA,SACA,IACA,OACA,OACA,OACA,QACA,SACA,OACA,QACA,MACA,QACA,MACA,aACA,UACA,OACA,MACA,QA4CWC,GAAoB,IAAI5M,IAAI,CACvC,CAAC,WAAY,YACb,CAAC,QAAS,SACV,CAAC,SAAU,UACX,CAAC,kBAAmB,mBACpB,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,iBAAkB,kBACnB,CAAC,OAAQ,QACT,CAAC,UAAW,WACZ,CAAC,cAAe,eAChB,CAAC,UAAW,WACZ,CAAC,SAAU,UACX,CAAC,MAAO,OACR,CAAC,UAAW,WACZ,CAAC,eAAgB,gBACjB,CAAC,WAAY,YACb,CAAC,eAAgB,eACjB,CAAC,WAAY,YACb,CAAC,SAAU,UACX,CAAC,iBAAkB,kBACnB,CAAC,YAAa,aACd,CAAC,kBAAmB,mBACpB,CAAC,UAAW,WACZ,CAAC,YAAa,aACd,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,kBAAmB,mBACpB,CAAC,aAAc,aACf,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,sBAAuB,uBACxB,CAAC,wBAAyB,yBAC1B,CAAC,0BAA2B,2BAC5B,CAAC,iBAAkB,kBACnB,CAAC,WAAY,YACb,CAAC,WAAY,YACb,CAAC,cAAe,eAChB,CAAC,QAAS,WAGC6M,GAAkBF,GAAaG,KAAI,SAACC,GAC/C,MAAO,CACL5K,MAAO+F,GAAY6E,EAAEC,eACrBC,MAAOF,MAIEG,GAAqB,IAAIlN,IACpC2M,GAAaG,KAAI,SAACC,GAChB,IAAII,EAAKJ,EAAEC,cACX,MAAO,CAAC9E,GAAYiF,GAAKJ,OAIhBK,GAA2B,IAAIpN,IAC1C8C,MAAMC,KAAK6J,GAAkBlK,QAAQoK,KAAI,SAACO,GAExC,MAAO,CADCT,GAAkBxK,IAAIiL,GACnBA,OAIFC,GAvGqB,CAChC,WACA,QACA,SACA,kBACA,SACA,SACA,iBACA,OACA,UACA,cACA,UACA,SACA,MACA,UACA,eACA,WACA,cACA,WACA,SACA,iBACA,YACA,kBACA,UACA,YACA,iBACA,iBACA,kBACA,YACA,WACA,WACA,sBACA,wBACA,0BACA,iBACA,WACA,WACA,cACA,SAiE6CR,KAAI,SAACC,GAClD,MAAO,CACL5K,MAAO4K,EACPE,MAAOG,GAAyBhL,IAAI2K,OC7VlClN,GAAO,SAGP0N,GACK,EAcLC,GAAe,CAEnBC,KAAM,uCAENC,OAAQ,GAERC,MAAO,GAEPC,MAAO,WAEPC,QAAS,KAETC,KAAM,GAENC,WAAY,GAEZC,UAAW,GAEXC,SAAU,GAEVC,UAAW,CACTC,KAAMZ,GACNa,MAAOb,IAGTc,KAAM,GAENC,UAAU,EAEVC,QAAQ,EAERC,WAAY,EAEZC,iBAAkB,EAElBC,UAAW,IAiCPC,GAAY,CAChBC,YAAa,IAAI5O,KAMNS,GAAW,SAACC,EAAUC,GACjCD,EAAS,CACPb,QACAe,SAAU,SAACC,GAET,OADAA,EAAM+N,YAAY7N,IAAIJ,EAAU,IAAI+C,GAASC,OAAOkL,QAAQrB,MACrD3M,MAgBAiO,GAAiB,SAACpO,EAAUC,EAAUoO,GACjDrO,EAAS,CACPb,QACAe,SAAU,SAACC,GAGT,OAFWA,EAAM+N,YAAYxM,IAAIzB,GAC5BI,IAAI,UAAWgO,GACblO,MAKAmO,GAAsB,SAACtO,EAAUC,GAAwC,IAA9BsO,EAA6B,uDAAT,KAC1EvO,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC3BoO,EAAcG,EAAK9M,IAAI,WACvB5B,EAAiByO,GAAwCF,EAAY/K,eACrEmL,EAAiBC,cAAYC,eAAeN,EAAavO,GAG/D,OAFA0O,EAAKnO,IAAI,UAAWoO,GAEbtO,MAKAyO,GAAa,SAAC5O,EAAUC,GAAX,OAAwB4O,GAAY7O,EAAUC,EAAU,SACrE6O,GAAe,SAAC9O,EAAUC,GAAX,OAAwB4O,GAAY7O,EAAUC,EAAU,WACvE8O,GAAsB,SAAC/O,EAAUC,GAAX,OAAwB4O,GAAY7O,EAAUC,EAAU,kBAC9E+O,GAAkB,SAAChP,EAAUC,GAAX,OAAwB4O,GAAY7O,EAAUC,EAAU,cAC1EgP,GAAa,SAACjP,EAAUC,GAAX,OAAwB4O,GAAY7O,EAAUC,EAAU,SAGrE4O,GAAc,SAAC7O,EAAUC,EAAUiP,GAC9ClP,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WAEvByN,EAAkBd,EAAYe,oBAC9BX,EAAiBJ,EACfvO,EAAiBuO,EAAY/K,eAC7B+L,EAAehB,EAAYiB,wBA4BjC,OA1BIxP,EAAeyP,cAIjBd,EAAiBC,cAAYc,uBAC3BnB,EACAgB,EAAajP,IAAI8O,GAAeG,EAAaI,OAAOP,GAAeG,EAAaK,IAAIR,KASpFC,EADEE,EAAajP,IAAI8O,GACDzM,WAASkN,kBAAkBR,EAAiBrP,EAAgBoP,GAE5DzM,WAASmN,iBAAiBT,EAAiBrP,EAAgBoP,GAI/ET,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,wBAGlEX,EAAKnO,IAAI,UAAWoO,GAEbtO,MAyHA2P,GAAwB,SACnC9P,EACAC,GAII,IAHJ8P,EAGG,uDAHI,KACPC,EAEG,uDAFe,KAClBC,EACG,uDADgB,KAEnBjQ,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WAEvB+M,EAAiBJ,EACjBc,EAAkBd,EAAYe,oBAC9BtP,EAAiBkQ,GAAoC3B,EAAY/K,eAI/D4M,GADNf,EAAkBA,EAAgBgB,aAAa,OAAQ,YAAa,CAAEJ,KAAMA,GAActK,MACxD2K,0BAmBlC,OAlBA3B,EAAiBC,cAAYrO,IAAIoO,EAAgB,CAAE4B,eAAgBlB,IAIjEA,EAFErP,EAAeyP,cAEC9M,WAAS6N,WAAWnB,EAAiBrP,EAAgB2F,GAAc,KAAMyK,GAGzEzN,WAAS8N,YAAYpB,EAAiBrP,EAAgBoQ,GAI1EzB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,gBAGhEX,EAAKnO,IAAI,UAAWoO,GAEhBwB,GAAkBA,EAAiBC,GAEhC/P,MAMAqQ,GAAmB,SAACxQ,EAAUC,EAAUT,EAAU0Q,GAAmC,IAAxBO,EAAuB,wDAC/FzQ,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BwO,EAAiBD,EAAK9M,IAAI,WAC1ByN,EAAkBV,EAAeW,oBAC/BsB,EAAWvB,EAAgBwB,eAAenR,GAE5CuD,GAAgB,EAChBF,GAAe,EAcnB,OAXA6N,EAASE,kBACP,SAACnP,GACC,GAAIA,EAAMoP,SAAWX,EAAW,OAAO,KAEzC,SAACY,EAAOC,GACNhO,EAAe+N,EACfjO,EAAckO,MAKI,IAAlBhO,IAOFoM,EAFSuB,EAASM,UACXC,MAAMlO,EAAcF,KAAiB4C,IAAgBgL,EAC1ChO,WAASyO,YACzB/B,EACA,IAAIxM,iBAAe,CACjBG,UAAWtD,EACXuD,aAAcA,EACdH,SAAUpD,EACVqD,YAAaA,IAEf,YAGgBJ,WAAS8N,YACzBpB,EACA,IAAIxM,iBAAe,CACjBG,UAAWtD,EACXuD,aAAcA,EACdH,SAAUpD,EACVqD,YAAaA,IAEf,MAKJ4L,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,qBAGnEX,EAAKnO,IAAI,UAAWoO,IAlCYtO,MAyCzBgR,GAAuB,SAACnR,EAAUC,EAAUiQ,EAAWH,GAClE/P,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAK+P,EAAW,OAAO/P,EAEvB,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WACvByN,EAAkBd,EAAYe,oBAClCD,EAAkBA,EAAgBiC,kBAAkBlB,EAAW,CAAEH,SAGjE,IAAItB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAKpE,OAFAX,EAAKnO,IAAI,UAAWoO,GAEbtO,M,UC7aAkR,GAAiC,SAACvP,EAActC,EAAU8R,GACrE,IAAIC,EAAYzP,EAAa6O,eAAenR,GAC5C,IAAK+R,EAAW,OAAO,KAGvB,IAFA,IAAIC,EAAgB,KAChBC,EAAkB,EACfF,GAAW,CAEhB,KADAA,EAAYzP,EAAa4P,eAAeH,EAAUI,WAClC,OAAO,KAGvB,IADAF,GADAD,EAAgBD,EAAUK,WACMxR,IAAIkF,IAA6BkM,EAAc9P,IAAI4D,IAA6B,GAC1FgM,EAAa,OAAO,KAC1C,GAAIG,IAAoBH,EAAa,OAAOC,EAG9C,OAAO,MAGIM,GAA6B,SAAC/P,EAActC,EAAU8R,GACjE,IAAIQ,EAAYhQ,EAAa6O,eAAenR,GAC5C,IAAKsS,EAAW,OAAO,KAGvB,IAFA,IAAIC,EAAgB,KAChBC,EAAkB,EACfF,GAAW,CAEhB,KADAA,EAAYhQ,EAAamQ,cAAcH,EAAUH,WACjC,OAAO,KAGvB,IADAK,GADAD,EAAgBD,EAAUF,WACMxR,IAAIkF,IAA6ByM,EAAcrQ,IAAI4D,IAA6B,GAC1FgM,EAAa,OAAO,KAC1C,GAAIU,IAAoBV,EAAa,OAAOQ,EAG9C,OAAO,MAGII,GAA8B,SAACpQ,EAActC,EAAU8R,GAAiC,IAApBa,EAAmB,uDAAN,EACxFhD,EAAkBrN,EAClB4O,EAAWvB,EAAgBwB,eAAenR,GAC1C4S,EAAe1B,EAASkB,UACxBS,EAAe3B,EAAS4B,UACxBC,EAAc,KACdC,EAAiBJ,EAAahS,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,EAGjH,IAAI+M,IAAiB9M,IAA6BiN,IAAmBlB,MACnEZ,EAAWmB,GAA2B/P,EAActC,EAAU8R,IAC/C,OAAOxP,EAIxBsQ,EAAe1B,EAASkB,UACxBW,EAAc7B,EAASiB,SACvB,IAAIc,EAAe,IAAIzP,GAASoP,GAChCK,EAAapS,IAAIiF,GAA+B6M,GAShD,IADA,IAAIO,GAHJN,GADA1B,GAHAvB,EAAkB5M,GAAgB4M,EAAiBoD,EAAaE,IAGrC9B,eAAe4B,IAClBX,WAGclQ,IAAI4D,IAAiC,EACpEoL,IAELA,EAAWvB,EAAgB8C,cAAcvB,EAASiB,aAIlDY,EAAc7B,EAASiB,SACvBU,EAAe3B,EAAS4B,aAExBE,GADAJ,EAAe1B,EAASkB,WACMxR,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,GACxFgM,KACrB,KAAIkB,EAAiBlB,GAArB,CACA,GAAIe,IAAiB9M,GAA2B,MAGhD,IAAIkN,EAAe,IAAIzP,GAASoP,GAChCK,EAAapS,IAAIiF,GAA+BoN,GAChDA,GAAsB,EAGtBvD,EAAkB5M,GAAgB4M,EAAiBoD,EAAaE,GAGlE,OAAOtD,GAGIwD,GAA4B,SAAC7Q,GAWxC,IAVA,IAAI8Q,EAAqB,IAAI5P,GAAS,CAAC,CAAC,EAAG,KACvC6P,EAAe,IAAI7P,GAAS,CAC9B,EAAE,EAAG,MACL,CAAC,EAAG,QAEF8P,EAAW,EACX3D,EAAkBrN,EAClBiR,EAAgBlR,EAAiBsN,GACjCuB,EAAWvB,EAAgBwB,eAAeoC,GAEvCrC,GAAU,CAEf,IAAIlO,EAAYkO,EAASkB,UACrBoB,EAAaxQ,EAAUpC,IAAIkF,IAA6B9C,EAAUd,IAAI4D,IAA6B,EACnG2N,EAAYvC,EAAS4B,UACrB9S,EAAWkR,EAASiB,SACpBuB,EAAiB1Q,EAAUd,IAAI4D,IAGnC,GAAI0N,EAAaF,EAEf,IADA,IAAIK,EAAYN,EAAanR,IAAIoR,GAC1BA,EAAWE,GAChBF,GAAY,EACZF,EAAmBvS,IAAIyS,EAAU,GACjCD,EAAaxS,IAAIyS,EAAUK,QAEpBL,EAAWE,IACpBF,EAAWE,GAKb,GAHAH,EAAaxS,IAAIyS,EAAUtT,GAGvB0T,IAAmBL,EAAanR,IAAIoR,EAAW,GAAI,CACrD,IAAIL,EAAe,IAAIzP,GAASR,GAChCiQ,EAAapS,IAAIiF,GAAyBuN,EAAanR,IAAIoR,EAAW,IAEtEtQ,GADA2M,EAAkB5M,GAAgB4M,EAAiBuB,EAASiB,SAAUc,IAC1C9B,eAAeD,EAASiB,UAAUC,UAIhE,GAAIqB,IAAc1N,GAA2B,CAW3C,GATyC,IAArCqN,EAAmBlR,IAAIoR,IAEzBF,EAAmBvS,IAAIyS,EAAU,GAIbtQ,EAAUd,IAAI4D,MAGZsN,EAAmBlR,IAAIoR,GAAW,CACxD,IAAIL,EAAe,IAAIzP,GAASR,GAChCiQ,EAAapS,IAAIiF,GAA+BsN,EAAmBlR,IAAIoR,IACvE3D,EAAkB5M,GAAgB4M,EAAiBuB,EAASiB,SAAUc,GAIxEG,EAAmBvS,IAAIyS,EAAUF,EAAmBlR,IAAIoR,GAAY,OAC/D,CAEL,GAAItQ,EAAUpC,IAAIkF,IAAgC,CAChD,IAAImN,EAAe,IAAIzP,GAASR,GAChCiQ,EAAaW,OAAO9N,IACpB6J,EAAkB5M,GAAgB4M,EAAiBuB,EAASiB,SAAUc,GAGxEG,EAAmBvS,IAAIyS,EAAU,GAInCpC,EAAWvB,EAAgB8C,cAAcvB,EAASiB,UAGpD,OAAOxC,GAGIkE,GAAc,SAACvR,EAAcwR,GACxC,IAAI5C,EAAW5O,EAAa6O,eAAe2C,GACvC9Q,EAAYkO,EAASkB,UAGzB,IAFAlB,EAAW5O,EAAa6O,eAAenO,EAAUd,IAAI4D,KAE9CoL,GAAU,CAEf,IADAlO,EAAYkO,EAASkB,WACPxR,IAAIkF,KAChB,IAAK9C,EAAUd,IAAI4D,IACjB,OAAO,OAEJ,GAAIoL,EAAS4B,YAAc/M,GAChC,OAAO,EAETmL,EAAW5O,EAAa6O,eAAenO,EAAUd,IAAI4D,KAGvD,OAAO,GCrMYiO,G,WACnB,WAAYC,GAAmC,IAArBC,EAAoB,4EAE1CtQ,KAAKnD,SADHyT,EACcD,EAEAA,IAGlBrQ,KAAKuQ,Q,uCAGP,SAAIC,GAAe,IAAC,IAAD,0BAANC,EAAM,iCAANA,EAAM,kBAYjB,OAXAD,EAAI,WAAJ,GAAK,SAACE,GACC,EAAK1U,KAGC,EAAKA,OAAS0U,EAAS1U,KAChC,EAAK2U,UAAUjE,KAAKgE,EAAS3T,UAE7B6T,QAAQC,MAAR,0DAAiE,EAAK7U,KAAtE,gBAAkF0U,EAAS1U,KAA3F,OALA,EAAK2U,UAAUjE,KAAKgE,EAAS3T,UAC7B,EAAKf,KAAO0U,EAAS1U,QAHzB,OASMyU,IAECzQ,O,iBAGT,SAAIwQ,GAAe,IAAC,IAAD,0BAANC,EAAM,iCAANA,EAAM,kBAGjB,GAFID,GAAMxQ,KAAKuM,IAAL,MAAAvM,KAAA,CAASwQ,GAAT,OAAkBC,KAEvBzQ,KAAKhE,KAAM,OAAOgE,KAAKuQ,QAE5BvQ,KAAKnD,SAAS,CACZb,KAAMgE,KAAKhE,KACXe,SAAU,SAACC,GACT,IAAK,IAAI8T,EAAI,EAAGA,EAAI,EAAKH,UAAUI,OAAQD,IACzC9T,EAAQ,EAAK2T,UAAUG,GAAG9T,GAE5B,OAAOA,KAIXgD,KAAKuQ,U,mBAGP,WACEvQ,KAAK2Q,UAAY,GACjB3Q,KAAKhE,KAAO,S,0LCnBVgV,GAAgBC,aAAW,CAC/BC,QAAS,CACPC,SAAU,SAFQF,CAInBG,MACGC,GAAeJ,aAAW,CAC9BK,KAAM,CACJxO,QAAS,gBACTyO,SAAU,OACVvO,MAAO,YAJUiO,CAMlBO,MACGC,GAAiBR,aAAW,CAChCK,KAAM,CACJ3P,SAAU,SAFSsP,CAIpBS,MACGC,GAAiBV,aAAW,CAChCK,KAAM,CACJ3P,SAAU,SAFSsP,CAIpBW,MAqIYC,GAhIS,SAACC,GAEvB,IAAQC,EAAQD,EAAMnT,aAAaqT,UAAUF,EAAM/E,WAAW0B,UAAtDsD,IAGFlV,EAAWoV,cACXnV,EAAWoV,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAWzV,eACnD0V,EAAaF,aAAY,SAAClV,GAAD,yBAAWA,EAAMmV,WAAW1V,aAA5B,iBAAW,EAAwB8B,IAAIzB,UAAvC,aAAW,EAAuCyB,IAAItC,MACrF,EAAwBoW,oBAAS,GAAjC,oBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8CJ,oBAAS,GAAvD,oBAAOK,EAAP,KAAwBC,EAAxB,KAGMC,EAAO,IAAIC,IAAId,GAGrBe,qBAAU,WACRP,GAAQ,KACP,CAACH,IAGJ,IAGMW,EAAyB,SAACC,GAAD,OAAOL,GAAmB,IA4CnD5I,EACJ,gBAACkJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,UACE,eAACjC,GAAA,EAAD,CAASrH,MAAM,YAAYuJ,UAAU,MAArC,SACE,eAAC,KAAD,CAAiBhM,KAAMsL,EAAKW,KAA5B,SACE,eAAClC,GAAD,CAAcmC,QAnDC,SAACR,GACtBL,GAAmB,IAkDb,SACE,eAAClB,GAAD,UAIN,eAACL,GAAA,EAAD,CAASrH,MAAM,YAAYuJ,UAAU,MAArC,SACE,eAACjC,GAAD,CAAcmC,QApCG,SAACR,GACtBT,GAAQ,GACRE,GAAa,GACbjV,EACEX,EACAC,EACA,IAAI0C,iBAAe,CACjBC,SAAUqS,EAAMzV,SAChBqD,YAAaoS,EAAMlE,IACnBjO,UAAWmS,EAAMzV,SACjBuD,aAAckS,EAAMnE,SAGxB8F,YAAW,kBAAMhB,GAAa,KAAQ,MAuBlC,SACE,eAACd,GAAD,QAGJ,eAACP,GAAA,EAAD,CAASrH,MAAM,cAAcuJ,UAAU,MAAvC,SACE,eAACjC,GAAD,CAAcmC,QAxDK,SAACR,IHiXA,SAACnW,EAAUC,EAAUH,GAA+C,IAA/B6B,EAA8B,wDAC7F3B,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BwO,EAAiBD,EAAK9M,IAAI,WAC1ByN,EAAkBV,EAAeW,oBAWrC,OATAD,EAAkB1M,WAAS8N,YAAYpB,EAAiBrP,EAAgB,MACxE2O,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,gBAE/DxN,IACF8M,EAAiBC,cAAYC,eAAeF,EAAgB3O,IAG9D0O,EAAKnO,IAAI,UAAWoO,GAEbtO,KGjYT0W,CACE7W,EACAC,EACA,IAAI0C,iBAAe,CACjBC,SAAUqS,EAAMzV,SAChBqD,YAAaoS,EAAMlE,IACnBjO,UAAWmS,EAAMzV,SACjBuD,aAAckS,EAAMnE,SAEtB,IA8CE,SACE,eAAC,KAAD,CAAahM,SAAS,cAG1B,sBAAKgS,UAAU,4BACf,oBAAGA,UAAU,wBAAwBC,OAAO,SAASC,IAAI,sBAAsBN,KAAMX,EAAKW,KAA1F,SACE,gBAACN,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,UACE,eAAC,KAAD,CAAU1R,SAAS,UACnB,uBAAMgS,UAAU,qBAAhB,SAAsCf,EAAKW,eAMnD,OACE,uCACE,eAACvC,GAAD,CACE8C,aAAW,EACXC,OAAK,EACLhK,MAAOA,EACPuI,KAAMA,IAASE,EACfwB,OAAQ,kBAAOxB,EAAY,KAAOD,GAAQ,IAC1C0B,QAAS,kBAAM1B,GAAQ,IACvB2B,WAAY,IAPd,SASE,oBAAGP,UAAU,gBAAgBJ,KAAMX,EAAKW,KAAMC,QAjD5B,SAACR,GACnBA,EAAEmB,QACJjU,OAAOoS,KAAKM,EAAKW,OA+Cf,SACGzB,EAAMsC,aAKX,eAACC,GAAA,EAAD,CACE/B,KAAMI,EACN4B,iBAAkB,IAClBL,QAASlB,EACTwB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAJlD,SAME,eAACC,GAAA,EAAD,CAAOT,QAASlB,EAAwB4B,SAAS,UAAjD,2B,qBCpCOC,GA9GS,SAAC9C,GAEvB,IAAQlF,EAASkF,EAAMnT,aAAaqT,UAAUF,EAAM/E,WAAW0B,UAAvD7B,KACFvQ,EAAWyV,EAAMzV,SACjBwY,EAAc/C,EAAMnE,MACpBmH,EAAYhD,EAAMlE,IAGlB/Q,EAAWoV,cACXnV,EAAWoV,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAWzV,eACnDiB,EAAYuU,aAAY,SAAClV,GAAD,uBAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,UAAtC,aAAW,EAAsCyB,IAAItC,MAG7EU,EAAiBuV,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAWxV,kBAczDoY,EATHpX,GACCA,EAAUqX,gBAAkB3Y,GAC5BsB,EAAUsX,cAAgB5Y,GAC1BsE,GAAakU,EAAaC,EAAWnX,EAAUuX,iBAAkBvX,EAAUwX,iBAC5ExY,IACEA,EAAeyP,gBACfzP,EAAeyY,iBAAmB/Y,GAAYM,EAAe0Y,gBAAkBhZ,IAChFM,EAAeuY,kBAAoBL,GACnClY,EAAewY,gBAAkBL,EACJ,qCAAuC,qCAClEQ,EAAO,sCAAkCxD,EAAMyD,WAejDC,EAAW,KACf,GACE7Y,GACAA,EAAe0Y,gBAAkBhZ,GACjCM,EAAeyP,eACfzL,GAAakU,EAAaC,EAAWnY,EAAe8Y,iBAAkB9Y,EAAe+Y,mBAAmB,GACxG,CACA,IAAIC,GAAUb,EAAYD,GAAe,EACrClY,EAAeuY,kBAAoBS,EACrCH,EAAW,QACF7Y,EAAeuY,iBAAmBS,IAC3CH,EAAW,QAKf,IAAII,EAAY,KACZC,EAAa,KACbC,EAAQN,EAAW,uBAAM7B,UAAU,gCAAwC,KAC9D,SAAb6B,EACFI,EAAYE,EACU,UAAbN,IACTK,EAAaC,GAKf,IAAIC,EAAU,KACd,GAAInJ,IAAStK,GAAc,CAEzB,IAAI2D,EAAO+P,KAAMC,eAAe,YAAa,CAC3CC,cAAc,IAEhBH,EACE,eAAC3E,GAAA,EAAD,CAASrH,MAAO,SAAUmK,WAAY,IAAtC,SACE,wBAAMiC,GAAIb,EAAS3B,UAAWoB,EAAYqB,MAAO,CAAEpT,MAAO,QAA1D,UACE,uBAAMqT,wBAAyB,CAAEC,OAAQrQ,KACzC,uBAAM0N,UAAU,8BAAhB,mCAID,CAEL,IAAI1N,EAAO+P,KAAMC,eAAerJ,EAAM,CACpCsJ,cAAc,IAGhBH,EACE,eAAC3E,GAAA,EAAD,CAASrH,MAAO6C,EAAMsH,WAAY,IAAlC,SACE,uBAAMiC,GAAIb,EAAS3B,UAAWoB,EAAYsB,wBAAyB,CAAEC,OAAQrQ,OAMnF,OACE,kCACE,wBAAM0N,UAAU,uCAAuC4C,iBAAiB,EAAO/C,QArE/D,SAACR,GACnB,IAAIrW,EAAiB,IAAI6C,iBAAe,CACtCG,UAAWtD,EACXuD,aAAciV,EACdpV,SAAUpD,EACVqD,YAAaoV,IAEf3J,GAAoBtO,EAAUC,EAAUH,GACxCe,EAAab,EAAUC,EAAUH,IA6D/B,UACGiZ,EACAG,EACAF,KAEH,uBAAMlC,UAAU,oCAAhB,SAAqD7B,EAAMsC,eCjH3DoC,GAAuB,SAACC,EAAc1Z,EAAU4B,EAAcoN,GAClE0K,EAAahJ,kBAAiB,SAACiJ,GAC7B,IAAM3J,EAAY2J,EAAU1E,YAC5B,OAAqB,OAAdjF,GAAsBpO,EAAaqT,UAAUjF,GAAWoC,YAAcpD,IAC5EhP,IAMQ4Z,GAAY,IAAIC,qBAAmB,CAC9C,CACEC,SAlBuB,SAACJ,EAAc1Z,EAAU4B,GAAzB,OACzB6X,GAAqBC,EAAc1Z,EAAU4B,EAAc,SAkBzDmY,UAAWjF,IAEb,CACEgF,SAnBuB,SAACJ,EAAc1Z,EAAU4B,GAAzB,OACzB6X,GAAqBC,EAAc1Z,EAAU4B,EAAc,SAmBzDmY,UAAWlC,M,0DCXFmC,GAAgC,CAC3CC,aAAa,EACbC,wBAAwB,EACxBC,YAAY,EACZC,YAAY,GAGRC,GACO,EADPA,GAEQ,EAFRA,GAGQ,EAHRA,GAIsB,EAJtBA,GAKa,EALbA,GAMU,EANVA,GAOW,EAPXA,GAQkB,EARlBA,GASiB,EATjBA,GAUe,EAVfA,GAWiB,GAXjBA,GAYa,GAZbA,GAeuB,GAfvBA,GAgBc,GAhBdA,GAiBc,GAjBdA,GAkBc,GAlBdA,GAmBc,GAnBdA,GAoBkB,GApBlBA,GAqBmB,GArBnBA,GAsBa,GAObC,GACY,oCADZA,GAGQ,gCASRC,GACE,EADFA,GAEC,EAODC,IAAuB,oBAC1BpV,GAA4B,CAACmV,KADH,eAE1BnV,GAAgC,CAACC,KAFP,eAG1BD,GAA+B,CAACmV,KAHN,eAI1BnV,GAA0B,CAACmV,KAJD,eAK1BnV,GAAiC,CAACmV,KALR,eAM1BnV,GAA4B,CAACmV,KANH,GASvBE,GAAkB,IAAIpb,IAAI,CAACgG,KA0RpBqV,GAAwB,SAACzE,EAAG0E,EAAQ7a,EAAUqO,EAAapO,GAGtE,OAFAc,EAAqBf,EAAUC,EAAU,MAEjCkW,EAAE2E,SACR,KAAK,EACH,OAzR4B,SAAC3E,EAAG0E,GAEpC,OADA1E,EAAE4E,iBACGF,EAAOV,YAERhE,EAAE6E,SAAiBT,GACXA,GAHoBU,+BAAqB9E,GAuR1C+E,CAA0B/E,EAAG0E,GAEtC,KAAK,GACH,OApR8B,SAAC1E,EAAG0E,GACtC,OAAKA,EAAOT,uBACLG,GADoCU,+BAAqB9E,GAmRrDgF,CAA4BhF,EAAG0E,GAExC,KAAK,EACH,OAlRkC,SAAC1E,EAAG0E,EAAQxM,GAElD,IAAM+M,EAA2B,WAC/B,OAAIC,iBAAeC,mBAAmBnF,KAAQ/R,IAASiX,iBAAeE,iBAAiBpF,GAC9E,iBACEkF,iBAAeG,mBAAmBrF,GACpC,6BAEA,aAKX,IAAK0E,EAAOR,WAAY,OAAOe,IAE/B,IAAMtZ,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAY/K,eAC7BmY,EAAS3b,EAAesY,YAG9B,IAAKtY,EAAeyP,cAClB,OAAIzP,EAAe0Y,gBAAkB1Y,EAAeyY,eAC3C6C,IAEAb,GAKX,GAAwC,IAApCza,EAAe8Y,iBACjB,OAAOwC,IAIT,IAAM1K,EAAW5O,EAAa6O,eAAe8K,GACvCrJ,EAAe1B,EAASkB,UACxB8J,EAAkBtJ,EAAahS,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,EAChHiM,EAAYF,GAA+BvP,EAAc2Z,EAAQC,GAGjEC,IACFpK,GACAb,EAAS4B,YAAc/M,IACvBgM,EAAUe,YAAc/M,IAM1B,OAFIgM,GAAaA,EAAUe,YAAc/M,KAA2BgM,EAAY,MAEzE,CACLgJ,GACAA,GACAhJ,EAAYA,EAAUI,SAAW,KACjCgK,GA6NSC,CAAgCzF,EAAG0E,EAAQxM,GAEpD,KAAK,GACH,OA5N+B,SAAC8H,EAAG0E,EAAQxM,GAE/C,IAAMwN,EAAwB,WAC5B,OAAIR,iBAAeC,mBAAmBnF,KAAQ/R,IAASiX,iBAAeE,iBAAiBpF,GAC9E,cACEkF,iBAAeG,mBAAmBrF,GACpC,yBAEA,UAKX,IAAK0E,EAAOR,WAAY,OAAOwB,IAE/B,IAAM/Z,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAY/K,eAC7BmY,EAAS3b,EAAesY,YACxB1H,EAAW5O,EAAa6O,eAAe8K,GACvC3J,EAAYhQ,EAAamQ,cAAcwJ,GAG7C,IAAK3b,EAAeyP,cAClB,OAAIzP,EAAe0Y,gBAAkB1Y,EAAeyY,eAC3CsD,IAEAtB,GAKX,GAAIza,EAAe8Y,mBAAqB9W,EAAa6O,eAAe8K,GAAQK,YAC1E,OAAOD,IAIT,IAAK/J,EACH,OAAO+J,IAIT,IAAIF,EACFjL,EAAS4B,YAAc/M,IAA6BuM,EAAUQ,YAAc/M,GAE9E,MAAO,CAACgV,GAA+BA,GAA8BkB,EAAQE,GAgLlEI,CAA6B5F,EAAG0E,EAAQxM,GAEjD,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACH,OAnLiC,SAAC8H,EAAG9H,GACzC,IAEMvO,EAAiBuO,EAAY/K,eAGnC,IAAKxD,EAAeyP,cAAe,OALG,KAQtC,IAAMzN,EAAeuM,EAAYe,oBAC3B4M,EAAgBlc,EAAe0Y,cAC/ByD,EAAana,EAAa6O,eAAeqL,GACzCnZ,EAAc/C,EAAe8Y,iBAC7BsD,EAAW/F,EAAE6E,SAKbmB,EAAc,WAAsB,IAArBC,EAAoB,wDAEvC,GACEF,GACAb,iBAAeE,iBAAiBpF,IAChCkF,iBAAeC,mBAAmBnF,IAClCkF,iBAAeG,mBAAmBrF,GAElC,OAzBkC,KA6BpC,GAAIiG,GAAWvZ,EAAc,EAAG,CAE9B,IAAIqN,EAAY+L,EAAWI,YAAYxZ,EAAc,GACrD,GAAIqN,EAEF,GAAoB,SADPpO,EAAaqT,UAAUjF,GACzB/Q,KACT,OAAOob,GAIX,OAvCkC,KA2CpC,IAAM+B,EAAgBxa,EAAa4P,eAAesK,GAClD,OAAKM,EAGDA,EAAchK,YAAc/M,IAAwB2W,EA/CpB,KAiD3B3B,GAjD2B,MAuDhCgC,EAAgB,WAAuB,IAAtBC,EAAqB,wDAE1C,GACEN,GACAb,iBAAeE,iBAAiBpF,IAChCkF,iBAAeC,mBAAmBnF,IAClCkF,iBAAeG,mBAAmBrF,GAElC,OA/DkC,KAmEpC,GAAIqG,GAAY3Z,EAAcoZ,EAAWH,YAAa,CAEpD,IAAI5L,EAAY+L,EAAWI,YAAYxZ,GACvC,GAAIqN,EAEF,GAAoB,SADPpO,EAAaqT,UAAUjF,GACzB/Q,KACT,OAAOob,GAIX,OA7EkC,KAiFpC,IAAMzI,EAAYhQ,EAAamQ,cAAc+J,GAC7C,OAAKlK,EAGDA,EAAUQ,YAAc/M,IAAwB2W,EArFhB,KAsF3B3B,GAtF2B,MA4FtC,OAAQpE,EAAE2E,SACR,KAAK,GACH,OAAOqB,GAAY,GAErB,KAAK,GACH,OAAOA,GAAY,GAErB,KAAK,GACH,OAAOI,GAAc,GAEvB,KAAK,GACH,OAAOA,GAAc,GAEvB,QAEE,OADAxI,QAAQC,MAAR,0BAAiCmC,EAAE2E,QAAnC,yBA1GkC,MAkL3B2B,CAA+BtG,EAAG9H,GAE3C,KAAK,GACH,OAtE0B,SAAC8H,EAAG0E,GAElC,QAAOzW,IAASiX,iBAAeE,iBAAiBpF,IAAOkF,iBAAeG,mBAAmBrF,KAAOA,EAAE6E,SACzFT,GAGF,KAgEImC,CAAwBvG,GAEjC,KAAK,GACH,OAhE0B,SAACA,EAAG0E,GAElC,OAAMzW,IAASiX,iBAAeE,iBAAiBpF,IAAOkF,iBAAeG,mBAAmBrF,GAClFA,EAAE6E,SACGT,GAEAA,GAIJ,KAsDIoC,CAAwBxG,GAEjC,KAAK,GACH,OArDGoE,GAuDL,KAAK,GACH,OArD0B,SAACpE,EAAG0E,GAElC,IAAMzW,IAASiX,iBAAeE,iBAAiBpF,IAAOkF,iBAAeG,mBAAmBrF,GACtF,OAAOoE,GAkDEqC,CAAwBzG,GAEjC,KAAK,IACH,OAjD8B,SAACA,EAAG0E,GAEtC,OACE1E,EAAE6E,UACFK,iBAAeE,iBAAiBpF,IAChCkF,iBAAeC,mBAAmBnF,IAClCkF,iBAAeG,mBAAmBrF,GAE3B,KAGFoE,GAsCIsC,CAA4B1G,GAErC,QACE,OAAO8E,+BAAqB9E,KAM5B2G,GAA8B,SAACzO,EAAa0O,GAChD,IAAKA,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAIT,IAAMwC,EAAa3O,EAAYe,oBACzB6N,EAAe5O,EAAY/K,eAC3B4Z,EAAgBD,EAAa9E,cAC7BgF,EAAcF,EAAa7E,YAC3B4D,EAAgBiB,EAAazE,cAC7B3V,EAAcoa,EAAarE,iBAE3BwE,EADaJ,EAAWrM,eAAeqL,GACTF,YAC9B3Z,EAAW6a,EAAWjb,cACtBsb,EAAWjb,MAAMC,KAAKF,EAASH,QAC/Bsb,EAAaD,EAAS9Y,QAAQ2Y,GAC9BK,EAAWF,EAAS9Y,QAAQ4Y,GAC5BK,EAAarb,EAAST,IAAI2b,EAASC,IAGrC7L,GAAmB,EACvB,GAAI6L,EAAa,EAAG,CAClB,IAAI9a,EAAYL,EAAST,IAAI2b,EAASC,EAAa,IAAI1L,UAErDH,EADEjP,EAAUpC,IAAIkF,IACE9C,EAAUd,IAAI4D,IAEd,EAKtB,IAAImN,EAAe,IAAIzP,GAASga,EAAWrM,eAAe0M,EAASC,IAAa1L,WAChFa,EAAapS,IACXiF,GACAkY,EAAW5L,UAAUxR,IAAIkF,IAA6BkY,EAAW5L,UAAUlQ,IAAI4D,IAA6B,GAM9G,IAJA,IAAI6J,EAAkB5M,GAAgBya,EAAYK,EAASC,GAAa7K,GAGpEgL,EAAiB,QACZxJ,EAAIqJ,EAAYrJ,GAAKsJ,EAAUtJ,IAAK,CAC3C,IACIzR,EADQL,EAAST,IAAI2b,EAASpJ,IACZrC,UAClBa,EAAe,IAAIzP,GAASR,GAC5BgQ,EAAiB,EAQrB,GAPIhQ,EAAUpC,IAAIkF,MAChBkN,EAAiBhQ,EAAUd,IAAI4D,KAGjCmY,EAAiBC,KAAKC,IAAIF,EAAgBjL,GAGtCyB,IAAMqJ,GAAc9K,IAAmBf,EAAkB,EAC3D,OAGEe,GAAkBf,IAAiBe,GAAkB,GACzDf,EAAkBe,EAClBC,EAAapS,IAAIiF,GAA2BkN,GAE5CrD,EAAkB5M,GAAgB4M,EAAiBkO,EAASpJ,GAAIxB,GAIlE,IAAIX,EAAY3C,EAAgB8C,cAAckL,GAC1CS,GAAmB,EACvB,GAAI9L,EAAW,CACb,IAAIC,EAAgBD,EAAUF,UAC1BG,EAAc3R,IAAIkF,KAA8ByM,EAAcrQ,IAAI4D,IAA6BmY,IACjGG,GAAmB,GAKvB,KAAOA,GACA9L,GADkB,CAEvB,IAAIC,EAAgBD,EAAUF,UAC1BiM,EAAiB9L,EAAc3R,IAAIkF,IACnCyM,EAAcrQ,IAAI4D,IAClB,EACJ,GAAIuY,GAAkBJ,EAAgB,MAEtC,IAAIK,EAAmB,IAAI9a,GAAS+O,GACpC+L,EAAiBzd,IAAIiF,GAA2BuY,EAAiB,GACjE1O,EAAkB5M,GAAgB4M,EAAiB2C,EAAUH,SAAUmM,GACvEhM,EAAY3C,EAAgB8C,cAAcH,EAAUH,UAItDxC,EAAkBwD,GAA0BxD,GAC5C,IAAIV,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,eAChE8N,EAAa1N,gBACfd,EAAiBC,cAAYC,eAC3BF,EACA,IAAI9L,iBAAe,CACjBC,SAAUoZ,EACVnZ,YAAkC,IAArBua,EAAyB,EAAIva,EAC1CC,UAAWkZ,EACXjZ,aAAmC,IAArBqa,EAAyB,EAAIva,MAMjDka,EAAW3O,eAAeK,IAGtBsP,GAA8B,SAAC1P,EAAa0O,GAAsC,IAA1BiB,EAAyB,wDACrF,GAAKA,GAAiBjB,EAAW3O,eAAjC,CAMA,IAAM4O,EAAa3O,EAAYe,oBACzB6N,EAAe5O,EAAY/K,eAC3B4Z,EAAgBD,EAAa9E,cAC7BgF,EAAcF,EAAa7E,YAC3B4D,EAAgBiB,EAAazE,cAC7B3V,EAAcoa,EAAarE,iBAC3BqD,EAAae,EAAWrM,eAAeqL,GACvCoB,EAAmBnB,EAAWH,YAC9B3Z,EAAW6a,EAAWjb,cACtBsb,EAAWjb,MAAMC,KAAKF,EAASH,QAC/Bsb,EAAaD,EAAS9Y,QAAQ2Y,GAC9BK,EAAWF,EAAS9Y,QAAQ4Y,GAC5BK,EAAarb,EAAST,IAAI2b,EAASC,IAGrC7K,EAAe,IAAIzP,GAASga,EAAWrM,eAAe0M,EAASC,IAAa1L,WAChFa,EAAapS,IACXiF,GACAkY,EAAW5L,UAAUxR,IAAIkF,IAA6BkY,EAAW5L,UAAUlQ,IAAI4D,IAA6B,GAO9G,IALA,IAAI6J,EAAkB5M,GAAgBya,EAAYK,EAASC,GAAa7K,GAGpEgL,EAAiB,QACjBQ,EAAU,EACLhK,EAAIqJ,EAAYrJ,GAAKsJ,EAAUtJ,IAAK,CAC3C,IAAIiK,EAAQ/b,EAAST,IAAI2b,EAASpJ,IAC9BzR,EAAY0b,EAAMtM,UAClBa,EAAe,IAAIzP,GAASR,GAC5BgQ,EAAiB,EACjBhQ,EAAUpC,IAAIkF,MAChBkN,EAAiBhQ,EAAUd,IAAI4D,KAGjCmY,EAAiBC,KAAKC,IAAInL,EAAgBiL,GAEtCjL,EAAiB,IACnBC,EAAapS,IAAIiF,GAA2BkN,EAAiB,GAC7DyL,GAAW,EAKb9O,EAAkB5M,GAAgB4M,EAAiBkO,EAASpJ,GAAIxB,IAIlE,IAAIX,EAAY3C,EAAgB8C,cAAckL,GAC1CS,GAAmB,EACvB,GAAI9L,EAAW,CACb,IAAIC,EAAgBD,EAAUF,UAC1BG,EAAc3R,IAAIkF,KAA8ByM,EAAcrQ,IAAI4D,IAA6BmY,IACjGG,GAAmB,GAKvB,KAAOA,GACA9L,GADkB,CAEvB,IAAIC,EAAgBD,EAAUF,UAC1BiM,EAAiB9L,EAAc3R,IAAIkF,IACnCyM,EAAcrQ,IAAI4D,IAClB,EACJ,GAAIuY,GAAkBJ,EAAgB,MAEtC,IAAIK,EAAmB,IAAI9a,GAAS+O,GACpC+L,EAAiBzd,IAAIiF,GAA2BuY,EAAiB,GACjE1O,EAAkB5M,GAAgB4M,EAAiB2C,EAAUH,SAAUmM,GACvEhM,EAAY3C,EAAgB8C,cAAcH,EAAUH,UACpDsM,GAAW,EAIb,GAAgB,IAAZA,EAAJ,CAIA,GADA9O,EAAkBwD,GAA0BxD,GACxC6O,EAAc,OAAO7O,EACzB,IAAIV,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,eAepE,OAdI8N,EAAa1N,gBACfd,EAAiBC,cAAYC,eAC3BF,EACA,IAAI9L,iBAAe,CACjBC,SAAUoZ,EACVnZ,YAAkC,IAArBua,EAAyB,EAAIva,EAC1CC,UAAWkZ,EACXjZ,aAAmC,IAArBqa,EAAyB,EAAIva,MAMjDka,EAAW3O,eAAeK,GACnB,gBAlGLsF,QAAQC,MAAMwG,KAqGZ2D,GAA2B,SAAC9P,EAAa+P,EAASrB,GACtD,IAAKA,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAGT,IAAM/L,EAAiB4P,YAAUC,iBAAiBjQ,EAAa+P,GAC/D,OAAK3P,GAELsO,EAAW3O,eAAeK,GACnB,WAHqB,eAOxB8P,GAA4C,SAAClQ,EAAa+P,EAASrB,GACvE,IAAKA,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAIT,IAAM1a,EAAiBuO,EAAY/K,eAC7Bkb,EAAgB1e,EAAe8Y,iBACrC,IAAK9Y,EAAeyP,cAAe,OAAO4O,GAAyB9P,EAAa+P,EAASrB,GAGzF,IAAMjb,EAAeuM,EAAYe,oBAC3BxM,EAAW9C,EAAe0Y,cAC1ByD,EAAana,EAAa6O,eAAe/N,GACzC6b,EAAiBxC,EAAW3J,UAC5BoM,EAAYzC,EAAWjL,UACvB2N,EAAoBD,EAAUna,QAAQ,KACtCqa,EAAkBD,GAAqB,EAAIA,EAAoB1C,EAAWH,YAgD1E+C,EAAgC,WAEpC,IAAIC,EAAmB7C,EAAW8C,iBAAiBP,EAAgB,GAC/DQ,EAAc/C,EAAWI,YAAYmC,EAAgB,GAGrDrP,EAAkB1M,WAAS6N,WAAWxO,EAAchC,EAAgB,IAAKgf,EAAkBE,GAC3FvQ,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBACpE4N,EAAW3O,eAAeK,IAG5B,GAAI+P,GAAiBI,GAAmBJ,IAAkBvC,EAAWH,YAEnE,OADA+C,IACO,UAIT,IAAII,EAAUP,EAAUzN,MAAM,EAAGuN,GAG3BjQ,EAAoB,IAAI5L,iBAAe,CAC3CC,SAAUA,EACVC,YAAa,EACbC,UAAWF,EACXG,aAAc,IAEVmc,EAAgB,IAAIvc,iBAAe,CACvCC,SAAUA,EACVC,YAAa2b,EAAgB,EAC7B1b,UAAWF,EACXG,aAAc,IAIZoc,EAAU,KACVC,EAAiB,EACrB,OAAQH,GAEN,IAAK,IACL,IAAK,IACCR,IAAmBlZ,KAA2B4Z,EAAU5Z,IAC5D,MAGF,IAAK,KACCkZ,IAAmBlZ,KAA0B4Z,EAAU5Z,IAC3D,MAGF,IAAK,IACCkZ,IAAmBlZ,KAA2B4Z,EAAU5Z,IAC5D,MAGF,IAAK,IACCkZ,IAAmBlZ,KAAsB4Z,EAAU5Z,IACvD,MAGF,IAAK,IACCkZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MACF,IAAK,KACCiZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MACF,IAAK,MACCiZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MACF,IAAK,OACCiZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MACF,IAAK,QACCiZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MACF,IAAK,SACCiZ,IAAmBlZ,KAAwB4Z,EAAU5Z,IACzD6Z,EAAiB5Z,GACjB,MAGF,QAEE,GAAIyZ,EAAQI,MAAM,WAAaZ,IAAmBlZ,GAEhD,OAtI4B,WAEhC,IAAI4J,EAAkBrN,EAClB2M,EAAiBJ,EAGjByQ,EAAmB7C,EAAW8C,iBAAiBP,EAAgB,GAC/DQ,EAAc/C,EAAWI,YAAYmC,EAAgB,GAGzDrP,EAAkB1M,WAAS6N,WAAWxO,EAAchC,EAAgB,IAAKgf,EAAkBE,GAC3FvQ,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAGhEA,EAAkB1M,WAAS6c,aAAanQ,EAAiBrP,EAAgByF,IACzE4J,EAAkB1M,WAASyO,YAAY/B,EAAiB+P,EAAe,WAGvE,IAAMK,EAAiBtD,EAAWrK,UAC5BY,EAAiB+M,EAAenf,IAAIkF,IACtCia,EAAe7d,IAAI4D,IACnB,EACEiM,EAAYF,GAA+BlC,EAAiBvM,EAAU4P,GAC5E,GAAIjB,GAAaA,EAAUe,YAAc/M,GAA2B,CAClE,IAAMiM,EAAgBD,EAAUK,UAC1B4N,EAA2BhO,EAAcpR,IAAIkF,IAC/CkM,EAAc9P,IAAI4D,IAClB,EACJ6J,EAAkB+C,GAChB/C,EACAoC,EAAUI,SACVa,EACAgN,QAGFrQ,EAAkB+C,GAA4B/C,EAAiBvM,EAAU4P,GAI3E/D,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,qBACnEV,EAAiBC,cAAYC,eAAeF,EAAgBF,GAC5DwO,EAAW3O,eAAeK,GA4FtBgR,GACO,UAIT,GAAIR,EAAQI,MAAM,SAAWZ,IAAmBlZ,GAAqB,CACnE4Z,EAAU5Z,GACV,OAQN,IAAK4Z,EAEH,OADAN,IACO,UAIT,IAAI1P,EAAkBrN,EAClB2M,EAAiBJ,EASrB,OARAc,EAAkB1M,WAAS6N,WAAWxO,EAAchC,EAAgB,KACpE2O,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAGhEA,EAAkB1M,WAAS6c,aAAanQ,EAAiBrP,EAAgBqf,GACzEhQ,EAAkB1M,WAASyO,YAAY/B,EAAiB+P,EAAe,WAG/DT,GACN,KAAKlZ,GAGD,IAAIga,EAAiB,IAAIvc,GAASiZ,EAAWrK,WAC7C2N,EAAenM,OAAO9N,IACtB6J,EAAkB5M,GAAgB4M,EAAiBvM,EAAU2c,GAG7D,IAAI7D,EAAkB6D,EAAenf,IAAIkF,IACrCia,EAAe7d,IAAI4D,IACnB,EACAwM,EAAY3C,EAAgB8C,cAAcrP,GAC1CkP,IACF3C,EAAkB+C,GAA4B/C,EAAiB2C,EAAUH,SAAU+J,IAGvF,MAEF,KAAKnW,GAGD,IAAIga,EAAiB,IAAIvc,GAASiZ,EAAWrK,WAC7C2N,EAAenM,OAAO9N,IACtB6J,EAAkB5M,GAAgB4M,EAAiBvM,EAAU2c,GAE/D,MAEF,KAAKha,GAGD,IAAIga,EAAiB,IAAIvc,GAASiZ,EAAWrK,WAC7C2N,EAAenM,OAAO9N,IACtB6J,EAAkB5M,GAAgB4M,EAAiBvM,EAAU2c,GASnE,GAAIJ,IAAY5Z,GAAwB,CACtC,IAAI0W,EAAa9M,EAAgBwB,eAAe/N,GAC5C2c,EAAiB,IAAIvc,GAASiZ,EAAWrK,WAC7C2N,EAAelf,IAAIiF,GAA2B8Z,GAC9CjQ,EAAkB5M,GAAgB4M,EAAiBvM,EAAU2c,GAI/D,GAAIJ,IAAY5Z,GAAqB,CAEnC,IAAI0W,EAAa9M,EAAgBwB,eAAe/N,GAC5C2c,EAAiB,IAAIvc,GAASiZ,EAAWrK,WACzC8N,EAAoBzD,EAAWjL,UACnCuO,EAAelf,IAAIiF,GAA2Boa,GAC9CvQ,EAAkB5M,GAAgB4M,EAAiBvM,EAAU2c,GAG7D,IAAII,EAAwB,IAAIhd,iBAAe,CAC7CC,SAAUA,EACVC,YAAa6c,EAAkBxL,OAC/BpR,UAAWF,EACXG,aAAc,IAEhBoM,EAAkB1M,WAASyO,YAAY/B,EAAiBwQ,EAAuB,WAQjF,OAJAlR,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,qBACnEV,EAAiBC,cAAYC,eAAeF,EAAgBF,GAC5DwO,EAAW3O,eAAeK,GAEnB,WAGImR,GAA6B,SAACvR,EAAa+P,EAASrB,GAAsC,IAA1BiB,EAAyB,wDACpG,IAAKjB,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAIT,IAAMqF,EAA4BzB,EAAQ,GACpCzC,EAAqByC,EAAQ,GAC/B3P,EAAiBJ,EACjBc,EAAkBV,EAAeW,oBACjCb,EAAoBE,EAAenL,eACnCV,EAAW2L,EAAkBiK,cAC7ByD,EAAa9M,EAAgBwB,eAAe/N,GAC5C2c,EAAiBtD,EAAWrK,UAC5B8J,EAAkB6D,EAAenf,IAAIkF,IACrCia,EAAe7d,IAAI4D,IACnB,EAGJ,GAA6B,aAAzB2W,EAAW3J,UAA0B,CACvCnD,EAAkB1M,WAAS6c,aAAanQ,EAAiBZ,EAAmB,YAG5E,IAAIgR,EAAiB,IAAIvc,GAASiZ,EAAWrK,WACzCkO,GAAc,EACZC,EAAkB,SAACC,GACnBT,EAAenf,IAAI4f,KACrBT,EAAenM,OAAO4M,GACtBF,GAAc,IAKlBC,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAChBya,EAAgBza,IAEZwa,IACF3Q,EAAkB5M,GAAgB4M,EAAiB,KAAMoQ,EAAgBhR,IAI3E,IAAIuD,EAAY3C,EAAgB8C,cAAcgK,EAAWtK,UACrDG,IACE6J,IACFxM,EAAkB+C,GAA4B/C,EAAiB2C,EAAUH,SAAU+J,IAErFnN,EAAoB,UAEjB,CACL,IAAMzO,EAAiB2O,EAAenL,eAChCoN,EAAWvB,EAAgBwB,eAAe7Q,EAAe0Y,eAC3DjH,EAAYpC,EAAgBuC,eAAe5R,EAAe0Y,eAC9D,IAAKjH,EAAW,MAAO,cAKvB,GAAIgO,EAAe7d,IAAI4D,MAA6BiM,EAAUI,UAAY+J,EAAkB,EAC1FvM,EAAkB4O,GAA4B1P,EAAa0O,GAAY,OAClE,CAEL,IAAIkD,EAAiB5O,GAA+BlC,EAAiBvM,EAAU8Y,GAC3EwE,EAAoBD,EAAetO,SACvCoC,QAAQoM,OAAOF,EAAgB,qDAE/B,IADA,IAAIG,EAAYjR,EAAgB8C,cAAcrP,GAEvCwd,GADM,CAEX,IAAIC,EAAgBD,EAAUxO,UAC1B0O,EAAiBD,EAAcjgB,IAAIkF,IACnC+a,EAAc3e,IAAI4D,IAClB,EACJ,GAAIgb,GAAkB5E,EAAiB,MAEvC,IAAI6E,EAAmB,IAAIvd,GAASqd,GACpCE,EAAiBlgB,IAAIiF,GAAyB4a,GAC9C/Q,EAAkB5M,GAAgB4M,EAAiBiR,EAAUzO,SAAU4O,GACvEH,EAAYjR,EAAgB8C,cAAcmO,EAAUzO,UAItDJ,EAAYpC,EAAgBwB,eAAeY,EAAUI,UACrD,IAAM6O,EAAuB,IAAI7d,iBAAe,CAC9CC,SAAU8N,EAASiB,SACnB9O,YAAa,EACbC,UAAWyO,EAAUI,SACrB5O,aAAcwO,EAAUuK,cAiB1B,GAfA3M,EAAkB1M,WAASyO,YAAY/B,EAAiBqR,EAAsB,YAG9EjS,EAAoB,IAAI5L,iBAAe,CACrCC,SAAU2O,EAAUI,SACpB9O,YAAa0O,EAAUuK,YACvBhZ,UAAWyO,EAAUI,SACrB5O,aAAcwO,EAAUuK,cAI1BlZ,EAAW2O,EAAUI,SACrBsK,EAAa9M,EAAgBwB,eAAe/N,GAGxC+Y,EACF,GAAIkE,EAA2B,CAC7B,IAAItO,EAAYpC,EAAgBwB,eAAekP,GAC3CrO,EAAgBD,EAAUK,UAC1B6O,EAAsBjP,EAAcpR,IAAIkF,IACxCkM,EAAc9P,IAAI4D,IAClB,EACJ6J,EAAkB+C,GAChB/C,EACA0Q,EACAnE,EACA+E,QAGFtR,EAAkB+C,GAA4B/C,EAAiBvM,EAAU8Y,IAMjF,OAAIsC,EAAqB7O,GAGzBV,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAChE4E,QAAQoM,OAA0B,OAAnB1R,EAAyB,mDACpCF,IACFE,EAAiBC,cAAYC,eAAeF,EAAgBF,IAE9DwO,EAAW3O,eAAeK,GAEnB,YAGHiS,GAA0B,SAACrS,EAAa+P,EAASrB,GACrD,IAAKA,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAIT,IAAM1a,EAAiBuO,EAAY/K,eAC7BiP,EAAc6L,EAAQ,GACtBzC,EAAqByC,EAAQ,GAC/B3P,EAAiBJ,EACjBc,EAAkBd,EAAYe,oBAC5BsB,EAAWvB,EAAgBwB,eAAe4B,GAC1CT,EAAY3C,EAAgB8C,cAAcM,GAC1CoO,EAAe7O,EAAUH,SACzBS,EAAe1B,EAASkB,UACxBG,EAAgBD,EAAUF,UAC1B8J,EAAkBtJ,EAAahS,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,EAC9G0M,EAAkBD,EAAc3R,IAAIkF,IACtCyM,EAAcrQ,IAAI4D,IAClB,EACEsb,EAAsBxO,EAAahS,IAAIkF,IACzC8M,EAAa1Q,IAAI4D,IACjB,EAKEub,EAAgB1R,EAAgB8C,cAAc0O,GACpD,GAAIE,GAAiBA,EAAcjP,UAAUlQ,IAAI4D,MAA6Bqb,EAG5E,GAAI5O,EAAcrQ,IAAI4D,MAA6BiN,EAEjD,IADA,IAAI6N,EAAYjR,EAAgB8C,cAAc0O,GAGvCP,GAFM,CAGX,IAAIU,EAAeV,EAAUzO,SACzB0O,EAAgBD,EAAUxO,UAC1B0O,EAAiBD,EAAcjgB,IAAIkF,IACnC+a,EAAc3e,IAAI4D,IAClB,EAGJ,GAAIgb,EAAiB,GAAK5E,EAAiB,MAG3C,IAAIqF,EAAW,IAAI/d,GAASqd,GAC5BU,EAAS1gB,IAAIiF,GAA2Bgb,EAAiB,GAGrDA,EAAiB,IAAMtO,GACzB+O,EAAS1gB,IAAIiF,GAAyBiN,GAKxC6N,GADAjR,EAAkB5M,GAAgB4M,EAAiB2R,EAAcC,IACrC9O,cAAc6O,OAEvC,CAEL,IAAIV,EAAYjR,EAAgB8C,cAAc0O,GAC1CrE,EAAgBjL,GAA+BlC,EAAiBwR,EAAc3O,GAElF+B,QAAQoM,OAAO7D,EAAe,mDAE9B,IADA,IAAI0E,EAAmB1E,EAAc3K,SAE9ByO,GADM,CAEX,IAAIU,EAAeV,EAAUzO,SACzB0O,EAAgBD,EAAUxO,UAC1B0O,EAAiBD,EAAcjgB,IAAIkF,IACnC+a,EAAc3e,IAAI4D,IAClB,EAGJ,GAAIgb,GAAkBtO,EAAiB,MAGvC,GAAIsO,EAAiB,IAAMtO,EAAiB,CAC1C,IAAI+O,EAAW,IAAI/d,GAASqd,GAC5BU,EAAS1gB,IAAIiF,GAAyB0b,GACtC7R,EAAkB5M,GAAgB4M,EAAiB2R,EAAcC,GAGnEX,EAAYjR,EAAgB8C,cAAc6O,IAMhD,IAAMN,EAAuB,IAAI7d,iBAAe,CAC9CG,UAAWyP,EACXxP,aAAc2N,EAASoL,YACvBlZ,SAAUkP,EAAUH,SACpB9O,YAAa,IAIf,GAFAsM,EAAkB1M,WAASyO,YAAY/B,EAAiBqR,EAAsB,YAE1E7E,EAEF,GAAIjL,EAAS4B,YAAc/M,IAA6BmW,IAAoB1J,EAC1E7C,EAAkB+C,GAA4B/C,EAAiBoD,EAAamJ,EAAiBkF,OACxF,CACL,IAAMK,EAAe9R,EAAgB8C,cAAcM,GACnDpD,EAAkB+C,GAA4B/C,EAAiB8R,EAAatP,SAAUK,EAAiB,GAS3G,OAJAvD,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,sBAChEV,EAAiBC,cAAYC,eAAeF,EAAgB3O,GAC5Did,EAAW3O,eAAeK,GAEnB,WAGHyS,GAAwC,SAAC7S,EAAa+P,EAASrB,GACnE,IAAKA,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,IACP,cAGT,IAAIrL,EAAkBd,EAAYe,oBAC9BtP,EAAiBuO,EAAY/K,eAC7B4Z,EAAgBpd,EAAeqY,cAC/BH,EAAclY,EAAeuY,iBAC7B8E,EAAcrd,EAAesY,YAC7B+I,EAAiBhS,EAAgB8C,cAAckL,GAG/CK,EAAarO,EAAgBwB,eAAeuM,GAMhD,GALIM,EAAW1B,YAAc9D,IAC3BA,EAAcwF,EAAW1B,aAIvBqF,EAAgB,CAClB,IAAIzQ,EAAWyQ,EACXC,EAAYjS,EAAgBwB,eAAeuM,GAC3C9K,EAAe1B,EAASkB,UACxByP,EAAgBD,EAAUxP,UAC1B0P,EAAgBlP,EAAahS,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,EAI5Gic,EAAaD,GAHID,EAAcjhB,IAAIkF,IACnC+b,EAAc3f,IAAI4D,IAClB,GAIJ,GAAIic,EAAa,EAEf,IADA,IAAInB,EAAY1P,EAET0P,GADM,CAEX,IAAIC,EAAgB3P,EAASkB,UACzB0O,EAAiBD,EAAcjgB,IAAIkF,IACnC+a,EAAc3e,IAAI4D,IAClB,EACJ,GAAIgb,GAAkBgB,EAAe,MAErC,IAAIf,EAAmB,IAAIvd,GAASqd,GACpCE,EAAiBlgB,IAAIiF,GAA2Bgb,EAAiBiB,GAEjEnB,GADAjR,EAAkB5M,GAAgB4M,EAAiBoR,IACvBtO,cAAcmO,EAAUzO,WAM1D,IAAM8M,EAAiBtP,EAAgBwB,eAAe7Q,EAAe0Y,eAAelG,UACpF,GAAIqI,GAAgBva,IAAIqe,GAAiB,CACvC,IAAIhQ,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBACpEA,EAAkByQ,GAA2BnR,EAAgB2P,EAASrB,GAAY,GAIpF5N,EAAkB1M,WAASyO,YAAY/B,EAAiBrP,EAAgB,YAGxEqP,EAAkBwD,GAA0BxD,GAG5C,IAAIV,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,gBAapE,OAZAV,EAAiBC,cAAYC,eAC3BF,EACA,IAAI9L,iBAAe,CACjBG,UAAWoa,EACXna,aAAciV,EACdpV,SAAUsa,EACVra,YAAamV,KAIjB+E,EAAW3O,eAAeK,GAEnB,WAGH+S,GAAwC,SAACnT,EAAa0O,GAC1D,IAAMjb,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAY/K,eAGnC,IAAKxD,EAAeyP,cAAe,MAAO,cAG1C,IAAMyM,EAAgBlc,EAAe0Y,cAC/B8D,EAAgBxa,EAAa4P,eAAesK,GAClD,IAAKM,EAAe,MAAO,cAG3B,IAAM0E,EAAmB1E,EAAc3K,SACnClD,EAAiBC,cAAYC,eAC/BN,EACA,IAAI1L,iBAAe,CACjBC,SAAUoe,EACVne,YAAa,EACbC,UAAWke,EACXje,aAAc,KAQlB,OALAga,EAAW3O,eAAeK,GAG1BsO,EAAW0E,kBAAkBT,EAAkBzZ,IAExC,WAGHma,GAA0C,SAACrT,EAAa0O,GAC5D,IAAMjb,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAY/K,eAGnC,IAAKxD,EAAeyP,cAAe,MAAO,cAG1C,IAAMyM,EAAgBlc,EAAe0Y,cAC/B1G,EAAYhQ,EAAamQ,cAAc+J,GAC7C,IAAKlK,EAAW,MAAO,cAGvB,IAAM6O,EAAe7O,EAAUH,SAC3BlD,EAAiBC,cAAYC,eAC/BN,EACA,IAAI1L,iBAAe,CACjBC,SAAU+d,EACV9d,YAAa,EACbC,UAAW6d,EACX5d,aAAc,KAQlB,OALAga,EAAW3O,eAAeK,GAG1BsO,EAAW0E,kBAAkBd,EAAcpZ,IAEpC,WAGHoa,GAAuC,SAACtT,EAAa0O,EAAYvd,GAA+B,IAArBoiB,EAAoB,uDAAT,KAC1F,GAAiB,OAAbA,EAAmB,MAAO,cAE9B,IAAM9hB,EAAiBuO,EAAY/K,eAC7B0Y,EAAgBxc,GAAsBM,EAAe0Y,cACvDrJ,EAAkBd,EAAYe,oBAG5B6M,EAAa9M,EAAgBwB,eAAeqL,GAC9CC,EAAW3J,YAAc/M,KAC3Bqc,EAASC,gBACTD,EAASE,qBAIX,IAAMxF,EAAgBnN,EAAgBuC,eAAesK,GACrD,IAAKM,EAAe,MAAO,cAC3B,GAAI3B,GAAgBva,IAAIkc,EAAchK,WAEpC,OAAOkP,GACL9S,cAAYC,eACVN,EACA,IAAI1L,iBAAe,CACjBC,SAAUoZ,EACVnZ,YAAa,EACbC,UAAWkZ,EACXjZ,aAAc,KAGlBga,GAMJ,IAAMgF,EAAsBzF,EAAcR,YACpCkF,EAAmB1E,EAAc3K,SACjCpD,EAAoB,IAAI5L,iBAAe,CAC3CC,SAAUoe,EACVne,YAAakf,EACbjf,UAAWke,EACXje,aAAcgf,IAEVtT,EAAiBC,cAAYC,eAAeN,EAAaE,GAK/D,OAFAwO,EAAW3O,eAAeK,GAEnB,WAGHuT,GAAmC,SAAC3T,EAAa0O,EAAYvd,GAA+B,IAArBoiB,EAAoB,uDAAT,KACtF,GAAiB,OAAbA,EAAmB,MAAO,cAE9B,IAAM9hB,EAAiBuO,EAAY/K,eAC7B0Y,EAAgBxc,GAAsBM,EAAe0Y,cACvDrJ,EAAkBd,EAAYe,oBAG5B6M,EAAa9M,EAAgBwB,eAAeqL,GAC9CC,EAAW3J,YAAc/M,KAC3Bqc,EAASC,gBACTD,EAASE,qBAIX,IAAMhQ,EAAY3C,EAAgB8C,cAAc+J,GAChD,IAAKlK,EAAW,MAAO,cACvB,GAAI6I,GAAgBva,IAAI0R,EAAUQ,WAEhC,OAAOoP,GACLhT,cAAYC,eACVN,EACA,IAAI1L,iBAAe,CACjBC,SAAUoZ,EACVnZ,YAAa,EACbC,UAAWkZ,EACXjZ,aAAc,KAGlBga,GAMJ,IAAM4D,EAAe7O,EAAUH,SACzBpD,EAAoB,IAAI5L,iBAAe,CAC3CC,SAAU+d,EACV9d,YAAa,EACbC,UAAW6d,EACX5d,aAAc,IAEV0L,EAAiBC,cAAYC,eAAeN,EAAaE,GAK/D,OAFAwO,EAAW3O,eAAeK,GAEnB,WAGHwT,GAA6C,SAAClF,GAElD,OADAA,EAAWmF,kBAAkB,iBACtB,WAGHC,GAAoC,SAACpF,GAEzC,OADAA,EAAWmF,kBAAkB,QACtB,WAGHE,GAAoC,SAACrF,GAEzC,OADAA,EAAWxH,aACJ,WAGH8M,GAAoC,SAAChU,EAAa0O,GACtD,IAAMjd,EAAiBuO,EAAY/K,eAEnC,OADAyZ,EAAWtc,aAAaX,GACjB,WAGHwiB,GAAoC,SAACjU,EAAa0O,GACtD,IAAMjd,EAAiBuO,EAAY/K,eAEnC,OADAyZ,EAAWlc,aAAaf,GACjB,WAGHyiB,GAA6C,SAAClU,EAAa0O,EAAYzG,GAG3E,IAAMxW,EAAiBuO,EAAY/K,eAC7BV,EAAW9C,EAAe0Y,cAE1B9H,EADerC,EAAYe,oBACHuB,eAAe/N,GACvCsN,EAAYQ,EAAS2L,YAAYvc,EAAe8Y,kBAAkC,SAAdtC,GAAwB,EAAI,IAGlG/H,EAAoB,KAexB,GAdAmC,EAASE,kBACP,SAACnP,GACC,GAAIA,EAAMoP,SAAWX,EAAW,OAAO,KAEzC,SAACY,EAAOC,GACNxC,EAAoB,IAAI5L,iBAAe,CACrCG,UAAWF,EACXG,aAAc+N,EACdlO,SAAUA,EACVC,YAAakO,OAKfxC,EAAmB,CACrB,IAAIE,EAAiBC,cAAYC,eAAeN,EAAaE,GAC7DwO,EAAW3O,eAAeK,GAI5B,OADAsO,EAAWlc,aAAa0N,GACjB,WAGIiU,GAAmC,SAACnU,EAAa0O,GAG5D,IAAMjd,EAAiBuO,EAAY/K,eAEnC,GAAIxD,EAAeyP,cAAe,CAEhC,IAGIJ,EACAV,EAJE3M,EAAeuM,EAAYe,oBAC3B6M,EAAana,EAAa6O,eAAe7Q,EAAe0Y,eACxDgG,EAAgB1e,EAAe8Y,iBAKjCkG,EAAmB7C,EAAW8C,iBAAiBP,EAAgB,GAC/DQ,EAAc/C,EAAWI,YAAYmC,EAAgB,GAGzDrP,EAAkB1M,WAAS6N,WAAWxO,EAAchC,EAAgB,IAAKgf,EAAkBE,GAC3FvQ,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAKhE4N,EAAW3O,eAAeK,KAMjB6P,GAAmB,SAACjQ,EAAa+P,EAASrB,EAAYvd,GAA+B,IAArBoiB,EAAoB,uDAAT,KACtF,OAAQxD,GACN,KAAK7D,GACH,OAAOuC,GAA4BzO,EAAa0O,GAElD,KAAKxC,GACH,OAAOwD,GAA4B1P,EAAa0O,GAElD,KAAKxC,GACH,OAAO,EAET,KAAKA,GACH,OAAOgE,GAA0ClQ,EAAa+P,EAASrB,GAEzE,KAAKxC,GACH,OAAO2G,GAAsC7S,EAAa+P,EAASrB,GAErE,KAAKxC,GACH,OAAOyH,GAAiC3T,EAAa0O,EAAYvd,EAAUoiB,GAE7E,KAAKrH,GACH,OAAOoH,GAAqCtT,EAAa0O,EAAYvd,EAAUoiB,GAEjF,KAAKrH,GACH,OAAOiH,GAAsCnT,EAAa0O,GAE5D,KAAKxC,GACH,OAAOmH,GAAwCrT,EAAa0O,GAE9D,KAAKxC,GACH,OAAO0H,GAA2ClF,GAEpD,KAAKxC,GACH,OAAO4H,GAAkCpF,GAE3C,KAAKxC,GACH,OAAO6H,GAAkCrF,GAE3C,KAAKxC,GACH,OAAO8H,GAAkChU,EAAa0O,GAExD,KAAKxC,GACH,OAAO+H,GAAkCjU,EAAa0O,GAExD,KAAKxC,GACH,OAAOgI,GAA2ClU,EAAa0O,EAAY,QAE7E,KAAKxC,GACH,OAAOgI,GAA2ClU,EAAa0O,EAAY,SAE7E,KAAKxC,GACH,OAAOiI,GAAiCnU,EAAa0O,GAEvD,QACE,UAAWqB,UAAmB,IAAMA,EAAQlK,OAAS,GAAKkK,EAAQ,KAAO7D,GACvE,OAAQ6D,EAAQ,IACd,KAAK7D,GACH,OAAOqF,GAA2BvR,EAAa+P,EAASrB,GAE1D,KAAKxC,GACH,OAAOmG,GAAwBrS,EAAa+P,EAASrB,GAM3D,OAAOoB,GAAyB9P,EAAa+P,EAASrB,KAkS/C0F,GAAkB,SAACC,EAAQC,EAAQ5F,GAC9C,OAAQ4F,GACN,KAAKrb,GACH,OA/GqB,SAACob,EAAQ3F,GAClC,IAAKA,EAAW6F,WAEd,OADA7O,QAAQC,MAAMwG,IACP,KAGT,IAAMjX,EAAYmf,EAAOpf,eACnBuf,EAAStf,EAAUuf,YAGnBC,EAAkBxf,EAAUyf,qBAC5BC,EAAgB1f,EAAU2f,mBAChC,OAAIH,EAAgBI,MAAQF,EAAcE,KAAOJ,EAAgBK,SAAWH,EAAcG,QAGvE,IAAfP,EAAOM,KAA+B,IAAlBN,EAAOO,aAG/BrG,EAAW6F,WAAWrI,IA6FX8I,CAAmBX,EAAQ3F,GAEpC,KAAKzV,GACH,OA7FuB,SAACob,EAAQ3F,GACpC,IAAKA,EAAW6F,WAEd,OADA7O,QAAQC,MAAMwG,IACP,KAGT,IAAMjX,EAAYmf,EAAOpf,eACnBuf,EAAStf,EAAUuf,YACnBQ,EAAcZ,EAAOa,aACrBC,EAAWF,EAAYxH,YAAc,EACrC2H,EAAuBH,EAAYI,QAAQF,GAAUtP,OAGrD6O,EAAkBxf,EAAUyf,qBAC5BC,EAAgB1f,EAAU2f,mBAChC,OAAIH,EAAgBI,MAAQF,EAAcE,KAAOJ,EAAgBK,SAAWH,EAAcG,QAGtFP,EAAOM,MAAQK,GAAYX,EAAOO,SAAWK,QAGjD1G,EAAW6F,WAAWrI,IAwEXoJ,CAAqBjB,EAAQ3F,GAEtC,KAAKzV,GACH,OAxEuB,SAACob,EAAQ3F,GACpC,IAAKA,EAAW6F,WAEd,OADA7O,QAAQC,MAAMwG,IACP,KAGT,IAAMjX,EAAYmf,EAAOpf,eACnBuf,EAAStf,EAAUuf,YAGnBC,EAAkBxf,EAAUyf,qBAC5BC,EAAgB1f,EAAU2f,mBAChC,OAAIH,EAAgBI,MAAQF,EAAcE,KAAOJ,EAAgBK,SAAWH,EAAcG,QAGvE,IAAfP,EAAOM,KAA+B,IAAlBN,EAAOO,aAG/BrG,EAAW6F,WAAWrI,IAsDXqJ,CAAqBlB,EAAQ3F,GAEtC,KAAKzV,GACH,OAtDwB,SAACob,EAAQ3F,GACrC,IAAKA,EAAW6F,WAEd,OADA7O,QAAQC,MAAMwG,IACP,KAGT,IAAMjX,EAAYmf,EAAOpf,eACnBuf,EAAStf,EAAUuf,YACnBQ,EAAcZ,EAAOa,aACrBC,EAAWF,EAAYxH,YAAc,EACrC2H,EAAuBH,EAAYI,QAAQF,GAAUtP,OAGrD6O,EAAkBxf,EAAUyf,qBAC5BC,EAAgB1f,EAAU2f,mBAChC,OAAIH,EAAgBI,MAAQF,EAAcE,KAAOJ,EAAgBK,SAAWH,EAAcG,QAGtFP,EAAOM,MAAQK,GAAYX,EAAOO,SAAWK,QAGjD1G,EAAW6F,WAAWrI,IAiCXsJ,CAAsBnB,EAAQ3F,GAEvC,KAAKzV,GACH,OAjC4B,SAACob,EAAQ3F,GACzC,OAAKA,EAAW6F,WAOM,KADFF,EAAOoB,aAM3B/G,EAAWgH,SACXhH,EAAW+E,yBACX/E,EAAW6F,WAAW,CAACrI,GAA+BA,GAAiC,MAAM,MAb3FxG,QAAQC,MAAMwG,KACP,GA8BEwJ,CAA0BtB,EAAQ3F,GAE3C,QAEE,OADAhJ,QAAQC,MAAR,6CAAoD2O,KAC7C,ICxzDPsB,GAA2B,SAACC,EAAGC,GAEnC,IADA,IAAIC,EAAW1f,SAAS2f,kBAAkBH,EAAGC,GACpClQ,EAAI,EAAGA,EAAImQ,EAASlQ,OAAQD,IACnC,GAA8B,yBAA1BmQ,EAASnQ,GAAG6C,WAAwC7C,EAAI,EAAImQ,EAASlQ,OACvE,OAAOkQ,EAASnQ,EAAI,GAGxB,OAAOmQ,EAAS,IAGZE,GAA+B,SAACvN,GACpC,IAAKA,EAAQ,OAAO,KACpB,IAAIwN,EAAaxN,EAEjB,GAA4B,SAAxBwN,EAAWC,SAAqB,OAAO,KAC3C,MAAQD,EAAWE,aAAa,UAAU,CACxC,GAAIF,IAAe7f,SAASK,KAAM,OAAO,KACzCwf,EAAaA,EAAWG,WAG1B,OAAOH,GAGHI,GAA8B,SAACC,GACnC,OAAKA,EAEiBA,EAAQF,WACCG,aAAa,mBAAmBC,MAAM,KAAK,GAHrD,MAQjBC,GAA4B,SAACzR,EAAKxR,GACtC,IAEMU,EADQV,EAAa6O,eAAe2C,GAClB1B,UAGxB,OAFQpP,EAAUpC,IAAIkF,IAA6B9C,EAAUd,IAAI4D,IAA6B,GAK1F0f,GAAkB,SAACljB,EAAcmjB,EAAaC,EAAaC,GAC/D,IAAM9W,EAAcK,cAAY0W,kBAAkBtjB,GAElD,OADuBujB,mBAAiBL,gBAAgB3W,EAAa4W,EAAaC,EAAaC,GACzE/V,qBAGlBkW,GAAyB,SAACnP,EAAGlW,EAAUoO,EAAakX,GACxD,IAAMC,EAASrP,EAAEsP,QACfC,EAASvP,EAAEwP,QAEb,GAAsB,OADA1B,GAAyBuB,EAAQE,GAC3B,OAAOrX,EAEnC,IAAMvM,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAYe,oBAC7BjN,EAAWL,EAAaC,cACxBua,EAAgBxa,EAAa4P,eAAe6T,EAAe,IAC3DvE,EAAmB1E,EAAgBA,EAAc3K,SAAW,KAC5DpD,EAAoB,IAAI5L,iBAAe,CAC3CG,UAAWyiB,EAAe,GAC1BxiB,aAAc,EACdH,SAAU2iB,EAAe,GACzB1iB,YAAa,IAEX4L,EAAiBJ,EACjBc,EAAkBrN,EAGhB8jB,EAAQ,uBAAmB3lB,GAC3B4lB,EAAanhB,SAASC,eAAeihB,GAAUE,wBAC/CC,EAAuBF,EAAWG,IAClCC,EAA0BJ,EAAWK,OACrCC,EAA0BN,EAAWO,MACrCC,EAAyBX,GAAUK,EACnCO,EAAuBZ,GAAUO,EAIjCM,EAAef,GADAK,EAAWW,KAAOvhB,GR1FR,IQ4FzBwhB,EAAQ/I,KAAKgJ,MAAMH,EAAethB,GAAQE,KAG5CwhB,EAAiB,KACrB,GAAIN,EACFM,EAAiB9kB,EAAiBC,QAC7B,GAAIwkB,EACTK,EAAiBzkB,GAAgBJ,OAC5B,CACL,IAAM8kB,EAAgB3C,GAAyBkC,EAA0BlhB,GRrG5C,GQqGwEygB,GAC/FmB,EAAevC,GAA6BsC,GAClDD,EAAiBhC,GAA4BkC,GAG/C,IAAKF,EAIH,OAHA5S,QAAQ+S,KAAK,6BAGNzY,EAIT,IAAgD,IAA5CkX,EAAehhB,QAAQoiB,GAAwB,OAAOtY,EAG1D,IAAI0Y,EAAcJ,EACdxB,EAAgBkB,EAAyB,SAAW,QAGxD,GAAIM,IAAmB3F,GAAoBqF,EAAwB,CAEjE,IAAK,IAAIpS,EAAI,EAAGA,EAAIsR,EAAerR,OAAQD,IAAK,CAC9C,IAAM+S,EAAoBzB,EAAetR,GACnCgT,EAAuB9kB,EAAST,IAAIslB,GAAmBlL,YAC7D,IAAKiL,EAAa,CAChBhT,QAAQC,MAAR,2CACA,MAEF7E,EAAkB6V,GAChB7V,EACArN,EAAa6O,eAAeqW,GAC5B,IAAIrkB,iBAAe,CACjBG,UAAWikB,EACXhkB,aAAckkB,EACdrkB,SAAUmkB,EACVlkB,YAAaokB,IAEf9B,GAEGkB,IAAwBU,EAAcC,GAI7C7X,EAAkBA,EAAgB+X,MAAM,CACtCC,gBAAiBrnB,EACjBsnB,eAAgB7Y,EAAkBlO,IAAI,YAAY,KAMtD,IAAIoR,GAAmB,EACvB,IAAK4U,EAAwB,CAC3B,IAAI7jB,EAAYL,EAAST,IAAIilB,GAAgB/U,UAE3CH,EADEjP,EAAUpC,IAAIkF,IACE9C,EAAUd,IAAI4D,IAEd,EAGPmM,EAAXgV,EAAQ,EAAqB,EACV/I,KAAKC,IAAIlM,EAAkB,EAAGgV,GAGrD,IAAMY,EAAyBllB,EAAST,IAAI6jB,EAAe,IAAI3T,UAIzD0V,EAAmB7V,GAHQ4V,EAAuBjnB,IAAIkF,IACxD+hB,EAAuB3lB,IAAI4D,IAC3B,GAIJ,GAAyB,IAArBgiB,EAIF,OAHAnY,EAAkBwD,GAA0BxD,GAC5CV,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,wBAChEV,EAAiBC,cAAY6Y,gBAAgB9Y,EAAgBF,GAK/D,IAAK,IAAI0F,EAAI,EAAGA,EAAIsR,EAAerR,OAAQD,IAAK,CAC9C,IAAMuT,EAAUjC,EAAetR,GAEzBzR,EADYL,EAAST,IAAI8lB,GACH5V,UACxBa,EAAe,IAAIzP,GAASR,GAC5BgQ,EAAiB,EACjBhQ,EAAUpC,IAAIkF,MAChBkN,EAAiBhQ,EAAUd,IAAI4D,KAGjCkN,GAAkB8U,EAClB9U,EAAiBkL,KAAKC,IAAInL,EAAgBf,EAAkB,GAE5DA,EADAe,EAAiBkL,KAAK+J,IAAIjV,EAAgB,GAG1CC,EAAapS,IAAIiF,GAA2BkN,GAC5CrD,EAAkB5M,GAAgB4M,EAAiBqY,EAAS/U,GAY9D,OARAtD,EAAkBA,EAAgB+X,MAAM,CACtCC,gBAAiBrnB,EACjBsnB,eAAgB7Y,EAAkBlO,IAAI,YAAY,KAEpD8O,EAAkBwD,GAA0BxD,GAC5CV,EAAiBC,cAAY6Y,gBAAgB9Y,EAAgBF,GAC7DE,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,yBAKrDuY,GAAc,SAACvR,EAAGnW,EAAUC,EAAUT,GACjD2W,EAAEwR,kBACF5mB,EAAqBf,EAAUC,EAAUT,IAG9BooB,GAAe,SAACzR,EAAGnW,EAAUC,GACxCkW,EAAEwR,kBACF5mB,EAAqBf,EAAUC,EAAU,O,qBCnK5B4nB,GA5CS,SAAC5S,GAEvB,IAAMzV,EAAWyV,EAAMzV,SACjBS,EAAWgV,EAAMhV,SACjB2N,EAAWqH,EAAMrH,SACjBka,EAAY7S,EAAM6S,UAClBC,EAAc9S,EAAM8S,YACpBC,EAAY,2BAAuB/nB,GAGnCD,EAAWoV,cACX6S,EAAiB5S,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,MACnEioB,EAAa7S,aAAY,SAAClV,GAAD,OAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIzB,MACjEkoB,EAAoBF,EAAevmB,IAAItC,GACvCiP,EAAc6Z,EAAWxmB,IAAI,WAC7BoV,EACJ,0BACClJ,EAAW,GAAK,2BAChBua,IAAsB3oB,EAAW,GAAK,oBAGnCwB,EAAmB,SAAConB,GAAD,OAAkBC,EAAkBroB,EAAUC,EAAUmoB,IAG7E7O,EAAQ,KAKZ,OAJIuO,IACFvO,EAAQ,CAAEyM,IAAI,GAAD,OAAK8B,EAAL,SAIb,sBACEhR,UAAWA,EACX4C,iBAAiB,EACjB4O,UAAU,OACV/O,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OACpBQ,YAAa,SAACpS,GAAD,OD+KQ,SACzBA,EACAvI,EACA4a,EACAxnB,EACAqN,EACA7O,GAEI,IADJipB,EACG,uDADkBnD,GAErB,IAAI1X,EAAJ,CAIAuI,EAAE4E,iBACF5E,EAAEwR,kBAoBF,IAjBA,IAAM7nB,EAAiBuO,EAAY/K,eAC7BxB,EAAeuM,EAAYe,oBAC3BsZ,EAAW5oB,EAAe6oB,cAG1B5R,EAASuN,GAA6BnO,EAAEY,QACxC4P,EAAiBhC,GAA4B5N,GAG7C6R,EAAa7R,EAAO+O,wBACpB+C,EAAcD,EAAWE,MACzBC,EAAeH,EAAWI,OAG1B7L,EAAcuL,EAAW5oB,EAAesY,YAAc5Y,EACxDkR,EAAW5O,EAAa6O,eAAe+X,EAAW5oB,EAAeqY,cAAgB3Y,GACjF+lB,EAAiB,GACd7U,EAASiB,WAAawL,GAC3BoI,EAAe1V,KAAKa,EAASiB,UAC7BjB,EAAW5O,EAAamQ,cAAcvB,EAASiB,UAEjD4T,EAAe1V,KAAKa,EAASiB,UAGzB4T,EAAehhB,QAAQoiB,GAAkB,IAC3CpB,EAAiB,CAACoB,IAQpB,IAHA,IAAIsC,GAAW,EACX7W,GAFJ1B,EAAW5O,EAAa6O,eAAegW,IAEX/U,UACxBsX,EAAiB9W,EAAahS,IAAIkF,IAA6B8M,EAAa1Q,IAAI4D,IAA6B,EAC1GoL,GAAYuY,IACjBvY,EAAW5O,EAAamQ,cAAcvB,EAASiB,aAG/CsX,KADA7W,EAAe1B,EAASkB,WACAxR,IAAIkF,OACxB2jB,GACE7W,EAAa1Q,IAAI4D,IAA6B4jB,IAGpC3D,EAAehhB,QAAQmM,EAASiB,UAAY,GAAG4T,EAAe1V,KAAKa,EAASiB,UAI9F,IAAMwX,EAAc9lB,OAAOwB,iBAAiBkS,EAAQ,MAC9CqS,EAAmBxkB,WAAWukB,EAAYE,iBAAiB,eAAeC,QAAQ,KAAM,KACxFC,EAAoB3kB,WAAWukB,EAAYE,iBAAiB,gBAAgBC,QAAQ,KAAM,KAC1FE,EAAqB5kB,WAAWukB,EAAYE,iBAAiB,iBAAiBC,QAAQ,KAAM,KAC5FG,EACJL,EAAmBnkB,GAAQykB,KACvBC,EAAoBP,EAAmBnkB,GAAQykB,KAC/CE,EACJf,EAAcU,EAAoBC,EAAqBvkB,GAAQI,IAG7DwkB,EAAQ9S,EAAO+S,WAAU,GAG7BD,EAAMtQ,MAAMuP,MAAZ,UAAuBD,EAAvB,MACAgB,EAAMtQ,MAAMyP,OAAZ,UAAwBD,EAAxB,MACAc,EAAMtQ,MAAMwQ,WAAZ,SAGA,IAAIC,EAAatlB,SAASulB,cAAc,OACxCD,EAAWE,UAAY,aACvBF,EAAWzQ,MAAM4Q,SAAW,WAC5BH,EAAWzQ,MAAMiN,KAAjB,UAA2BvhB,GAAQI,IAAnC,MACA2kB,EAAWzQ,MAAM2M,OAAjB,SAGA,IAAI7Y,EAAa3I,SAASulB,cAAc,OACxC5c,EAAWkM,MAAMiN,KAAjB,UAA2BmD,EAA3B,MACAtc,EAAWkM,MAAM4Q,SAAW,WAC5B9c,EAAWkM,MAAMuP,MAAjB,UAA4Bc,EAA5B,MACAvc,EAAWkM,MAAMyP,OAAjB,UAA6BD,GAAgBxD,EAAerR,OAAS,EAAIjP,GAAQ,KAAO,GAAxF,MACAoI,EAAWkM,MAAMyM,IAAjB,MACA3Y,EAAWkM,MAAMlM,WAAa,2BAC9BA,EAAWkM,MAAMxT,aAAe,SAGhC,IAAIqkB,EAAgB1lB,SAASC,eAAe6jB,GACxCjD,EAAerR,OAAS,GAC1B7G,EAAWgd,YAAYL,GAEzBI,EAAcC,YAAYhd,GAC1B+c,EAAcC,YAAYR,GAG1B7oB,EAAiB,CACfyoB,EACAjlB,GAAS,GACT,EACA,SAAC2R,EAAGlW,EAAUoO,GACZ,OAAOoa,EAAmBtS,EAAGlW,EAAUoO,EAAakX,IAEtDA,KCjSsBgD,CAAYpS,EAAGvI,EAAUoa,EAAchnB,EAAkBqN,EAAa7O,IAL5F,SAOE,sBAAKsX,UAAU,8BAA8ByC,MAAOA,EAApD,SACE,eAAC,KAAD,CAAmBA,MAAO,CAAE4Q,SAAU,WAAY/D,MAAO,kBCclDkE,GAlDI,SAACrV,GAElB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC1oB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAMd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAE1C,OACE,uBACEwF,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GV/CZ,GU+CP,OACpBwlB,MAAM,OACN/C,YAdgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAe3DooB,aAdiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IASrD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,eAAC,cAAD,gBAAiB9S,QCcR2V,GA3DS,SAAC3V,GAEvB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC1oB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAMd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAE1C,OACE,uBACEwF,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GX/CZ,GW+CP,OACpBwlB,MAAM,OACN/C,YAdgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAe3DooB,aAdiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IASrD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,sBACEjR,UAAU,gCACV4C,iBAAiB,EACjBH,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OAHtB,SAKE,sBAAKjR,UAAU,4BAAf,sBAEF,sBAAKA,UAAU,yBAAf,SACE,eAAC,cAAD,gBAAiB7B,U,UCiBV4V,GArEQ,SAAC5V,GAEtB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxCM,EAAwB7V,EAAMsV,WAAWO,sBACzChpB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAOd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAGpCyZ,IAAiBvoB,EAAUpC,IAAIkF,KACjC9C,EAAUd,IAAI4D,IAGlB,OACE,uBACEwR,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GZvDZ,GYuDP,OACpBwlB,MAAM,OACN/C,YApBgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAqB3DooB,aApBiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IAerD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,sBAAKjR,UAAU,+BAA+B4C,iBAAiB,EAAOH,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OAA1F,SACE,sBAAKjR,UAAU,2BAAf,SACE,eAACkU,GAAA,EAAD,CACEC,QAASF,EACTpU,QAAS,kBAAMmU,EAAsBtrB,IACrC2G,MAAM,UACN+kB,KAAK,cAIX,sBAAKpU,UAAU,wBAAf,SACE,eAAC,cAAD,gBAAiB7B,U,kFCqUnBkW,I,0sBAAqB,SAAClW,GAE1B,IAAMzV,EAAWyV,EAAMzV,SACjBS,EAAWgV,EAAMhV,SACjBsX,EAAWtC,EAAMsC,SAOjBT,EAAY,gCAJKzB,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,GAAUyB,IAAItC,MAGrDgB,IAAIZ,GAC2B,2BAA6B,IAE9F,OAAO,sBAAKsX,UAAWA,EAAhB,SAA4BS,MAG/B6T,GAAuB,SAACnW,GAE5B,IAAMhV,EAAWgV,EAAMhV,SACjBT,EAAWyV,EAAMzV,SACjB6rB,EAAqBpW,EAAMoW,mBAC3BC,EAAkBrW,EAAMqW,gBACxBC,EAAqBtW,EAAMsW,mBAC3BC,EAAuBvW,EAAMuW,qBAC7BC,EAAiBxW,EAAMwW,eACvBC,EAAezW,EAAMyW,aACrBC,EAAY1W,EAAM0W,UAClBC,EAAc3W,EAAM2W,YACpBC,EAAe5W,EAAM4W,aACrBC,EAAiB7W,EAAM6W,eACvBC,EAAevf,GAAmBpM,IAAIsrB,GAAgBlf,GAAmB9K,IAAIgqB,GAAgB,YAC7FM,EAAYtf,GAAyBtM,IAAIurB,GAAajf,GAAyBhL,IAAIiqB,GAAa,SAGhG3rB,EAAWoV,cACjB,EAAgDI,mBAAS,MAAzD,oBAAOyW,EAAP,KAAyBC,EAAzB,KACA,EAA0C1W,mBAAS,MAAnD,oBAAO2W,EAAP,KAAsBC,EAAtB,KACA,EAA8C5W,mBAAS,MAAvD,oBAAO6W,EAAP,KAAwBC,EAAxB,KACA,EAA8C9W,oBAAS,GAAvD,oBAAOK,EAAP,KAAwBC,EAAxB,KACMyW,EAAmBC,QAAQP,GAC3BQ,EAAgBD,QAAQL,GACxBO,EAAkBF,QAAQH,GAE1BlE,EADkB9S,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,SACtB8B,IAAIzB,GAAUyB,IAAItC,GAStDutB,EAA0B,WAC9BT,EAAoB,MACpB9qB,EAAepB,EAAUC,GAAU,GACnC2W,YAAW,WACT6U,MACC,IAiBCmB,EAAuB,SAACzW,GAC5BiW,EAAiB,MACjBhrB,EAAepB,EAAUC,GAAU,GACnC2W,YAAW,WACT6U,MACC,IAmBCvV,EAAyB,WAC7BJ,GAAmB,IAyBf+W,EAAsB,CAC1BC,KAAM,SAACC,EAAU5sB,GAAX,oBAAC,gBACF4sB,GADC,IAEJC,UAAW,QACXloB,SAAU,UAEZmoB,QAAS,SAACF,EAAU5sB,GAAX,oBAAC,gBACL4sB,GADI,IAEPG,OAAQ,qBACRlE,OAAQ,SACRmE,UAAW,YAEbC,oBAAqB,SAACL,EAAU5sB,GAAX,MAAsB,CACzCktB,QAAS,SAEXC,eAAgB,SAACP,EAAU5sB,GAAX,oBAAC,gBACZ4sB,GADW,IAEd/G,IAAK,WACLQ,KAAM,YAER+G,OAAQ,SAACR,EAAU5sB,GAAX,oBAAC,gBACJ4sB,GADG,IAEN9mB,QAAS,WACTnB,SAAU,aAId,OACE,uBAAKgS,UAAU,mCAAmC4C,iBAAiB,EAAnE,UACE,sBACE5C,UACE,kCAAoCqR,IAAsB3oB,EAAW,kCAAoC,IAF7G,SAKE,gBAACguB,GAAA,EAAD,CAAa1W,UAAU,+BAA+B2W,QAAQ,WAAWvC,KAAK,QAA9E,UACE,gBAACvW,GAAA,EAAD,CAAQmC,UAAU,0BAA0BH,QAjHpB,SAACR,GAC/B+V,EAAoB/V,EAAEuX,eACtBtsB,EAAepB,EAAUC,GAAU,IA+G7B,UACG8rB,EADH,aAIA,gBAACpX,GAAA,EAAD,CAAQmC,UAAU,0BAA0BH,QA/FvB,SAACR,GAC5BiW,EAAiBjW,EAAEuX,eACnBtsB,EAAepB,EAAUC,GAAU,IA6F7B,UACG+rB,EADH,aAIA,eAAC,mBAAD,CAAiBvhB,KAAMmhB,EAAvB,SACE,eAACjX,GAAA,EAAD,CACE4E,MAAO,CAAEoU,cAAe,QACxBhX,QAhFkB,WAC5Bb,GAAmB,GACnBc,YAAW,WACT6U,MACC,IA0EK,oBAQF,eAAC9W,GAAA,EAAD,CAAQgC,QAzEc,SAACR,GAC7BmW,EAAmBnW,EAAEuX,eACrBtsB,EAAepB,EAAUC,GAAU,IAuE7B,SACE,eAAC,KAAD,WAMN,eAAC2tB,GAAA,EAAD,CACEnY,KAAM8W,EACNsB,SAAU5B,EACV7U,QAASuV,EACTjV,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdkW,gBAAiB,CACfnW,SAAU,MACVC,WAAY,QAVhB,SAaE,sBAAKd,UAAU,uCAAf,SACE,eAAC,KAAD,CACEiX,QAAS5hB,GACT6hB,WAAW,EACXC,YAAY,EACZC,cAAe,IACfC,OAAQtB,EACRuB,YAAY,WACZC,SA/IuB,SAAChiB,GAC3BA,IACLsgB,IACAtB,EAAmBhf,EAAE5K,eAkJnB,eAACmsB,GAAA,EAAD,CACEnY,KAAMgX,EACNoB,SAAU1B,EACV/U,QAASwV,EACTlV,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdkW,gBAAiB,CACfnW,SAAU,MACVC,WAAY,QAVhB,SAaE,sBAAKd,UAAU,oCAAf,SACE,eAAC,KAAD,CACEiX,QAASnhB,GACTohB,WAAW,EACXC,YAAY,EACZC,cAAe,IACfC,OAAQtB,EACRuB,YAAY,QACZC,SApJoB,SAAChiB,GACxBA,IACLugB,IACAtB,EAAgBjf,EAAE5K,eAuJhB,eAACmsB,GAAA,EAAD,CACEnY,KAAMiX,EACNmB,SAAUxB,EACVjV,QAnIyB,WAC7BkV,EAAmB,MACnBlrB,EAAepB,EAAUC,GAAU,GACnC2W,YAAW,WACT6U,MACC,IA+HC/T,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdkW,gBAAiB,CACfnW,SAAU,MACVC,WAAY,QAVhB,SAaE,sBAAKd,UAAU,sCAAf,SACE,iCACE,mCACE,gCACE,2CACA,8BACE,eAACwX,GAAA,EAAD,CAAQpD,KAAK,QAAQD,QAASY,EAAcwC,SA1I3B,kBAAM9C,GAAoBM,IA0IqC1lB,MAAM,iBAG1F,gCACE,8CACA,8BACE,eAACmoB,GAAA,EAAD,CAAQpD,KAAK,QAAQD,QAASa,EAAgBuC,SA7I3B,kBAAM7C,GAAsBM,IA6IqC3lB,MAAM,0BAStG,eAACqR,GAAA,EAAD,CACE/B,KAAMI,EACN4B,iBAAkB,IAClBL,QAASlB,EACTwB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAJlD,SAME,eAACC,GAAA,EAAD,CAAOT,QAASlB,EAAwB4B,SAAS,UAAjD,2BAQOyW,GA5hBG,SAACtZ,GAEjB,IAAMzS,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvBxR,EAAemT,EAAMnT,aACrBhC,EAAiBmV,EAAM1R,UACvBinB,EAAuBvV,EAAMsV,WAAWC,qBACxCvqB,EAAWgV,EAAMsV,WAAWtqB,SAC5B2N,EAAWqH,EAAMsV,WAAW3c,SAC5BkU,EAAoB7M,EAAMsV,WAAWzI,kBACrC0M,EAAuBvZ,EAAMsV,WAAWiE,qBACxCC,EAAuBxZ,EAAMsV,WAAWkE,qBACxCpgB,EAAc4G,EAAMsV,WAAWlc,YAG/BrO,EAAWoV,cACXsZ,EAAYC,iBAAO,MACzB,EAAgDnZ,mBAAS,MAAzD,oBAAOoZ,EAAP,KAAyBC,EAAzB,KACA,EAA8CrZ,mBAAS,iBAAvD,oBAAO1P,EAAP,KAAwBgpB,EAAxB,KAGMC,EAAiB,SAACC,GAClBA,IAAkBznB,GACpBmnB,EAAUO,QAAQvM,OAAOwM,kBAChBF,IAAkBznB,GAC3BmnB,EAAUO,QAAQvM,OAAOyM,oBAEzBpb,QAAQC,MAAR,kCAAyCgb,IAG3CpY,YAAW,kBAAM8X,EAAUO,QAAQvM,OAAO0M,UAAS,IAErDnZ,qBAAU,kBf9GuB,SAACjW,EAAUC,EAAUT,EAAU6vB,GAChErvB,EAAS,CACPb,OACAe,SAAU,SAACC,GAIT,OAHWA,EAAMP,MAAM8B,IAAIzB,GACEyB,IAAItC,GACfiB,IAAIb,EAAU6vB,GACzBlvB,KeuGKmvB,CAAoBtvB,EAAUC,EAAUT,EAAUuvB,KAAiB,IAGnF9Y,qBAAU,WACJnW,EAAe0Y,gBAAkBhZ,GACrCoX,YAAW,kBAAM8X,EAAUO,QAAQvM,OAAO0M,UAAS,KAClD,IAGH,IAAMxD,EAAcppB,EAAUpC,IAAIkF,IAA6B9C,EAAUd,IAAI4D,IAA6B,GACtGgM,EAAc,EACdoa,EAAe,aACfG,GAAe,EACfF,EAAY,SACZG,GAAiB,EAMfL,EAAiB,kBAAMiD,EAAUO,QAAQvM,OAAO0M,SAChDvN,EAAgB,kBAAM6M,EAAUO,QAAQvM,OAAO6M,QAC/CxL,EAAS,SAAC5N,GACduY,EAAUO,QAAQvM,OAAO8M,iBACzBtuB,EAAelB,EAAUC,GAAU,IAQjCuC,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAI1B9C,EAAUpC,IAAIkF,MAChBomB,EAAelpB,EAAUd,IAAI4D,KAI3B9C,EAAUpC,IAAIkF,MAChBumB,EAAerpB,EAAUd,IAAI4D,KAI3B9C,EAAUpC,IAAIkF,MAChBqmB,EAAYnpB,EAAUd,IAAI4D,KAIxB9C,EAAUpC,IAAIkF,MAChBwmB,EAAiBtpB,EAAUd,IAAI4D,KASjC,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAGpCme,EAAsB,SAACzP,EAAc0P,EAAYC,GACrD,IAAIld,EAAe,IAAIzP,GAASR,GAChCiQ,EAAapS,IAAI2f,EAAc2P,GAC/B,IAAIxgB,EAAkB5M,GAAgBT,EAActC,EAAUiT,GAC1DhE,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiBugB,GACpEthB,GAAepO,EAAUC,EAAUwO,IAgB/BmU,EAAa,SAACgM,GAAD,OAAsBC,EAAoBD,IAqB7D,GApBA3Y,qBAAU,WACH2Y,IACLC,EAAoB,MACpBvQ,GAAiBjQ,EAAaugB,EAAkBH,EAAsBjvB,EAAU,CAC9EqiB,gBACAC,yBAED,CAAC8M,EAAkBvgB,IAGtB4H,qBAAU,WACR,IAAI2Z,EAAqBjE,EAAUrC,QAAQ,IAAK,KAE5CuG,EdrOmC,SAAC/Y,GAC1C,IAAIgZ,EAAc,KACdC,EAAcrrB,SAASqrB,YAG3B,IAAK,IAAI9b,KAAK8b,EAAa,CACzB,IAAIC,EAAWD,EAAY9b,GAAZ,SACf,IAAK,IAAIgc,KAAKD,EACZ,GAAIA,EAASC,GAAGC,eAAiBpZ,EAAW,CAC1CgZ,EAAcE,EAASC,GAAG1W,MAC1B,OAKN,OAAKuW,GAAgBA,EAAYhqB,gBAI1BgqB,EAAYhqB,gBAFV,KcoNkBqqB,CADPrE,EAAc,eAAW8D,EAAX,+BAAsDA,IAElFC,GACFf,EAAmBe,KAEpB,CAAClE,EAAWG,KAGVzY,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAM4wB,EAAoB,CACxB,CACEC,KAAM,eACNC,QAAS,CAAEC,IAAK,KAAMC,IAAK,MAC3BC,KAAM,SAAC/N,GAAD,OAAYD,GAAgBC,EAAQpb,GAAyB,CAAEsb,iBAEvE,CACEyN,KAAM,iBACNC,QAAS,CAAEC,IAAK,OAAQC,IAAK,QAC7BC,KAAM,SAAC/N,GAAD,OAAYD,GAAgBC,EAAQpb,GAA2B,CAAEsb,iBAEzE,CACEyN,KAAM,iBACNC,QAAS,CAAEC,IAAK,OAAQC,IAAK,QAC7BC,KAAM,SAAC/N,GAAD,OAAYD,GAAgBC,EAAQpb,GAA2B,CAAEsb,iBAEzE,CACEyN,KAAM,kBACNC,QAAS,CAAEC,IAAK,QAASC,IAAK,SAC9BC,KAAM,SAAC/N,GAAD,OAAYD,GAAgBC,EAAQpb,GAA4B,CAAEsb,iBAE1E,CACEyN,KAAM,kBACNC,QAAS,CAAEC,IAAK,YAAaC,IAAK,aAClCC,KAAM,SAAC/N,GAAD,OACJD,GAAgBC,EAAQpb,GAAgC,CACtDsb,aACAmB,SACAjC,oBACA0M,4BAMFkC,EAAiB,CACrBC,IAAKjC,EACL5X,UAAW,mBACX8Z,KAAMlF,EACNmF,YAAahF,EACbiF,MAAOnF,EACP7mB,SAAU,OACVisB,QAhIc,SAAC5a,GACfjV,EAAelB,EAAUC,GAAU,GACnCuuB,KA+HAzK,OAAQA,EACRnW,SAAUA,EACVwgB,YAAa,iBACb4C,SAAU,EACVC,SAAUC,IACVpI,MAAO,OACPqI,qBAAqB,EACrBd,KAAK,GAAD,OAAK7wB,EAAL,cACJiC,MAAOmqB,EACPyC,SA1FwB,SAACsB,GAAD,OAAcF,EAAoBnqB,GAA2B,oBAAqBqqB,IA2F1GyB,WAAYtF,EACZuF,WAAY,CACVC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,GAElBC,SAAUrB,GAGZ,OACE,uBACEtZ,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GbrWZ,GaqWP,MAAmDioB,OAAQ,kBAC/EzC,MAAM,OACN/C,YAjKgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAkK3DooB,aAjKiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IA4JrD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,EACbD,WAAY,KAGd,eAAC,GAAD,CACE7nB,SAAUA,EACVT,SAAUA,EACVisB,eAAgBA,EAChBC,aAAcA,EACdC,UAAWA,EACXC,YAAaA,EACbC,aAAcA,EACdC,eAAgBA,EAChBT,mBA7HqB,SAACqG,GAAD,OACzBjC,EAAoBnqB,GAA4B,oBAAqBosB,IA6HjEpG,gBA5HkB,SAACwF,GAAD,OAAWrB,EAAoBnqB,GAAyB,oBAAqBwrB,IA6H/FvF,mBA5HqB,SAACoG,GAAD,OACzBlC,EAAoBnqB,GAA4B,oBAAqBqsB,IA4HjEnG,qBA3HuB,SAACM,GAAD,OAC3B2D,EAAoBnqB,GAA8B,oBAAqBwmB,MA6HrE,sBAAKhV,UAAU,wBAAf,SACE,eAAC,cAAD,gBAAiB7B,MAEnB,eAAC,GAAD,CAAoBzV,SAAUA,EAAUS,SAAUA,EAAlD,SACE,sBACE6W,UAAU,0BACVyC,MAAO,CAAEzT,gBAAiBA,EAAiB8rB,OArM3B,OAsMhBjb,QAAS8U,EACT/R,iBAAiB,EAJnB,SAME,eAAC,KAAD,gBAAegX,YCxRVmB,GArGM,SAAC5c,GAEpB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC1oB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cACjB,EAAkCI,mBfvB3Bsc,aAAOlwB,IeuBd,oBAAOmwB,EAAP,UAGA,IAAK1e,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAMwyB,EAAexyB,IAAaqC,EAAiBC,GAC/CwP,EAAc,EAMd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAGtCiI,EAAQ,KACR0Y,EAAa,IACbnK,EAAY,EACZoK,EAAmB1vB,EAAUd,IAAI4D,IACrC,OAAQ4sB,GACN,KAAK1sB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,GAAK5sB,GACtC0iB,EAAYkK,EAAe,GAAM,EACjC,MAEF,KAAKxsB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,KAAO5sB,GACxC0iB,EAAYkK,EAAe,GAAM,IACjC,MAEF,KAAKxsB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,KAAO5sB,GACxC0iB,EAAYkK,EAAe,GAAM,IACjC,MAEF,KAAKxsB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,KAAO5sB,GACxC0iB,EAAYkK,EAAe,GAAM,IACjC,MAEF,KAAKxsB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,KAAO5sB,GACxC0iB,EAAYkK,EAAe,EAAI,IAC/B,MAEF,KAAKxsB,GACH+T,EAAQ,KACR0Y,GAAcD,EAAe,EAAI,KAAO5sB,GACxC0iB,EAAYkK,GAAgB,GAAM,IAOtC,OACE,uBACElb,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GdhGZ,GcgGP,MAAmDgtB,WAAW,GAAD,OAAKA,EAAL,QACjFxH,MAAM,OACN/C,YA5DgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IA6D3DooB,aA5DiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IAuDrD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,EACbD,UAAWA,IAEb,sBAAKxO,GAAIyY,EAAWjb,UAAW,uBAAyByC,EAAO4Y,YAAaD,EAA5E,SACE,eAAC,cAAD,gBAAiBjd,UC/BVmd,GAjEW,SAACnd,GAEzB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC1oB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAOd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAGpC+gB,EAAkB7vB,EAAUpC,IAAIkF,IAClC9C,EAAUd,IAAI4D,IACd,EAEJ,OACE,uBACEwR,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GfrDZ,GeqDP,OACpBwlB,MAAM,OACN/C,YApBgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAqB3DooB,aApBiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IAerD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,sBACEjR,UAAU,kCACV4C,iBAAiB,EACjBH,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OAHtB,SAKE,uBAAKjR,UAAU,8BAAf,UAA8Cub,EAA9C,SAEF,sBAAKvb,UAAU,2BAAf,SACE,eAAC,cAAD,gBAAiB7B,UCVVqd,GAtDO,SAACrd,GAErB,IAAMsd,EAAgBtd,EAAMsd,cAG5B,GAAsB,OAAlBA,EAAwB,OAAO,KAcnC,IAXA,IAAM/L,EAAO+L,EAAc/L,KACrBR,EAAMuM,EAAcvM,IACpBS,EAAQ8L,EAAc9L,MACtBqC,EAAQ0J,SAASD,EAAczJ,OAGjC2J,EAAW,GAIXC,EAAQ,CAFV,sBAAc5b,UAAU,oBAAoByC,MAAO,CAAEwO,YAAY,GAAD,OhBzBnC,EgByBmC,SAAvD,OAGF9T,EAAI,EAAGA,GAAKwS,EAAOxS,IAAK,CAC/B,IAAI0e,EACF,sBAEE7b,UAAU,iBACVyC,MAAO,CACLiN,KAAK,GAAD,OhBlCmB,EgBkCMrhB,GAAc8O,EAAvC,OACJnO,gBAAgB,qBAAD,OAAuB,EAAI2sB,EAA3B,KACf3J,MAAM,GAAD,OAAK3jB,GhB9BkB,IgB8BvB,SANT,UACU8O,IASZwe,GAAYA,EACZC,EAAM7iB,KAAK8iB,GAEb,IAAIC,EAAe3tB,GhB3CY,EgB2CgBE,IAAeshB,EAAQ,IAatE,OAZAiM,EAAM7iB,KACJ,sBAEEiH,UAAU,sBACVyC,MAAO,CACLiN,KAAK,GAAD,OAAKoM,EAAL,MACJ9J,MAAM,GAAD,OAAKA,EAAQ8J,EAAe3tB,GhBlDR,GgBkDpB,MACLa,gBAAgB,qBAAD,OAAuB,EAAI2sB,EAA3B,OALb,OAWN,sBAAK3b,UAAU,sBAAsByC,MAAO,CAAEiN,KAAMA,EAAMR,IAAKA,GAA/D,SACG0M,KCyCQG,GAlFQ,SAAC5d,GAEtB,IAAMhV,EAAWgV,EAAMhV,SACjB6yB,EAAY7d,EAAM6d,UAClBC,EAAe9d,EAAM8d,aACrB1kB,EAAc4G,EAAM5G,YACpBxO,EAAcoV,EAAMpV,YAGpBmzB,EAAgB,CAAqB,EAApB3vB,OAAO4vB,WAAqC,EAArB5vB,OAAO6vB,aAC/ClzB,EAAWoV,cACjB,EAA0CI,mBAASwd,GAAnD,oBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0C5d,mBAAS,MAAnD,oBAAO+c,EAAP,KAAsBc,EAAtB,KACMpyB,EAAgBoU,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,GAAUyB,IAAItC,MAGhFk0B,EAASryB,GAAiBA,EAAciT,QAAU,GAAKjT,EAAc,GAGrEsyB,EAAiBC,MACrB,SAACtP,EAAGC,GAGF,IAAIoB,EAAiBtkB,EAAciT,QAAU,EAAIjT,EAAc,GAAK,GACpEoyB,ET4T6B,SAAC7N,EAAQE,EAAQzlB,EAAUoO,EAAakX,GAEzE,GAA8B,IAA1BA,EAAerR,OAAc,OAAO,KAIxC,GAAsB,OADA+P,GAAyBuB,EAAQE,GAC3B,OAAO,KAGnC,IAAM5jB,EAAeuM,EAAYe,oBAG3BwW,EAAQ,uBAAmB3lB,GAC3B4lB,EAAanhB,SAASC,eAAeihB,GAAUE,wBAC/CC,EAAuBF,EAAWG,IAClCC,EAA0BJ,EAAWK,OACrCC,EAA0BN,EAAWO,MACrCC,EAAyBX,GAAUK,EACnCO,EAAuBZ,GAAUO,EAGjCwD,EAAU5D,EAAWW,KACrBiN,EAAY5N,EAAWG,IACvB0N,EAAe7N,EAAWK,OAC1ByN,EAAc9N,EAAWiD,MAG/B,GAAIzC,EACF,MAAO,CACLG,KAAK,GAAD,OAAKiD,EAAL,MACJzD,IAAI,GAAD,OAAKyN,EAAL,MACH3K,MAAM,GAAD,OAAK6K,EAAL,MACLlN,OAAQ,GAEL,GAAIH,EAAsB,CAE/B,IAAMsN,EAAe1xB,GAAgBJ,GAC/B2kB,EAAQ1B,GAA0B6O,EAAc9xB,GAGtD,MAAO,CACL0kB,KAAK,GAAD,OAAKiD,EAAL,MACJzD,IAAI,GAAD,OAAK0N,EAAezuB,GR1YC,KQ0YrB,MACH6jB,MAAM,GAAD,OAAK6K,EAAL,MACLlN,MAAOA,GAKX,IAAM1P,EAASuN,GACbL,GAAyBkC,EAA0BlhB,GRvZtB,GQuZkDygB,IAE3EiB,EAAiBhC,GAA4B5N,GAGnD,IAAgD,IAA5CwO,EAAehhB,QAAQoiB,IAA6C,OAAnBA,EAAyB,OAAO,KAGrF,IACMkN,EADa9c,EAAO+O,wBACMI,OAG1BO,EAAQ1B,GAA0B4B,EAAgB7kB,GAGxD,MAAO,CACL0kB,KAAK,GAAD,OAAKiD,EAAL,MACJzD,IAAI,GAAD,OAAK6N,EAAe5uB,GRnaG,KQmavB,MACH6jB,MAAM,GAAD,OAAK6K,EAAL,MACLlN,MAAOA,GSjYYqN,CAAoB5P,EAAGC,EAAGlkB,EAAUoO,EAAakX,MAEpE,IACA,CAAEwO,UAAU,IAERC,EAAmB,SAAC7d,GAExBid,EAAiB,CAACjd,EAAEsP,QAAStP,EAAEwP,UAE/B4N,EAAepd,EAAEsP,QAAStP,EAAEwP,UAExBsO,EAAY,SAAC9d,GAEjB,IAAM+d,EAAajzB,GAAiBA,EAAciT,QAAU,GAAKjT,EAAc,GAAKA,EAAc,GAAK,KAKnGizB,GAAYnB,EAAamB,EAAW/d,EAAGlW,EAAUoO,ITyRhC,SAAC8H,EAAGge,EAAkB3L,EAAaxnB,GAC1DmV,EAAEwR,kBAEFwM,GAAiB,GAGjBzvB,SAAS0vB,YAAc,KACvB1vB,SAAS2vB,UAAY,KAGD3vB,SAASC,eAAe6jB,GAC9B0B,UAAY,GAG1BlpB,EAAiB,EAAE,GAAI,GAAG,EAAO,KAAM,KSpSrCszB,CAAWne,GAPc,SAACoe,GAAD,OnBqFG,SAACv0B,EAAUC,EAAUs0B,GAArB,OAC9B/zB,EAAaR,EAAUC,EAAUb,EAAoBm1B,GmBtFZC,CAAkBx0B,EAAUC,EAAUs0B,KAO7CzB,GANP,SAAC2B,GAAD,OAAYpM,EAAkBroB,EAAUC,EAAUw0B,MAS3E50B,KAsBF,OAnBAoW,qBAAU,WACJqd,GAEF5uB,SAAS0vB,YAAcJ,EACvBtvB,SAAS2vB,UAAYJ,IAGrBV,EAAemB,SACfhwB,SAAS0vB,YAAc,KACvB1vB,SAAS2vB,UAAY,KAGrBjB,EAAiBJ,GAGjBK,EAAiB,SAElB,CAACC,IAGF,uCACE,eAAC,GAAD,CAAef,cAAeA,IAC9B,sBACEjZ,GAAIwZ,EACJhc,UAAU,uBACVyC,MAAO,CAAEiN,KAAM2M,EAAc,GAAKlyB,EAAc,GAAI+kB,IAAKmN,EAAc,GAAKlyB,EAAc,UC/BnF0zB,GAxDG,SAAC1f,GAEjB,IAAMlI,EAAOkI,EAAMlI,KAKnB,EAA0ByI,mBAAS9G,cAAY0W,kBAAkBwP,eAAaC,eAAe,YAA7F,oBAAO3nB,EAAP,KAAc4nB,EAAd,KA0BA,OACE,sBACEC,WAAUhoB,EACVioB,aAAW,QACXvO,OAAQ,EACRlN,MAAO,CACLtT,QAAS,sBALb,SAWE,eAAC,SAAD,CACE6Q,UAAU,mBACVzI,YAAanB,EACbmhB,SAAUyG,EACVG,aArCe,SAACrb,GACpB,MAAO,oBAqCHsb,aAlCwB,SAAC/e,GAE7B,OAAQA,EAAE2E,SACR,KAAK,GACH,OAHmB,KAOvB,OAAOG,+BAAqB9E,SCuCjBgf,GAvDI,SAAClgB,GAElB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC1oB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAMd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAE1C,OACE,uBACEwF,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GnB/CZ,GmB+CP,OACpBwlB,MAAM,OACN/C,YAdgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAe3DooB,aAdiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IASrD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,sBAAKjR,UAAU,0BAA0B4C,iBAAiB,EAAOH,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OAArF,SACE,sBAAKjR,UAAU,0BAEjB,sBAAKA,UAAU,oBAAf,SACE,eAAC,cAAD,gBAAiB7B,U,qBCsBVmgB,GAtES,SAACngB,GAEvB,IAAMhV,EAAWgV,EAAMsV,WAAWtqB,SAC5BuC,EAAYyS,EAAMiJ,MAAMtM,UACxBpS,EAAWyV,EAAMiJ,MAAM5K,IACvB1F,EAAWqH,EAAMsV,WAAW3c,SAC5B4c,EAAuBvV,EAAMsV,WAAWC,qBACxC6K,EAAyBpgB,EAAMsV,WAAW8K,uBAC1CvzB,EAAemT,EAAMnT,aAGrB9B,EAAWoV,cAGjB,IAAK/B,GAAYvR,EAActC,GAC7B,OAAO,KAIT,IAAI8R,EAAc,EAOd9O,EAAUpC,IAAIkF,MAChBgM,EAAc9O,EAAUd,IAAI4D,KAG9B,IAAMyiB,EAAc9iB,GAAQE,GAAcmM,GAGpCgkB,IAAmB9yB,EAAUpC,IAAIkF,KACnC9C,EAAUd,IAAI4D,IAGlB,OACE,uBACEwR,UAAU,qBACVyC,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAc9iB,GpBvDZ,GoBuDP,OACpBwlB,MAAM,OACN/C,YApBgB,SAACvR,GAAD,OAAOuU,GAAavU,EAAGnW,EAAUC,EAAUT,IAqB3DooB,aApBiB,SAACzR,GAAD,OAAOwU,GAAcxU,EAAGnW,EAAUC,IAerD,UAOE,eAAC,GAAD,CACET,SAAUA,EACVS,SAAUA,EACV2N,SAAUA,EACV4c,qBAAsBA,EACtBzC,YAAaA,IAEf,sBACEjR,UAAU,gCACV4C,iBAAiB,EACjBH,MAAO,CAAEwO,YAAY,GAAD,OAAKA,EAAL,OAHtB,SAKE,sBAAKjR,UAAU,4BAA4BH,QAAS,kBAAM0e,EAAuB71B,IAAjF,SACE,sBAAKsX,UAAW,uBAAyBwe,EAAmB,2BAA6B,IAAzF,SACE,eAAC,KAAD,UAIN,sBAAKxe,UAAU,yBAAf,SACE,eAAC,cAAD,gBAAiB7B,U,oQC/CnBsgB,GAAgB,CACpB,CAAE9qB,KAAM,UAAWtE,MAAO,WAC1B,CAAEsE,KAAM,MAAOtE,MAAOT,GAASQ,QAAQC,OACvC,CAAEsE,KAAM,SAAUtE,MAAOT,GAASU,WAAWD,OAC7C,CAAEsE,KAAM,SAAUtE,MAAOT,GAASW,WAAWF,OAC7C,CAAEsE,KAAM,QAAStE,MAAOT,GAASY,UAAUH,OAC3C,CAAEsE,KAAM,OAAQtE,MAAOT,GAASa,SAASJ,OACzC,CAAEsE,KAAM,SAAUtE,MAAOT,GAASc,WAAWL,OAC7C,CAAEsE,KAAM,OAAQtE,MAAOT,GAASe,SAASN,OACzC,CAAEsE,KAAM,QAAStE,MAAOT,GAASgB,UAAUP,OAC3C,CAAEsE,KAAM,OAAQtE,MAAOT,GAASiB,SAASR,QAGrC/B,IAAgD,IAAxCC,UAAUC,UAAUC,QAAQ,OAEpCixB,GAAkB,CACtBC,KAAMrxB,GAAQ,aAAU,WACxBsxB,OAAQtxB,GAAQ,aAAU,WAC1BuxB,UAAWvxB,GAAQ,aAAU,WAC7BwxB,cAAexxB,GAAQ,qBAAkB,mBACzCyxB,KAAMzxB,GAAQ,aAAU,WACxB0xB,KAAM1xB,GAAQ,aAAU,WACxBsZ,KAAMtZ,GAAQ,qBAAkB,oBAgR5B2xB,GAAoB,SAAC9gB,GACzB,IAAMsE,EAAQtE,EAAMsE,MACpB,OACE,uBAAKzC,UAAU,oCAAf,UACE,+BACE,6BAAIyC,MAEN,+BAAMic,GAAgBjc,SAKbyc,GAtRG,SAAC/gB,GAEjB,IAAMhV,EAAWgV,EAAMhV,SACjB6hB,EAAoB7M,EAAM6M,kBAG1B9hB,EAAWoV,cACX7U,EAAY8U,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,GAAUyB,IAAItC,MAC5EmW,EAAaF,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIzB,GAAUyB,IAAItC,MAC7EiP,EAAcgH,aAAY,SAAClV,GAAD,OAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIzB,GAAUyB,IAAI,cACtF,EAAwC8T,mBAAS,CAAEwQ,KAAM,IAAMQ,KAAM,IAArE,oBAAOyP,EAAP,KAAqBC,EAArB,KACA,EAAgC1gB,oBAAS,GAAzC,oBAAO2gB,EAAP,KAAiBC,EAAjB,KACA,EAAgC5gB,mBAAS,MAAzC,oBAAOqY,EAAP,KAAiBwI,EAAjB,KACA,EAAsC7gB,mBAAS,MAA/C,oBAAO8gB,EAAP,KAAoBC,EAApB,KACA,EAAkD/gB,mBAAS,MAA3D,oBAAOghB,EAAP,KAA0BC,EAA1B,KAGMC,EAAQ,gCAA4Bz2B,GAG1CgW,qBAAU,WACRogB,EAAY3xB,SAASC,eAAe+xB,MACnC,IAGH,IAAMC,EAA8BnD,MAClC,SAACjzB,GACC,GAAKA,EAOE,CACL,IAAMq2B,EAAYlyB,SAASC,eAAT,uBAAwC1E,IACpD4lB,EAAa+Q,EAAU9Q,wBACvB+Q,EAAgBt2B,EAAUulB,wBAC1BgR,EAAa7xB,GAAQ,IACrB8xB,EAAc,CAClB/Q,IAAK4Q,EAAUI,WAAaH,EAAc7Q,IAAMH,EAAWG,KAAO8Q,EAClEtQ,KAAMoQ,EAAUK,YAAcJ,EAAcrQ,KAAOX,EAAWW,MAAQqQ,EAAc/N,MAAQ,GAE9FoN,EAAgBa,GAChBX,GAAY,QAhBZA,GAAY,GACZG,EAAe,MACfE,EAAqB,MACrB7f,YAAW,WACTsf,EAAgB,CAAElQ,KAAM,IAAMQ,KAAM,MACnC,OAcP,IACA,CAAEuN,UAAU,IAEd9d,qBAAU,WACR0gB,EAA4Bp2B,KAC3B,CAACA,IAGJ0V,qBAAU,WACJqgB,GAAeE,GACjBD,EAAe,MACfE,EAAqB,OACZN,GACTC,GAAY,KAEb,CAAC7gB,IAGJ,IAAM2hB,EAAoB,SAAC/gB,GACzBA,EAAEwR,kBACF7F,IACAlL,YAAW,WACTtI,GAAoBtO,EAAUC,OAI5B4O,EAAc,SAACsoB,GACnBA,EAAWn3B,EAAUC,GACjBq2B,GACFC,EAAe,MAEbC,GACFC,EAAqB,OAmCnBW,EAAe,SAACjxB,GAAD,OpB8RK,SAACnG,EAAUC,EAAUkG,GAC/CnG,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WAEvByN,EAAkBd,EAAYe,oBAC5BtP,EAAiBuO,EAAY/K,eAGnC,IAAK,IAAI2Q,KAAK5M,GAAW,CACvB,IAAIgwB,EAAc,cAAUhwB,GAAU4M,IACtC9E,EAAkB1M,WAASkN,kBAAkBR,EAAiBrP,EAAgBu3B,GAIhF,IAAMC,EAAanxB,EAAMoxB,eACc,IAAnClwB,GAAU9C,QAAQ+yB,KACpBnoB,EAAkB1M,WAASmN,iBAAiBT,EAAiBrP,EAA3C,cAAkEw3B,KAGtF,IAAI7oB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,uBAIpE,OAHAV,EAAiBC,cAAYC,eAAeF,EAAgB3O,GAC5D0O,EAAKnO,IAAI,UAAWoO,GAEbtO,KoBxTqBq3B,CAAcx3B,EAAUC,EAAUkG,IAC5D2oB,EAAqB,SAAC3oB,GAAD,OpB4TK,SAACnG,EAAUC,EAAUkG,GACrDnG,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WAEvByN,EAAkBd,EAAYe,oBAC5BtP,EAAiBuO,EAAY/K,eAGnC,IAAK,IAAI2Q,KAAK5M,GAAW,CACvB,IAAIgwB,EAAc,YAAQhwB,GAAU4M,IACpC9E,EAAkB1M,WAASkN,kBAAkBR,EAAiBrP,EAAgBu3B,GAIhF,IAAMC,EAAanxB,EAAMoxB,eACc,IAAnClwB,GAAU9C,QAAQ+yB,KACpBnoB,EAAkB1M,WAASmN,iBAAiBT,EAAiBrP,EAA3C,YAAgEw3B,KAGpF,IAAI7oB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,uBAIpE,OAHAV,EAAiBC,cAAYC,eAAeF,EAAgB3O,GAC5D0O,EAAKnO,IAAI,UAAWoO,GAEbtO,KoBtV2Bs3B,CAAoBz3B,EAAUC,EAAUkG,IAGxEuxB,EAAY,sBAAK5gB,UAAU,6BAC3B6gB,EAAe,uBAAM7gB,UAAU,+BAAhB,oBAEf8gB,EACJ,eAACC,GAAA,EAAD,CACEpiB,KAAM+W,QAAQ8J,GACdwB,YAAU,EACVjK,SAAUyI,EACV7f,UAAU,eACVW,QAAS,kBAAMmf,EAAe,OALhC,SAOG,gBAAGwB,EAAH,EAAGA,gBAAH,OACC,eAACC,GAAA,EAAD,6BAAUD,GAAV,IAA2BE,QAAS,IAApC,SACE,eAACC,GAAA,EAAD,CAAOC,UAAW,EAAlB,SACE,eAACC,GAAA,EAAD,UACG7C,GAAcnpB,KAAI,SAACisB,EAASpkB,GAC3B,OACE,gBAACqkB,GAAA,EAAD,CAAkBC,OAAK,EAACC,YAAatB,EAAmBvgB,QAAS,kBAAMygB,EAAaiB,EAAQ5tB,OAA5F,UACE,eAAC,KAAD,CACE3F,SAAS,QACTyU,MAAO,CAAEpT,MAAOkyB,EAAQlyB,MAAOsyB,aAAc,YAE9CJ,EAAQ5tB,OALIwJ,gBAgBzBykB,EACJ,eAACb,GAAA,EAAD,CACEpiB,KAAM+W,QAAQgK,GACdsB,YAAU,EACVjK,SAAU2I,EACV/f,UAAU,eACVW,QAAS,kBAAMqf,EAAqB,OALtC,SAOG,gBAAGsB,EAAH,EAAGA,gBAAH,OACC,eAACC,GAAA,EAAD,6BAAUD,GAAV,IAA2BE,QAAS,IAApC,SACE,eAACC,GAAA,EAAD,CAAOC,UAAW,EAAlB,SACE,eAACC,GAAA,EAAD,UACG7C,GAAcnpB,KAAI,SAACisB,EAASpkB,GAC3B,OACE,gBAACqkB,GAAA,EAAD,CAEEC,OAAK,EACLC,YAAatB,EACbvgB,QAAS,kBAAMmY,EAAmBuJ,EAAQ5tB,OAJ5C,UAME,eAAC,KAAD,CAAkB3F,SAAS,QAAQyU,MAAO,CAAEpT,MAAOkyB,EAAQlyB,MAAOsyB,aAAc,YAC/EJ,EAAQ5tB,OANJwJ,gBAiBjB0kB,EAAyB,eAAC,GAAD,CAAmBpf,MAAM,SAClDqf,EAA2B,eAAC,GAAD,CAAmBrf,MAAM,WACpDsf,EAA8B,eAAC,GAAD,CAAmBtf,MAAM,cACvDuf,EAAkC,eAAC,GAAD,CAAmBvf,MAAM,kBAC3Dwf,EAAyB,eAAC,GAAD,CAAmBxf,MAAM,SAClDyf,EAAyB,eAAC,GAAD,CAAmBzf,MAAM,SAClD0f,EAAyB,eAAC,GAAD,CAAmB1f,MAAM,SAElD2f,EACJ,gBAAChB,GAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,eAAC5jB,GAAA,EAAD,CAASrH,MAAOyrB,EAAwBliB,UAAU,MAAMS,OAAK,EAA7D,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QAhH7D,SAACR,GAAD,OAAOtH,EAAYsqB,KAgHhC,SACE,eAAC,KAAD,CAAgBr0B,SAAS,cAG7B,eAACyP,GAAA,EAAD,CAASrH,MAAO0rB,EAA0BniB,UAAU,MAAMS,OAAK,EAA/D,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QApH3D,SAACR,GAAD,OAAOtH,EAAYuqB,KAoHlC,SACE,eAAC,KAAD,CAAkBt0B,SAAS,cAG/B,eAACyP,GAAA,EAAD,CAASrH,MAAO2rB,EAA6BpiB,UAAU,MAAMS,OAAK,EAAlE,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QAxHxD,SAACR,GAAD,OAAOtH,EAAYwqB,KAwHrC,SACE,eAAC,KAAD,CAAsBv0B,SAAS,cAGnC,eAACyP,GAAA,EAAD,CAASrH,MAAO4rB,EAAiCriB,UAAU,MAAMS,OAAK,EAAtE,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QA5HpD,SAACR,GAAD,OAAOtH,EAAYyqB,KA4HzC,SACE,eAAC,KAAD,CAAoBx0B,SAAS,cAIhC4yB,EAED,eAACnjB,GAAA,EAAD,CAASrH,MAAO6rB,EAAwBtiB,UAAU,MAAMS,OAAK,EAA7D,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QAnI7D,SAACR,GAAD,OAAOtH,EAAY0qB,KAmIhC,SACE,eAAC,KAAD,CAAUz0B,SAAS,cAGvB,eAACyP,GAAA,EAAD,CAASrH,MAAO8rB,EAAwBviB,UAAU,MAAMS,OAAK,EAA7D,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QAvI7D,SAACR,GAAD,OAAOtH,GAAY,kBAAMpO,EAAaT,EAAUC,EAAUoO,EAAY/K,oBAuInF,SACE,eAAC,KAAD,CAAUwB,SAAS,cAGvB,eAACyP,GAAA,EAAD,CAASrH,MAAO+rB,EAAwBxiB,UAAU,MAAMS,OAAK,EAA7D,SACE,eAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QA3I7D,SAACR,GAAD,OAAOtH,GAAY,kBAAMhO,EAAab,EAAUC,EAAUoO,EAAY/K,oBA2InF,SACE,eAAC,KAAD,CAAewB,SAAS,cAI3B4yB,EAED,eAACnjB,GAAA,EAAD,CAASrH,MAAM,aAAauJ,UAAU,MAAMS,OAAK,EAAjD,SACE,gBAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QAjJpD,SAACR,GAE3BsgB,EAAqB,MAMnBF,EAHGD,EAGY,KAFAngB,EAAEuX,gBA2If,UACE,eAAC,KAAD,CAAqB5oB,SAAS,UADhC,IAC4C6yB,OAI7CD,EAED,eAACnjB,GAAA,EAAD,CAASrH,MAAM,kBAAkBuJ,UAAU,MAAMS,OAAK,EAAtD,SACE,gBAACvC,GAAA,EAAD,CAAQmC,UAAU,wBAAwB0hB,YAAatB,EAAmBvgB,QA7I9C,SAACR,GAEjCogB,EAAe,MAMbE,EAHGD,EAGkB,KAFArgB,EAAEuX,gBAuIrB,UACE,eAAC,KAAD,CAAiB5oB,SAAS,UAD5B,IACwC6yB,UAM9C,OACE,uCACE,sBAAKre,GAAIod,EAAU5f,UAAU,yBAAyByC,MAAO0c,IAC7D,eAAC4B,GAAA,EAAD,CAAQpiB,KAAM0gB,EAAU2B,YAAU,EAACjK,SAAUA,EAAUpX,UAAU,YAAjE,SACG,gBAAGshB,EAAH,EAAGA,gBAAH,OACC,eAACC,GAAA,EAAD,6BAAUD,GAAV,IAA2BE,QAAS,IAApC,SACGiB,QAINtB,EACAc,M,oBCpTDc,GAAeplB,aAAW,CAC9BK,KAAM,CACJ0V,SAAU,WACV3D,KAAM,YAHWpS,CAKlBO,MAqNY8kB,GAhNe,SAACxkB,GAE7B,IAAM6M,EAAoB7M,EAAM6M,kBAG1B9hB,EAAWoV,cACjB,EAA4CI,mBAAS,CAAEwQ,KAAM,IAAMQ,KAAM,IAAzE,oBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAgCnkB,mBAAS,MAAzC,oBAAOqY,EAAP,KAAiBwI,EAAjB,KACA,EAA4C7gB,mBAAS,MAArD,oBAAO1V,EAAP,KAAuB6B,EAAvB,KACA,EAAsC6T,mBAAS,IAA/C,oBAAOokB,EAAP,KAAoBC,EAApB,KACA,EAAwDrkB,oBAAS,GAAjE,oBAAOskB,EAAP,KAA6BC,EAA7B,KACA,EAAkEvkB,oBAAS,GAA3E,oBAAOwkB,EAAP,KAAkCC,EAAlC,KACMh6B,EAAWoV,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAWzV,eACnDa,EAAY2U,aAAY,SAAClV,GAAD,yBAAWA,EAAMmV,WAAW1V,aAA5B,iBAAW,EAAwB8B,IAAIzB,UAAvC,aAAW,EAAuCyB,IAAItC,MAC9EwB,EAAeyU,aAAY,SAAClV,GAAD,yBAAWA,EAAMmV,WAAW1V,aAA5B,iBAAW,EAAwB8B,IAAIzB,UAAvC,aAAW,EAAuCyB,IAAItC,MACjFiP,EAAcgH,aAAY,SAAClV,GAAD,uBAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIzB,UAAxC,aAAW,EAAwCyB,IAAI,cAGjFg1B,EAAQ,sCAAkCz2B,GAC1Ci6B,EAAqB,CAAElU,KAAM,IAAMQ,KAAM,GAEzC2T,EAAa,WACjBR,EAAkBO,GAClBz5B,EAAaT,EAAUC,EAAU,MACjC45B,EAAe,KAGXO,EAAc,SAACjkB,GAAiC,IAA9BkkB,EAA6B,uDAAT,KACzC,OAADlkB,QAAC,IAADA,KAAGwR,kBACHwS,IACAvjB,YACE,kBAAMtI,GAAoBtO,EAAUC,EAAUo6B,GAAwCv6B,KACtF,IAKJmW,qBAAU,WACR,GAAIvV,EAAW,CAEb,IAAMk2B,EAAYlyB,SAASC,eAAT,uBAAwC1E,IACpD4lB,EAAa+Q,EAAU9Q,wBACvB+Q,EAAgBzzB,KAAgB0iB,wBAChCgR,EAAa7xB,GAAQ,KACrB8xB,EAAc,CAClB/Q,IAAK4Q,EAAUI,WAAaH,EAAc7Q,IAAMH,EAAWG,KAAO8Q,EAClEtQ,KAAMoQ,EAAUK,YAAcJ,EAAcrQ,KAAOX,EAAWW,MAAQqQ,EAAc/N,MAAQ,GAKxFhpB,EAAiBuO,EAAY/K,eAC7BxB,EAAeuM,EAAYe,oBAGjC,GAAItP,EAAeyY,iBAAmBzY,EAAe0Y,cAGnD,OAFA4hB,EAAY,KAAMt6B,QAClBi6B,GAAwB,GAI1B,IAAMO,EAAcx4B,EAAa6O,eAAe7Q,EAAeyY,gBAC3DgiB,EAAqB,KACrBC,EAAe,KACnBF,EAAY1pB,kBACV,SAACnP,GAEC,OADA+4B,EAAe/4B,EAAMoP,QACd,KAET,SAACC,EAAOC,GACN,GAAKypB,EAAL,CACA,IAAMC,EAAY34B,EAAaqT,UAAUqlB,GACnCxiB,EAAclY,EAAeuY,iBAC7BJ,EAAYnY,EAAewY,eAC7BxU,GAAagN,EAAOC,EAAKiH,EAAaC,GAAW,KAC5B,SAAnBwiB,EAAUt7B,MAAoBo7B,IAChCA,EAAqBC,QAM7B,IAAItlB,EAAM,GACV,GAAIqlB,EAEFrlB,EADepT,EAAaqT,UAAUolB,GACzBG,KAAKxlB,IAIpB,GAAmB,IAAfA,EAAIhB,QAAgBpU,EAAeyP,cAGrC,OAFA6qB,EAAY,KAAMt6B,QAClBm6B,GAA6B,GAI/BJ,EAAe3kB,GACfykB,EAAkB5C,GAClBp1B,EAAkBjB,QACe,IAAxBg5B,EAAelT,MACxB2T,MAED,CAACz5B,IAGJuV,qBAAU,WACR,GAAKrV,EAAL,CAEA,IAAMd,EAAiBc,EACvBD,EAAgBX,EAAUC,EAAU,MACpC6hB,IACAlL,YAAW,WACTtI,GAAoBtO,EAAUC,EAAUH,GACxCW,EAAaT,EAAUC,EAAUH,KAChC,MACF,CAACc,IAGJqV,qBAAU,WACRogB,EAAY3xB,SAASC,eAAe+xB,MACnC,IAGH,IAAMiE,EAAY,SAACxkB,GAEjB,OADYA,EAAEykB,YAAY9f,SAExB,KAAK,IrB2Ce,SAAC9a,EAAUC,EAAU46B,GAC7C76B,EAAS,CACPb,QACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAM+N,YAAYxM,IAAIzB,GAC7BoO,EAAcG,EAAK9M,IAAI,WACvBo5B,GAAW,EACXC,EAAQ,KAENj7B,EAAiBuO,EAAY/K,eAC7BxB,EAAeuM,EAAYe,oBAC7BD,EAAkBrN,EAClB2M,EAAiBJ,EAGrB,GAAIvO,EAAeyY,iBAAmBzY,EAAe0Y,cACnD,OAAOrY,EAIT,IAAMm6B,EAAcx4B,EAAa6O,eAAe7Q,EAAeyY,gBAC3DgiB,EAAqB,KACrBC,EAAe,KACfQ,EAAW,KACXC,GAAY,EACZC,EAAsB,GAC1BZ,EAAY1pB,kBACV,SAACnP,GAEC,OADA+4B,EAAe/4B,EAAMoP,QACd,KAET,SAACC,EAAOC,GACN,GAAKypB,EAAL,CACA,IAAMC,EAAY34B,EAAaqT,UAAUqlB,GACnCxiB,EAAclY,EAAeuY,iBAC7BJ,EAAYnY,EAAewY,eAC7BxU,GAAagN,EAAOC,EAAKiH,EAAaC,GAAW,KAC5B,SAAnBwiB,EAAUt7B,OACPo7B,IAAoBA,EAAqBC,GAC9CU,EAAoBrrB,KAAK,CAAEiB,QAAOC,SAEpCiqB,EAAWtd,KAAKC,IAAI7M,EAAOkqB,GAC3BC,EAAWvd,KAAK+J,IAAI1W,EAAKkqB,QAI/BD,EAAWtd,KAAKC,IAAI7d,EAAeuY,iBAAkB2iB,GACrDC,EAAWvd,KAAK+J,IAAI3nB,EAAewY,eAAgB2iB,GAGnD9rB,EAAkB1M,WAAS8N,YACzBpB,EACA,IAAIxM,iBAAe,CACjBG,UAAWw3B,EAAY3oB,SACvB5O,aAAci4B,EACdp4B,SAAU03B,EAAY3oB,SACtB9O,YAAao4B,IAEf,MAIF,IAEMJ,IAASA,EAAKxb,MAAM,WACtBwb,EAAO,UAAYA,GAErBE,EAAQ,IAAI/kB,IAAI6kB,GAChB,SAEIA,GACF9mB,QAAQ+S,KAAR,uBAA6B+T,IAE/BC,GAAW,EAIb,GAAIA,EAAU,CAEZ,IAAItU,EAAO,KACPJ,GAAS,EACb,IAAK,IAAInS,KAAKinB,EACZ1U,EAAO9I,KAAKC,IAAI6I,EAAM0U,EAAoBjnB,GAAGnD,OAC7CsV,EAAQ1I,KAAK+J,IAAIrB,EAAO8U,EAAoBjnB,GAAGlD,KAEjDyV,EAAO9I,KAAKC,IAAI6I,EAAM1mB,EAAeuY,kBACrC+N,EAAQ1I,KAAK+J,IAAIrB,EAAOtmB,EAAewY,gBAIvC,IAAMpI,GADNf,EAAkBA,EAAgBgB,aAAa,OAAQ,UAAW,CAAE+E,IAAK6lB,EAAMrkB,QAC7CtG,0BAClC3B,EAAiBC,cAAYrO,IAAIoO,EAAgB,CAAE4B,eAAgBlB,IACnEA,EAAkB1M,WAAS8N,YACzBpB,EACA,IAAIxM,iBAAe,CACjBG,UAAWw3B,EAAY3oB,SACvB5O,aAAcyjB,EACd5jB,SAAU03B,EAAY3oB,SACtB9O,YAAaujB,IAEflW,GAUJ,OALAzB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,gBAGhEX,EAAKnO,IAAI,UAAWoO,GAEbtO,KqBxJLg7B,CAAWn7B,EAAUC,EAAU25B,GAC/BQ,EAAYjkB,GACZ,MACF,KAAK,GACHikB,EAAYjkB,KAalB,OACE,uCACE,sBAAKW,UAAU,qCAAqCwC,GAAIod,EAAUnd,MAAOmgB,IACzE,eAAC0B,GAAA,EAAD,CACEvN,SAAUA,EACVpY,KAAM+W,QAAQkN,EAAelT,MAC7BpP,QAAS,SAACjB,GAAD,OAAOikB,EAAYjkB,IAC5BklB,mBAAoB,KACpB3jB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdkW,gBAAiB,CACfnW,SAAU,MACVC,WAAY,QAEd+iB,UAAWA,EAbb,SAeE,+BACE,gBAACvkB,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,wBAAOkD,MAAO,CAAEzU,SAAU,OAA1B,kBACA,eAACw2B,GAAA,EAAD,CACE/uB,MAAM,YACN6hB,YAAY,kBACZlD,KAAK,QACLuC,QAAQ,WACRlU,MAAO,CAAE2T,OAAQ,aACjBzrB,MAAOm4B,EACPvL,SAAU,SAAClY,GAAD,OAAO0jB,EAAe1jB,EAAEY,OAAOtV,QACzCusB,WAAS,IAEX,eAACwL,GAAD,CAAc/L,QAAQ,YAAYtnB,MAAM,UAAUwQ,QApCzC,SAACR,GAClBA,EAAEykB,YAAY9f,QAAU,GACxB6f,EAAUxkB,IAkCF,yBAQN,eAACqB,GAAA,EAAD,CACE/B,KAAMukB,EACNviB,iBAAkB,IAClBL,QAAS,SAACjB,GAAD,OAAO8jB,GAA6B,IAC7CviB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAJlD,SAME,eAACC,GAAA,EAAD,CAAOT,QAAS,SAACjB,GAAD,OAAO8jB,GAA6B,IAAQniB,SAAS,UAArE,iEAMF,eAACN,GAAA,EAAD,CACE/B,KAAMqkB,EACNriB,iBAAkB,IAClBL,QAAS,SAACjB,GAAD,OAAO4jB,GAAwB,IACxCriB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAJlD,SAME,eAACC,GAAA,EAAD,CAAOT,QAAS,SAACjB,GAAD,OAAO4jB,GAAwB,IAAQjiB,SAAS,UAAhE,+EC5MF0hB,GAAeplB,aAAW,CAC9BK,KAAM,CACJ0V,SAAU,WACV3D,KAAM,UACN+U,WAAY,QACZC,YAAa,WALIpnB,CAOlBO,MACG8mB,GAAiBrnB,aAAW,CAChCK,KAAM,CACJ,UAAW,CACTinB,QAAS,UAHQtnB,CAMpBgkB,MAwTYuD,GAnTe,SAAC1mB,GAE7B,IAAM6M,EAAoB7M,EAAM6M,kBAG1B9hB,EAAWoV,cACjB,EAA4CI,mBAAS,CAAEwQ,KAAM,IAAMQ,KAAM,IAAzE,oBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAgCnkB,mBAAS,MAAzC,oBAAOqY,EAAP,KAAiBwI,EAAjB,KACA,EAA4C7gB,mBAAS,MAArD,oBAAO1V,EAAP,KAAuB6B,EAAvB,KACA,EAAsC6T,mBAAS,IAA/C,oBAAOomB,EAAP,KAAoBC,EAApB,KACA,EAA8CrmB,mBAAS,IAAvD,oBAAOsmB,EAAP,KAAwBC,EAAxB,KACA,EAAwDvmB,oBAAS,GAAjE,oBAAOskB,EAAP,KAA6BC,EAA7B,KACA,EAA0CvkB,mBAAS,MAAnD,oBAAOwmB,EAAP,KAAsBC,EAAtB,KACA,EAAsCzmB,mBAAS,MAA/C,oBAAOjD,EAAP,KAAoB2pB,EAApB,KACA,EAAsC1mB,oBAAS,GAA/C,oBAAO3V,EAAP,KAAoBs8B,EAApB,KACA,EAA4C3mB,oBAAS,GAArD,oBAAO4mB,EAAP,KAAuBC,EAAvB,KACMp8B,EAAWoV,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAWzV,eACnDiB,EAAYuU,aAAY,SAAClV,GAAD,yBAAWA,EAAMmV,WAAW1V,aAA5B,iBAAW,EAAwB8B,IAAIzB,UAAvC,aAAW,EAAuCyB,IAAItC,MAC9EiP,EAAcgH,aAAY,SAAClV,GAAD,uBAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIzB,UAAxC,aAAW,EAAwCyB,IAAI,cAGjFg1B,EAAQ,sCAAkCz2B,GAC1Ci6B,GAAqB,CAAElU,KAAM,IAAMQ,KAAM,GAGzC2T,GAAa,WACjBR,EAAkBO,IAClBr5B,EAAab,EAAUC,EAAU,MACjC47B,EAAe,IACfM,GAAe,GACfD,EAAe,MACfG,GAAkB,IAIdjC,GAAc,SAACjkB,GAAiC,IAA9BkkB,EAA6B,uDAAT,KACzC,OAADlkB,QAAC,IAADA,KAAGwR,kBAEHrmB,EAAetB,EAAUC,GAAU,GACnC2W,YAAW,WACTujB,KAEA74B,EAAetB,EAAUC,GAAU,GACnCq8B,EAA4Bt8B,EAAUq6B,GAAwCv6B,GAC9E8W,YACE,kBAAMtI,GAAoBtO,EAAUC,EAAUo6B,GAAwCv6B,KACtF,OAMNmW,qBAAU,WACR,GAAInV,EAAW,CAEb,IAAM81B,EAAYlyB,SAASC,eAAT,uBAAwC1E,IACpD4lB,EAAa+Q,EAAU9Q,wBACvB+Q,EAAgBzzB,KAAgB0iB,wBAChCgR,EAAa7xB,GAAQ,KACrB8xB,EAAc,CAClB/Q,IAAK4Q,EAAUI,WAAaH,EAAc7Q,IAAMH,EAAWG,KAAO8Q,EAClEtQ,KAAMoQ,EAAUK,YAAcJ,EAAcrQ,KAAOX,EAAWW,MAAQqQ,EAAc/N,MAAQ,GAKxFhpB,EAAiBuO,EAAY/K,eAC7BxB,EAAeuM,EAAYe,oBAGjC,GAAItP,EAAeyY,iBAAmBzY,EAAe0Y,cAGnD,OAFA4hB,GAAY,KAAMt6B,QAClBi6B,GAAwB,GAI1B,IAAMO,EAAcx4B,EAAa6O,eAAe7Q,EAAeyY,gBAC3DgkB,EAAqB,KACrB/B,EAAe,KACnBF,EAAY1pB,kBACV,SAACnP,GAEC,OADA+4B,EAAe/4B,EAAMoP,QACd,KAET,SAACC,EAAOC,GACN,GAAKypB,EAAL,CACA,IAAMC,EAAY34B,EAAaqT,UAAUqlB,GACnCxiB,EAAclY,EAAeuY,iBAC7BJ,EAAYnY,EAAewY,eAC7BxU,GAAagN,EAAOC,EAAKiH,EAAaC,GAAW,KAC5B,SAAnBwiB,EAAUt7B,MAAoBo9B,IAChCA,EAAqB/B,QAM7B,IAAIgC,EAAmB,KAGnBzsB,EAAO,GACX,GAAIwsB,EAEFxsB,EADejO,EAAaqT,UAAUonB,GACxB7B,KAAK3qB,KACnBysB,EAAmBD,EAIrB,GAAoB,IAAhBxsB,EAAKmE,OAAc,CACrB,GAAIpU,EAAeyP,cAEjBO,GAAsB9P,EAAUC,EAAU,KAAM,MAAM,SAACiQ,GACrDssB,EAAmBtsB,UAIrBH,EADejO,EAAa6O,eAAe7Q,EAAe0Y,eAC1CxH,UAAUC,MAAMnR,EAAeuY,iBAAkBvY,EAAewY,gBAChFxI,GAAsB9P,EAAUC,EAAU8P,EAAM,MAAM,SAACG,GACrDssB,EAAmBtsB,KAIvB6rB,EAAmB,SAEnBA,EAAmBhsB,GAGrBksB,EAAiBO,GACjBN,EAAep8B,EAAe0Y,eAC9BqjB,EAAe9rB,GACf4pB,EAAkB5C,GAClBp1B,EAAkBb,GAClBq7B,GAAe,QACkB,IAAxBzC,EAAelT,MACxB2T,OAED,CAACr5B,IAGJmV,qBAAU,WACRogB,EAAY3xB,SAASC,eAAe+xB,MACnC,IAGH,IAAM+F,GAAe,WACK,KAApBX,EAEFtrB,GAAiBxQ,EAAUC,EAAUsS,EAAaypB,GAGlD7qB,GAAqBnR,EAAUC,EAAU+7B,EAAeF,IAKtDY,GAAgB,SAACvmB,GACrB,IAAM7C,EAAM6C,EAAEykB,YAAY9f,QAC1B,GAAIxH,GAAO,IAAMA,GAAO,GAAI,CAC1B6C,EAAEwR,kBAEF,IAAIgV,EAAiBxmB,EAAEY,OAAO4lB,eAE9B,GAAIA,IADexmB,EAAEY,OAAO6lB,aACS,CACnC,IAAa,KAARtpB,GAAsB,KAARA,IAAkC,IAAnBqpB,EAEhC,OAAOvC,GACLjkB,EACA,IAAIxT,iBAAe,CACjBG,UAAWhD,EAAeqY,cAC1BpV,aAAcjD,EAAeuY,iBAC7BzV,SAAU9C,EAAeqY,cACzBtV,YAAa/C,EAAeuY,oBAG3B,IAAa,KAAR/E,GAAsB,KAARA,IAAeqpB,IAAmBxmB,EAAEY,OAAOtV,MAAMyS,OAEzE,OAAOkmB,GACLjkB,EACA,IAAIxT,iBAAe,CACjBG,UAAWhD,EAAeqY,cAC1BpV,aAAcjD,EAAewY,eAC7B1V,SAAU9C,EAAeqY,cACzBtV,YAAa/C,EAAewY,wBAMpC,OAAQhF,GACN,KAAK,GACiB,KAAhBsoB,GACFprB,GAAiBxQ,EAAUC,EAAUsS,EAAaypB,GAAe,GACjE5B,GACEjkB,EACA,IAAIxT,iBAAe,CACjBG,UAAWhD,EAAeqY,cAC1BpV,aAAcjD,EAAeuY,iBAC7BzV,SAAU9C,EAAeqY,cACzBtV,YAAa/C,EAAeuY,qBAIhC+hB,GAAYjkB,GAEd,MACF,KAAK,GAEHsmB,KACArC,GAAYjkB,KAwCpB,OACE,uCACE,sBAAKW,UAAU,qCAAqCwC,GAAIod,EAAUnd,MAAOmgB,IACzE,eAAC0B,GAAA,EAAD,CACEvN,SAAUA,EACVpY,KAAM+W,QAAQkN,EAAelT,MAC7BpP,QAAS,SAACjB,GACRsmB,KACAN,GAAe,GACf/B,GAAYjkB,IAEdklB,mBAAoB,KACpB3jB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdkW,gBAAiB,CACfnW,SAAU,MACVC,WAAY,QAfhB,SAkBE,eAAC6jB,GAAD,UACE,gBAACrlB,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,wBAAOkD,MAAO,CAAEzU,SAAU,OAA1B,kBACA,eAACw2B,GAAA,EAAD,CACE/uB,MAAM,qBACN6hB,YAAa,gBACblD,KAAK,QACLuC,QAAQ,WACRlU,MAAO,CAAE2T,OAAQ,aACjBzrB,MAAOm6B,EACPvN,SA9DoB,SAAClY,GAC/B0lB,EAAe1lB,EAAEY,OAAOtV,OACxB06B,GAAe,GACfhrB,GAAqBnR,EAAUC,EAAU+7B,EAAe7lB,EAAEY,OAAOtV,OAG7D5B,GAAaiiB,KAyDP6Y,UAAW+B,GACXG,SAAU,SAACC,GAAD,OAAWA,GAASj9B,GAAei9B,EAAM1N,SACnD2N,WAAY,CAAEhM,QAjDN,SAAC5a,GAEdimB,IAELjmB,EAAE4E,iBACF5E,EAAEY,OAAOqY,QACTjZ,EAAEY,OAAOimB,kBAAkB,EAAG7mB,EAAEY,OAAOtV,MAAMyS,QAM7CmoB,GAAkB,MAsCRrO,WAAS,IAEX,eAAC,GAAD,CAAcP,QAAQ,YAAYtnB,MAAM,UAAUwQ,QA1DzC,SAACR,GAClBA,EAAEykB,YAAY9f,QAAU,GACxB4hB,GAAcvmB,IAwDN,yBAQN,eAACqB,GAAA,EAAD,CACE/B,KAAMqkB,EACNriB,iBAAkB,IAClBL,QAAS,SAACjB,GAAD,OAAO4jB,GAAwB,IACxCriB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAJlD,SAME,eAACC,GAAA,EAAD,CAAOT,QAAS,SAACjB,GAAD,OAAO4jB,GAAwB,IAAQjiB,SAAS,UAAhE,sF,UCtUFgQ,GAAY,EAAI7iB,GAAQ,GAExBg4B,GAAiB7oB,aAAW,CAChCK,KAAM,CACJyoB,WAAY,MACZnV,YAAa,QAHM3T,CAKpB+oB,MACGC,GAAqBhpB,aAAW,CACpCipB,oBAAqB,CACnBnQ,OAAQ,YAFe9Y,CAIxBG,MAkKG+oB,GAAkB,SAACroB,GACvB,IAAMsoB,EACJ,eAACH,GAAD,CAAoBlwB,MAAO+H,EAAM9H,QAASkK,WAAY,IAAKZ,UAAU,YAArE,SACE,oBAAGC,KAAI,WAAMzB,EAAM8c,WAAnB,SAAiC9c,EAAM9H,YAI3C,OACE,uCACE,sBACE2J,UAAW,0BAA4B7B,EAAMuoB,SAAW,GAAK,iCAC7DjkB,MAAO,CACL2jB,WAAW,GAAD,OAAyB,IAAnBjoB,EAAMwoB,MAAQ,GAApB,OACVt3B,MAAO8O,EAAMma,MAAQ,UAAY,QACjCmM,WAAYtmB,EAAMma,MAAQ,OAAS,UACnC/hB,WAAY,QACZ2f,UAAW,+BAPf,SAUG/X,EAAMyoB,QAAUH,EAAU,MAE7B,sBACEzmB,UAAW,0BAA4B7B,EAAMuoB,SAAW,gCAAkC,IAC1FjkB,MAAO,CACLuP,MAAO7jB,GAAQ,IAAOA,GAAQ,GAAKyY,KAAKigB,IAAI,GAAK1oB,EAAMwoB,MAAQ,GAC/DG,aAAc,cAAgB3oB,EAAMma,MAAQ,UAAY,gCAOnDyO,GA7LK,SAAC5oB,GAEnB,IAAMhV,EAAWgV,EAAMhV,SAGjB2lB,EAAQ,uBAAmB3lB,GAG3BoO,EAAcgH,aAAY,SAAClV,GAAD,uBAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIzB,UAAxC,aAAW,EAAwCyB,IAAI,cACvF,EAAwC8T,mBAAS,MAAjD,oBAAOsoB,EAAP,KAAqBC,EAArB,KACA,EAAgCvoB,oBAAS,GAAzC,oBAAOgoB,EAAP,KAAiBQ,EAAjB,KACA,EAA8BxoB,oBAAS,GAAvC,oBAAOkoB,EAAP,KAAgBO,EAAhB,KAGMC,EAAkBC,MAAS,WAAO,IAAD,MAE/BC,EAAOtW,GAsCPuW,EADY35B,SAASC,eAAeihB,GACjBrO,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SACzE,GAAK8mB,GAA4B,IAAlBA,EAAOnqB,OAAtB,CAMA,IAAMoqB,EA3CoB,SAACD,GAQzB,IANA,IAAIvtB,EAAQ,EACRC,EAAMstB,EAAOnqB,OACb4E,GAAU,EACVylB,EAAYztB,EACZ0tB,EAAUztB,EAEPD,EAAQC,GAAK,CAElB,IAAIimB,EAAYqH,EADhBvlB,EAAS4E,KAAKgJ,OAAO5V,EAAQC,GAAO,IACL+U,wBAAwBE,IAEvD,GAAIgR,IAAcoH,EAEhB,OADAG,GAAa,EACNzlB,EAOT,GANWke,EAAYoH,EACrBttB,EAAQgI,EAER/H,EAAM+H,EAGJylB,IAAcztB,GAAS0tB,IAAYztB,EAAK,MAE5CwtB,EAAYztB,EACZ0tB,EAAUztB,EAGZ,OAAIwtB,GAAa,EACXF,EAAOG,GAAS1Y,wBAAwBE,IAAMoY,EAAaI,EACnDD,EAELzlB,EAYY2lB,CAAkBJ,GAGzC,GAAKhwB,EAAL,CAOA,IAHA,IAAMvM,EAAeuM,EAAYe,oBAC7BsvB,EAASJ,EAENI,GAAU,GAAG,CAClB,IAAMnsB,EAAc8rB,EAAOK,GAAQ7Z,aAAa,mBAAmBC,MAAM,KAAK,GAC9E,IAAKvS,EAEH,YADAwB,QAAQC,MAAM,qCAIhB,GADiBlS,EAAa6O,eAAe4B,GAChCD,YAAc/M,GAAwB,MACnDm5B,IAIF,KAAIA,EAAS,GAAb,CACA,IAAMC,EAAO,UAAGN,EAAOK,UAAV,iBAAG,EAAgBnnB,SAAS,UAA5B,iBAAG,EAA6BA,SAAS,UAAzC,aAAG,EAA0C+B,GACrDqlB,GAAS5qB,QAAQC,MAAM,2CAC5B+pB,EAAgBY,SArBd5qB,QAAQC,MAAM,sCATdD,QAAQC,MAAM,wCA+Bf,KAEHiC,qBAAU,WAGR5S,OAAOu7B,oBAAoB,SAAUV,GAErC76B,OAAOw7B,iBAAiB,SAAUX,KACjC,IAGH,IAYMtH,EAAYlyB,SAASC,eAAeihB,GACpCkZ,EAAQ,OAAGlI,QAAH,IAAGA,OAAH,EAAGA,EAAWmI,iBAAiB,wBAC7C,IAAKD,EAAU,OAAO,KAKtB,IAFA,IAAIE,EAAM,GACNC,EAAuB,EAClBhrB,EAAI,EAAGA,EAAI6qB,EAAS5qB,OAAQD,IAAK,CACxC,IAAIirB,EAAUJ,EAAS7qB,GACnBzO,EAAc05B,EAAQra,aAAa,eACnCkN,EAAYmN,EAAQ5lB,GACxB,GAAK9T,GACAusB,EAAL,CAEA,IAAIoN,EAAezhB,KAAKC,IAAIshB,EAAuB,EAAGzM,SAAShtB,EAAYyL,MAAM,KAC7EmuB,EAAiBF,EAAQG,YACzBjQ,EAAQ2C,IAAc+L,IAAkBA,GAAsB,IAAN7pB,EAE5DgrB,EAAuBE,EACvBH,EAAInvB,KACF,eAAC,GAAD,CAEE1C,QAASiyB,EACT3B,MAAO0B,EACPpN,UAAWA,EACX3C,MAAOA,EACPoO,SAAUA,EACVE,QAASA,GANJzpB,KAYX,OACE,sBAAK6C,UAAU,4BAA4ByC,MAAO,CAAEiN,KAAM,GAA1D,SACE,eAACyW,GAAD,CAAgB5P,QAAQ,OAAO7W,WAAW,SAAS8oB,EAAG,EAAGC,EAAG,EAAGC,GAAI,CAAExW,OAAQ,QAA7E,SACE,eAACmU,GAAA,EAAD,UACE,uBAAK5jB,MAAO,CAAEjF,SAAU,IAAK6V,SAAU,YAAcvC,aA7CpC,WACvBoW,GAAY,GACZpnB,YAAW,WACTqnB,GAAW,KACV,MAyCG,UACE,sBAAKnnB,UAAU,0BAA0B2oB,aAlD1B,WACvBzB,GAAY,GACZC,GAAW,MAiDFe,YC6FEU,GAzNF,SAACzqB,GAEZ,IAAMlI,EAAOkI,EAAM0qB,OAGb3/B,EAAWoV,cACX/G,EAAcgH,aAAY,SAAClV,GAAD,OAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIqL,GAAMrL,IAAI,cAC5EkM,EAAWyH,aAAY,SAAClV,GAAD,OAAWA,EAAMuiB,OAAOxU,YAAYxM,IAAIqL,GAAMrL,IAAI,eACzEP,EAAckU,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIqL,GAAMrL,IAAItC,MAC1EiC,EAAcgU,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIqL,GAAMrL,IAAItC,MAC1EmmB,EAAiBlQ,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIqL,GAAMrL,IAAItC,MAC7EmC,EAAc8T,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIqL,GAAMrL,IAAItC,MAC1EwgC,EAAcpT,QAAQnX,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,MAAM8B,IAAIqL,GAAMrL,IAAItC,OAClFsjB,EAASiM,iBAAO,MAGhB3G,EAAY,2BAAuBjb,GACnC8yB,EAAa,gBACd3lB,IAIC4lB,EAAqBtM,MACzB,SAACnlB,I3BgB4B,SAACrO,EAAUC,EAAUoO,GACpDrO,EAAS,CACPb,OACAe,SAAU,SAACC,GACT,IAAML,EAAiBuO,EAAY/K,eAE/BkL,EAAOrO,EAAMP,MAAM8B,IAAIzB,GACvBslB,EAAiB,IAAIhmB,IAEzB,GAAIO,EAAeyP,cAEjB,OADAf,EAAKnO,IAAIjB,EAAqBmmB,GACvBplB,EAST,IANA,IAAM4/B,EAAajgC,EAAekgC,gBAC5B9iB,EAAgB6iB,EAAajgC,EAAe0Y,cAAgB1Y,EAAeyY,eAC3E4E,EAAc4iB,EAAajgC,EAAeyY,eAAiBzY,EAAe0Y,cAC1E1W,EAAeuM,EAAYe,oBAE7BsB,EAAW5O,EAAa6O,eAAeuM,GAEzCqI,EAAe7V,IAAIgB,EAASiB,UACxBjB,EAASiB,WAAawL,GAC1BzM,EAAW5O,EAAamQ,cAAcvB,EAASiB,UAIjD,OADAnD,EAAKnO,IAAIjB,EAAqBmmB,GACvBplB,K2BzCP8/B,CAAkBjgC,EAAU+M,EAAMsB,KAEpC,IACA,CAAE0lB,UAAU,IAGRmM,EAAkB,SAAC1gC,GACvB,OAAO+lB,EAAenlB,IAAIZ,IAItB2gC,EAAsBhC,MAAS,WACnC79B,EAAkBN,EAAU+M,EAAM3J,QACjC,KAGG2vB,EAAe,SAAC1kB,GAEpB,IAAMvO,EAAiBuO,EAAY/K,eACnCw8B,EAAmBzxB,GACfvO,EAAeyP,cACjBjP,EAAkBN,EAAU+M,EAAM,MAElCozB,EAAoB9xB,GAIjBT,IACHQ,GAAepO,EAAU+M,EAAMsB,GAC/B1M,EAAkB3B,EAAUF,KAM1BgrB,EAAwB,SAACtrB,GAC7BuzB,EC/G2B,SAAC1kB,EAAa7O,GAC3C,IAAIiP,EAAiBJ,EACjBc,EAAkBV,EAAeW,oBAEjC4M,EADiB3N,EAAY/K,eACEkV,cAC/BjK,EAAoB,IAAI5L,iBAAe,CACzCC,SAAUpD,EACVqD,YAAa,EACbC,UAAWtD,EACXuD,aAAc,IAKZqP,EADWjD,EAAgBwB,eAAenR,GAClBoS,UACxBqZ,EAAU7Y,EAAa1Q,IAAI4D,IAG3BmN,EAAe,IAAIzP,GAASoP,GAYhC,OAXAK,EAAapS,IAAIiF,IAA8B2lB,GAG/C9b,EAAkB5M,GAAgB4M,EAAiB,KAAMsD,EAAclE,GAGvEE,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,qBAC/D6M,IAAkBxc,IACpBiP,EAAiBC,cAAYC,eAAeF,EAAgBF,IAGvDE,EDiFQ2xB,CAAgB/xB,EAAa7O,IAE1CoX,YAAW,kBAAM8L,EAAOuM,QAAQG,UAAS,IAIrCiG,EAAyB,SAAC71B,GAC9BuzB,EEtH4B,SAAC1kB,EAAa7O,GAA2C,IAAjC6gC,IAAgC,yDAClF5xB,EAAiBJ,EACjBc,EAAkBV,EAAeW,oBAEjC4M,EADiB3N,EAAY/K,eACEkV,cAC/BjK,EAAoB,IAAI5L,iBAAe,CACzCC,SAAUpD,EACVqD,YAAa,EACbC,UAAWtD,EACXuD,aAAc,IAKZqP,EADWjD,EAAgBwB,eAAenR,GAClBoS,UACxB0uB,EAASluB,EAAa1Q,IAAI4D,IAG1BmN,EAAe,IAAIzP,GAASoP,GAYhC,OAXAK,EAAapS,IAAIiF,IAAgCg7B,GAGjDnxB,EAAkB5M,GAAgB4M,EAAiB,KAAMsD,EAAclE,GAGvEE,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,sBAC/DkxB,GAAwBrkB,IAAkBxc,IAC5CiP,EAAiBC,cAAYC,eAAeF,EAAgBF,IAGvDE,EFwFQ8xB,CAAiBlyB,EAAa7O,IAE3CoX,YAAW,kBAAM8L,EAAOuM,QAAQG,UAAS,IAIrCtN,EAAoB,kBAAMY,EAAOuM,QAAQG,SASzCX,EAAuB,CAC3BrgB,eAAgB2kB,EAChByN,iBAAkB,SAACxkB,GAAD,O3BIU,SAAChc,EAAUC,EAAU+b,GAArB,OAC9Bxb,EAAaR,EAAUC,EAAUb,EAAoB4c,G2BLdwkB,CAAiBxgC,EAAU+M,EAAMiP,IACtEykB,iBAAkB,SAACzR,GAAD,O3BKU,SAAChvB,EAAUC,EAAU+uB,GAArB,OAC9BxuB,EAAaR,EAAUC,EAAUb,EAAoB4vB,G2BNdyR,CAAiBzgC,EAAU+M,EAAMiiB,IACtEvN,kBAAmB,SAACjiB,EAAUwvB,GAAX,O3B1DU,SAAChvB,EAAUC,EAAUT,EAAUwvB,GAC9DhvB,EAAS,CACPb,OACAe,SAAU,SAACC,GAET,OADAA,EAAMP,MAAM8B,IAAIzB,GAAUyB,IAAItC,GAAuBsC,IAAIlC,EAAzDW,CAAmE6uB,GAC5D7uB,K2BqDuCshB,CAAkBzhB,EAAU+M,EAAMvN,EAAUwvB,IAC5FlN,oBACAI,kBAAmB,SAAC3I,GAAD,OAAW1K,GAAY7O,EAAU+M,EAAMwM,IAC1DhE,WAAY,kB3BmBU,SAACvV,EAAUC,GACnCD,EAAS,CACPb,OACAe,SAAU,SAACC,GACT,IAAIqO,EAAOrO,EAAMP,MAAM8B,IAAIzB,GACvBygC,EAASlyB,EAAK9M,IAAItC,GAEtB,OADAoP,EAAKnO,IAAIjB,GAAkBshC,EAAS,GAAK,IAClCvgC,K2B1BSoV,CAAWvV,EAAU+M,IACvCtM,aAAc,SAACX,GAAD,OAAoBW,EAAaT,EAAU+M,EAAMjN,IAC/De,aAAc,SAACf,GAAD,OAAoBe,EAAab,EAAU+M,EAAMjN,KAY3D6gC,EAAoB,CACxB1gC,SAAU8M,EACVa,YA8DF,OACE,iCACE,eAAC,GAAD,CAAWb,KAAMA,IACjB,uBAAKuM,GAAE,uBAAkBvM,GAAzB,UACE,eAAC,SAAD,CACE4jB,IAAKjO,EACLrU,YAAaA,EACbggB,SAAU0E,EACVmC,aAnGsB,SAAC/e,GAC7B,OAAKvI,EACE,cADegzB,GAAuBzqB,EAAG0pB,EAAe7/B,EAAUqO,EAAatB,IAmGhFuR,iBAnFiB,SAACF,EAAS/P,EAAa7O,GAAvB,OACvBqhC,GAAkBxyB,EAAa+P,EAASqQ,EAAsBjvB,IAmFxDshC,aAhFa,SAAC3qB,EAAG9H,GAAJ,OlBg4CK,SAAC8H,EAAG9H,EAAa0O,GAAkD,IAAtClC,EAAqC,uDAA5BH,GAChE,IAAKqC,EAAW3O,eAEd,OADA2F,QAAQC,MAAMwG,KACP,EAIT,IAAM1Y,EAAeuM,EAAYe,oBAC3BtP,EAAiBuO,EAAY/K,eAC7By9B,EAAmBjhC,EAAesY,YAClC8D,EAAW/F,EAAE6E,SACbgmB,GAAoB58B,IAASiX,iBAAeE,iBAAiBpF,IAAOkF,iBAAeG,mBAAmBrF,GAGxG1H,EAAiBJ,EACjBc,EAAkBrN,EAItB,IAAKhC,EAAeyP,cAElB,OADAwE,QAAQC,MAAM,gFACP,EAIT,GAAIkI,EAGF,OAFAzN,EAAiB4P,YAAU4iB,kBAAkBxyB,GAC7CsO,EAAW3O,eAAeK,IACnB,EAIT,IAAMiC,EAAW5O,EAAaC,cAAcL,IAAIq/B,GAC1C1uB,EAAe3B,EAAS4B,UACxB9P,EAAYkO,EAASkB,UACrBN,EAAc9O,EAAUpC,IAAIkF,IAA6B9C,EAAUd,IAAI4D,IAA6B,EAI1G,GAAI+M,IAAiB9M,IAAmD,IAAzBmL,EAASoL,YAAmB,CACzE3M,EAAkB1M,WAAS6c,aAAanQ,EAAiBrP,EAAgB,YAGzE,IAAIyf,EAAiB,IAAIvc,GAAS0N,EAASkB,WACvCkO,GAAc,EACdP,EAAenf,IAAIkF,MACrBia,EAAenM,OAAO9N,IACtBwa,GAAc,GAEZP,EAAenf,IAAIkF,MACrBia,EAAenM,OAAO9N,IACtBwa,GAAc,GAEZP,EAAenf,IAAIkF,MACrBia,EAAenM,OAAO9N,IACtBwa,GAAc,GAEZA,IACF3Q,EAAkB5M,GAAgB4M,EAAiB,KAAMoQ,EAAgBzf,IAI3E,IAAIgS,EAAY3C,EAAgB8C,cAAcvB,EAASiB,UACvD,GAAIG,EAAW,CACb,IAAIP,EAAYpC,EAAgBuC,eAAehB,EAASiB,UAGpDJ,GACAb,EAAS4B,YAAc/M,IACvBgM,EAAUe,YAAc/M,KAG1B4J,EAAkB+C,GAA4B/C,EAAiB2C,EAAUH,SAAUL,IAQvF,OAHA7C,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,eAChE4N,EAAW3O,eAAeK,IAEnB,EAIT,IAAIyyB,EAAS,IAAIl+B,GAOjB,GANAR,EAAU2+B,SAAQ,SAAC1/B,EAAO6R,IACpBuH,EAAOvH,GAAK/O,QAAQkW,KAAkC,GAAKI,EAAOvH,GAAK/O,QAAQ8N,IAAiB,IAClG6uB,EAAO7gC,IAAIiT,EAAK7R,MAIhBu/B,EACF,OAAQ3uB,GACN,KAAK9M,GAUH,OARA27B,EAAO7gC,IAAIiF,IAAiC9C,EAAUd,IAAI4D,KAE1D6J,EAAkB5M,GAAgB4M,EAAiBuB,EAASiB,SAAUuvB,GAEtEzyB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAEhE4N,EAAW3O,eAAeK,IAEnB,EAET,KAAKlJ,GAUH,OARA27B,EAAO7gC,IAAIiF,IAA+B9C,EAAUd,IAAI4D,KAExD6J,EAAkB5M,GAAgB4M,EAAiBuB,EAASiB,SAAUuvB,GAEtEzyB,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,qBAEhE4N,EAAW3O,eAAeK,IAEnB,EAQbU,EAAkB1M,WAAS2+B,WAAWjyB,EAAiBrP,GAGvD,IAAMyO,GADNE,EAAiBC,cAAYmB,KAAKpB,EAAgBU,EAAiB,gBAC1B7L,eAMzC,GAHA6L,EAAkB5M,GAAgB4M,EAAiB,KAAM+xB,EAAQ3yB,GAG7D8D,IAAiB9M,GAA2B,CAC9C,IACIga,EADapQ,EAAgBwB,eAAe7Q,EAAe0Y,eAC/B5G,UAC5BgP,EAAsBrB,EAAenf,IAAIkF,IACzCia,EAAe7d,IAAI4D,IACnB,EACJ6J,EAAkB+C,GAChB/C,EACArP,EAAe0Y,cACflH,EACAsP,GAKJ,GAAIvO,IAAiB9M,GAAwB,CAC3C,IACIob,EADYxR,EAAgB8C,cAAcnS,EAAe0Y,eAChC7G,SAC7BxC,EAAkB1M,WAAS6c,aACzBnQ,EACA,IAAIxM,iBAAe,CACjBC,SAAU+d,EACV9d,YAAa,EACbC,UAAW6d,EACX5d,aAAc,IAEhBwC,IAYJ,OANAkJ,EAAiBC,cAAYmB,KAAKxB,EAAac,EAAiB,eAChEV,EAAiBC,cAAYC,eAAeF,EAAgBF,GAG5DwO,EAAW3O,eAAeK,IAEnB,EkBziDL4yB,CAAclrB,EAAG9H,EAAa,CAC5BD,eAAgB2kB,KA+EZuO,gBAvEe,SAAC1nB,GAEtB,OADkBA,EAAatH,WAE7B,KAAK/M,GACH,MAAO,CACL0U,UAAW2Q,GACX3V,MAAO0rB,GAGX,KAAKp7B,GACH,MAAO,CACL0U,UAAWmY,GACXnd,MAAO0rB,GAGX,KAAKp7B,GACH,MAAO,CACL0U,UAAW4Q,GACX5V,MAAM,6BAAM0rB,GAAP,IAA0B7V,2BAGnC,KAAKvlB,GACH,MAAO,CACL0U,UAAWmb,GACXngB,MAAM,6BAAM0rB,GAAP,IAA0BtL,4BAGnC,KAAK9vB,GACH,MAAO,CACL0U,UAAWkb,GACXlgB,MAAO0rB,GAGX,KAAKp7B,GACH,MAAO,CACL0U,UAAW4X,GACX5c,MAAO0rB,GAGX,KAAKp7B,GACH,MAAO,CACL0U,UAAWsU,GACXtZ,MAAM,6BACD0rB,GADA,IAEHtyB,cACA6xB,kBACApe,oBACA2M,uBACAD,qBAAsB,SAAChvB,GAAD,OAAcuzB,E1B1KV,SAAC1kB,EAAa7O,GAA0B,IAAhBC,EAAe,uDAAN,EACrE,OAAOiP,cAAYC,eACjBN,EACA,IAAI1L,iBAAe,CACjBC,SAAUpD,EACVqD,YAAapD,EACbqD,UAAWtD,EACXuD,aAActD,K0BmKyC8hC,CAAuBlzB,EAAa7O,QAI3F,QACE,MAAO,CACLya,UAAWqQ,GACXrV,MAAO0rB,KAiBPa,YAAY,EACZ5zB,SAAUA,GAAYzM,GAAeE,GAAeu+B,GAAer+B,EACnEkgC,eAAgB/7B,GAChBqrB,QAAS,kB3BhLe,SAAC/wB,EAAUC,GAC3CD,EAAS,CACPb,OACAe,SAAU,SAACC,GAET,OADAA,EAAMN,YAAcI,EACbE,K2B2KYuhC,CAAmB1hC,EAAU+M,MAG9C,eAAC,GAAD,CAAW9M,SAAU8M,EAAM+U,kBAAmBA,IAC9C,eAAC,GAAD,CAAuBA,kBAAmBA,IAC1C,eAAC,GAAD,CAAuBA,kBAAmBA,IAE1C,eAAC,GAAD,CAAa7hB,SAAU8M,OAGzB,eAAC,GAAD,CACE9M,SAAU8M,EACV+lB,UAAW9K,EACX3Z,YAAaA,EACb0kB,aA5IgC,SAAC1kB,GAAD,OAAiBD,GAAepO,EAAU+M,EAAMsB,IA6IhFxO,YAAaiiB,IAIf,sBAAKhL,UAAU,qBAGf,eAACnC,GAAA,EAAD,CACE8Y,QAAQ,WACR9W,QAAS,SAACR,IAclB,SAA6B1L,GAC3B,IAAIk3B,EAAWj9B,SAASulB,cAAc,YAmBtC0X,EAASpoB,MAAM4Q,SAAW,QAC1BwX,EAASpoB,MAAMyM,IAAM,EACrB2b,EAASpoB,MAAMiN,KAAO,EAItBmb,EAASpoB,MAAMuP,MAAQ,MACvB6Y,EAASpoB,MAAMyP,OAAS,MAGxB2Y,EAASpoB,MAAMtT,QAAU,EAGzB07B,EAASpoB,MAAMqY,OAAS,OACxB+P,EAASpoB,MAAMmiB,QAAU,OACzBiG,EAASpoB,MAAMyT,UAAY,OAG3B2U,EAASpoB,MAAMlM,WAAa,cAE5B5C,EAAOA,EAAK6e,QAAQ,MAAO,QAC3BqY,EAASlgC,MAAQgJ,EAEjB/F,SAASK,KAAKslB,YAAYsX,GAC1BA,EAASvS,QACTuS,EAASC,SAET,IACE,IACIC,EADan9B,SAASo9B,YAAY,QACf,aAAe,eACtC/tB,QAAQguB,IAAI,4BAA8BF,GAC1C,MAAOG,GACPjuB,QAAQguB,IAAI,wBAGdr9B,SAASK,KAAKk9B,YAAYN,GApElBO,CAAoBC,KAAKC,UAAUC,uBAAah0B,EAAYe,wBAHhE,8B,kBG3MSkzB,GA5BD,WACZ,IAAMtiC,EAAWoV,cACX2H,EAAa,IAAIxJ,GAAWvT,GAAU,GACtCuiC,EAAkBltB,aAAY,SAAClV,GAAD,OAAWA,EAAMmV,WAAW1V,SAE1D4iC,EAAe,MAcrB,OAbAvsB,qBAAU,WACRlW,GAASC,EAAUwiC,GACnBzlB,EACGrN,IAAI3P,GAAUyiC,GACd9yB,IACCtB,GACAo0B,EACA9zB,cAAY0W,kBAAkBzS,GAA0B8vB,yBAAeN,KAAKO,MAlBpE,65QAkByF5oB,KAElG6oB,MACH5lB,EAAWrN,IAAIkzB,EAAcJ,GAAcG,QAC1C,IAGD,+BACE,eAACE,GAAA,EAAD,UACGN,EAAgBniC,IAAIoiC,GAAgB,eAAC,GAAD,CAAM7C,OAAQ6C,IAAmB,UC7B9E,GALAM,cAKIz/B,OAAO0/B,MAAOC,MAAM,yBACnB,CACH,IAAMC,GAAWC,YAAY,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,WAERC,UAAW,CACTH,MAAO,UACPC,KAAM,UACNC,KAAM,cAKNE,GAAQC,YACZC,YAAgB,CACdjhB,O5BuegB,eAACkhB,EAAD,uDAAY31B,GAAW0U,EAAvB,8CACpBA,EAAOxjB,OAASA,GAAO0kC,YAAQD,GAAU,SAACzjC,GAAD,OAAYwiB,EAAOziB,SAAWyiB,EAAOziB,SAASC,GAASA,KAAUyjC,G4BvetGtuB,W/BoJoB,eAACsuB,EAAD,uDAAYjkC,EAAqBgjB,EAAjC,8CACxBA,EAAOxjB,OAASA,EAAO0kC,YAAQD,GAAU,SAACzjC,GAAD,OAAYwiB,EAAOziB,SAAWyiB,EAAOziB,SAASC,GAASA,KAAUyjC,M+BjJ1GE,IAASC,OACP,eAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,eAACO,EAAA,EAAD,CAAelT,MAAOmS,GAAtB,SACE,eAAC,IAAMgB,WAAP,UACE,eAAC,GAAD,UAINv/B,SAASC,eAAe,SAK1BD,SAASw/B,WAAa,SAAC/tB,GACrBA,EAAE4E,kBAMJrc,O","file":"static/js/main.3eca8e92.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*************************************************\n * @file editorMisc.js\n * @description Reducers about mouse interaction or other frequently used states.\n *************************************************/\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport produce from 'immer';\n\n/*************************************************\n * CONST\n *************************************************/\n// The reducer is `editorMisc`\nconst type = 'editorMisc';\n\nexport const pmsc = {\n  // Page Misc State Constants\n  hover: 1,\n  dragShadowPos: 2,\n  editingCode: 3,\n  editingMenu: 4,\n  draggingBlock: 5,\n  focusBlockKey: 6,\n  specialFocusFunc: 7,\n  moveDirection: 8,\n  selectedBlocks: 9,\n  popupMenuRange: 10,\n  triggerEsc: 11,\n  linkRange: 12,\n  preLinkRange: 13,\n  mathRange: 14,\n  editingMath: 15,\n  slashCommandInfo: 16,\n};\n\nconst initPageMiscState = [\n  [pmsc.hover, null],\n  [pmsc.dragShadowPos, [-1, -1, false, null, []]], // [offset x, offset y, enable shadow, callback function, arrays of selected blocks]\n  [pmsc.editingCode, false],\n  [pmsc.editingMenu, false],\n  [pmsc.draggingBlock, false],\n  [pmsc.focusBlockKey, null], // Used for special block like code block, table, and etc.\n  [pmsc.specialFocusFunc, new Map()], // Key: blockKey, Value: focus func\n  [pmsc.moveDirection, null],\n  [pmsc.selectedBlocks, new Set()],\n  [pmsc.popupMenuRange, null],\n  [pmsc.triggerEsc, 0],\n  [pmsc.linkRange, null],\n  [pmsc.preLinkRange, null], // Set selectionState and focus editor before editing the link\n  [pmsc.mathRange, null],\n  [pmsc.editingMath, false],\n  [pmsc.slashCommandInfo, {blockKey: '', offset: -1, textfield: 0}],\n];\n\nconst initEditorMiscState = {\n  pages: new Map(),\n  focusEditor: null,\n  selectionState: null,\n};\n\n/*************************************************\n * ACTION\n *************************************************/\nexport const initPage = (dispatch, pageUuid) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      if (!state.pages.has(pageUuid)) {\n        state.pages.set(pageUuid, new Map(initPageMiscState));\n      }\n\n      return state;\n    },\n  });\n};\n\nexport const setFocusEditorUuid = (dispatch, pageUuid) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      state.focusEditor = pageUuid;\n      return state;\n    },\n  });\n};\n\nexport const setSpecialFocusFunc = (dispatch, pageUuid, blockKey, focusFunc) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.pages.get(pageUuid);\n      let specialFocusFuncs = page.get(pmsc.specialFocusFunc);\n      specialFocusFuncs.set(blockKey, focusFunc);\n      return state;\n    },\n  });\n};\n\nexport const focusSpecialBlock = (dispatch, pageUuid, blockKey, moveDirection) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      state.pages.get(pageUuid).get(pmsc.specialFocusFunc).get(blockKey)(moveDirection);\n      return state;\n    },\n  });\n};\n\nexport const setSelectedBlocks = (dispatch, pageUuid, editorState) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      const selectionState = editorState.getSelection();\n\n      let page = state.pages.get(pageUuid);\n      let selectedBlocks = new Set();\n\n      if (selectionState.isCollapsed()) {\n        page.set(pmsc.selectedBlocks, selectedBlocks);\n        return state;\n      }\n\n      const isBackward = selectionState.getIsBackward();\n      const startBlockKey = isBackward ? selectionState.getFocusKey() : selectionState.getAnchorKey();\n      const endBlockKey = isBackward ? selectionState.getAnchorKey() : selectionState.getFocusKey();\n      const contentState = editorState.getCurrentContent();\n\n      let curBlock = contentState.getBlockForKey(startBlockKey);\n      while (true) {\n        selectedBlocks.add(curBlock.getKey());\n        if (curBlock.getKey() === endBlockKey) break;\n        curBlock = contentState.getBlockAfter(curBlock.getKey());\n      }\n\n      page.set(pmsc.selectedBlocks, selectedBlocks);\n      return state;\n    },\n  });\n};\n\nexport const setPopupMenuRange = (dispatch, pageUuid, menuRange) =>\n  setPageValue(dispatch, pageUuid, pmsc.popupMenuRange, menuRange);\nexport const setLinkRange = (dispatch, pageUuid, linkRange) =>\n  setPageValue(dispatch, pageUuid, pmsc.linkRange, linkRange);\nexport const setPreLinkRange = (dispatch, pageUuid, preLinkRange) =>\n  setPageValue(dispatch, pageUuid, pmsc.preLinkRange, preLinkRange);\nexport const setMathRange = (dispatch, pageUuid, mathRange) =>\n  setPageValue(dispatch, pageUuid, pmsc.mathRange, mathRange);\nexport const setMouseOverBlockKey = (dispatch, pageUuid, blockKey) =>\n  setPageValue(dispatch, pageUuid, pmsc.hover, blockKey);\nexport const setDragShadowPos = (dispatch, pageUuid, dragShadowPos) =>\n  setPageValue(dispatch, pageUuid, pmsc.dragShadowPos, dragShadowPos);\nexport const setEditingCode = (dispatch, pageUuid, editingCode) =>\n  setPageValue(dispatch, pageUuid, pmsc.editingCode, editingCode);\nexport const setEditingMenu = (dispatch, pageUuid, editingMenu) =>\n  setPageValue(dispatch, pageUuid, pmsc.editingMenu, editingMenu);\nexport const setDraggingBlock = (dispatch, pageUuid, dragging) =>\n  setPageValue(dispatch, pageUuid, pmsc.draggingBlock, dragging);\nexport const setFocusBlockKey = (dispatch, pageUuid, focusBlockKey) =>\n  setPageValue(dispatch, pageUuid, pmsc.focusBlockKey, focusBlockKey);\nexport const setMoveDirection = (dispatch, pageUuid, moveDirection) =>\n  setPageValue(dispatch, pageUuid, pmsc.moveDirection, moveDirection);\nexport const setEditingMath = (dispatch, pageUuid, editingMath) =>\n  setPageValue(dispatch, pageUuid, pmsc.editingMath, editingMath);\nexport const setSlashCommandInfo = (dispatch, pageUuid, blockKey, offset, textfield) =>\n  setPageValue(dispatch, pageUuid, pmsc.slashCommandInfo, {blockKey, offset, textfield});\n\nconst setPageValue = (dispatch, pageUuid, pmscKey, value) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.pages.get(pageUuid);\n      page.set(pmscKey, value);\n      return state;\n    },\n  });\n};\n\nexport const triggerEsc = (dispatch, pageUuid) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.pages.get(pageUuid);\n      let escNum = page.get(pmsc.triggerEsc);\n      page.set(pmsc.triggerEsc, (escNum + 1) % 87);\n      return state;\n    },\n  });\n};\n\nexport const setSelectionState = (dispatch, selectionState) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      state.selectionState = selectionState;\n      return state;\n    },\n  });\n};\n\n/*************************************************\n * REDUCER\n * @brief Use immer to perform deep udpate of state.\n *************************************************/\nexport const editorMisc = (oldState = initEditorMiscState, action) =>\n  action.type === type ? produce(oldState, (state) => (action.callback ? action.callback(state) : state)) : oldState;\n","/*************************************************\n * @file Misc.js\n * @description Some Useful Functions\n *************************************************/\n\n/*************************************************\n * IMPORT LIBRARIES\n *************************************************/\nimport { EditorState, Modifier, SelectionState } from 'draft-js';\nimport { v4 as uuidv4 } from 'uuid';\n\n/*************************************************\n * CONSTANTS\n *************************************************/\nconst uuidBytes = [0x6e, 0xc0, 0xbd, 0x7f, 0x11, 0xc0, 0x43, 0xda, 0x97, 0x5e, 0x2a, 0x8a, 0xd9, 0xeb, 0xae, 0x0b];\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\nexport function newBlockId() {\n  return uuidv4(uuidBytes);\n}\n\nexport const getFirstBlockKey = (contentState) => {\n  const blockMap = contentState.getBlockMap();\n  return blockMap.keys().next().value;\n};\n\nexport const getLastBlockKey = (contentState) => {\n  const blockMap = contentState.getBlockMap();\n  return Array.from(blockMap.keys()).pop();\n};\n\nexport const updateBlockData = (contentState, blockKey, blockData, selectionState = null) => {\n  if (selectionState) {\n    return Modifier.setBlockData(contentState, selectionState, blockData);\n  } else {\n    return Modifier.setBlockData(\n      contentState,\n      new SelectionState({\n        focusKey: blockKey,\n        focusOffset: 0,\n        anchorKey: blockKey,\n        anchorOffset: 0,\n      }),\n      blockData,\n    );\n  }\n};\n\nexport class GeekeMap extends Map {\n  toObject() {\n    return Object.fromEntries(this);\n  }\n}\n\nexport const setSelectionStateByKey = (editorState, blockKey, offset = 0) => {\n  return EditorState.forceSelection(\n    editorState,\n    new SelectionState({\n      focusKey: blockKey,\n      focusOffset: offset,\n      anchorKey: blockKey,\n      anchorOffset: offset,\n    }),\n  );\n};\n\nexport const getBackgroundColorWithClass = (className) => {\n  let targetStyle = null;\n  let styleSheets = document.styleSheets;\n\n  // Find background color first.\n  for (let i in styleSheets) {\n    let cssRules = styleSheets[i]['cssRules'];\n    for (let j in cssRules) {\n      if (cssRules[j].selectorText === className) {\n        targetStyle = cssRules[j].style;\n        break;\n      }\n    }\n  }\n\n  if (!targetStyle || !targetStyle.backgroundColor) {\n    // Unable to find background color. QQ\n    return null;\n  }\n  return targetStyle.backgroundColor;\n};\n\n// Reference: https://javascript.plainenglish.io/how-to-find-the-caret-inside-a-contenteditable-element-955a5ad9bf81\nexport const getCaretRange = () => {\n  const isSupported = typeof window.getSelection !== 'undefined';\n  if (isSupported) {\n    const selection = window.getSelection();\n    if (selection.rangeCount !== 0) {\n      const range = selection.getRangeAt(0).cloneRange();\n      range.collapse(true);\n      const rect = range.getClientRects()[0];\n      if (rect) {\n        return range;\n      }\n    }\n  }\n  return null;\n};\n\n// Reference: https://javascript.plainenglish.io/how-to-find-the-caret-inside-a-contenteditable-element-955a5ad9bf81\nexport const getCaretIndex = (element) => {\n  let position = 0;\n  const isSupported = typeof window.getSelection !== 'undefined';\n  if (isSupported) {\n    const selection = window.getSelection();\n    if (selection.rangeCount !== 0) {\n      const range = window.getSelection().getRangeAt(0);\n      const preCaretRange = range.cloneRange();\n      preCaretRange.selectNodeContents(element);\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\n      position = preCaretRange.toString().length;\n    }\n  }\n  return position;\n};\n\nexport const checkOverlap = (s1, e1, s2, e2, includeLast = false) => {\n  if (includeLast) {\n    if ((s1 < s2 && e1 < s2) || (s2 < s1 && e2 < s1)) return false;\n  } else {\n    if ((s1 < s2 && e1 <= s2) || (s2 < s1 && e2 <= s1)) return false;\n  }\n  return true;\n};\n","/**\n * @file constant.js\n * @description All global constant will be located in this file for configuration convenience.\n */\n\nexport const isOSX = navigator.userAgent.indexOf('Mac') !== -1;\n\nconst getRem = () => {\n  let getRemEle = document.getElementById('geeke-getRem');\n  if (getRemEle) return parseFloat(getComputedStyle(getRemEle).fontSize);\n  else return parseFloat(getComputedStyle(document.body).fontSize);\n};\nexport const oneRem = getRem();\nexport const remToPx = (rem) => rem * oneRem; // Unit: px\n\nexport const indentWidth = 1.6; // Unit: rem\nexport const draggableLeftPadding = 2; // Unit: rem\nexport const editorLeftPadding = 3; // Unit: rem\nexport const editorTopPadding = 0.3; // Unit: rem\nexport const editorDraggableButtonLeftPadding = 1.6; // Unit: rem\nexport const editorDraggableButtonWidth = 1.6; // Unit: rem\n\nexport const dragMaskHeight = 0.25; // Unit: rem\nexport const dragMaskIndentInterval = 0.15; // Unit: rem\n\nexport const selectionBackgroundColor = 'rgba(42, 165, 245, 0.5)';\n\nexport const blockDataKeys = {\n  indentLevel: 'indentLevel',\n  numberListOrder: 'numberListOrder',\n  checkListCheck: 'checkListCheck',\n  toggleListToggle: 'toggleListToggle',\n  parentKey: 'parentKey',\n  headingType: 'headingType',\n  codeContent: 'codeContent',\n  codeLanguage: 'codeLanguage',\n  codeWrapping: 'codeWrapping',\n  codeTheme: 'codeTheme',\n  codeLineNumber: 'codeLineNumber',\n};\n\nexport const constBlockType = {\n  default: 'unstyled',\n  bulletList: 'bullet-list',\n  numberList: 'number-list',\n  checkList: 'check-list',\n  toggleList: 'toggle-list',\n  quote: 'quote',\n  heading: 'heading',\n  code: 'code',\n};\n\n// Heading type\nexport const headingType = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n};\n\n// Special string for inline math\nexport const magicMathStr = '¡™¡';\n\n// Constants for editor inline style\nexport const styleMap = {\n  STRIKETHROUGH: {\n    textDecoration: 'line-through',\n  },\n  CODE: {\n    backgroundColor: 'rgba(55, 55, 55, 0.2)',\n    borderRadius: '0.2rem',\n    fontFamily: 'monospace',\n    padding: '0rem 0.2rem',\n  },\n\n  // Text Color\n  TEXTRED: { color: '#f44336' },\n  TEXTORANGE: { color: '#ff9800' },\n  TEXTYELLOW: { color: '#fdd835' },\n  TEXTGREEN: { color: '#4caf50' },\n  TEXTBLUE: { color: '#2196f3' },\n  TEXTPURPLE: { color: '#9c27b0' },\n  TEXTPINK: { color: '#f06292' },\n  TEXTBROWN: { color: '#795548' },\n  TEXTGRAY: { color: '#9e9e9e' },\n\n  // Background Color\n  BGRED: { backgroundColor: '#f4433680' },\n  BGORANGE: { backgroundColor: '#ff980080' },\n  BGYELLOW: { backgroundColor: '#fdd83580' },\n  BGGREEN: { backgroundColor: '#4caf5080' },\n  BGBLUE: { backgroundColor: '#2196f380' },\n  BGPURPLE: { backgroundColor: '#9c27b080' },\n  BGPINK: { backgroundColor: '#f0629280' },\n  BGBROWN: { backgroundColor: '#79554880' },\n  BGGRAY: { backgroundColor: '#9e9e9e80' },\n};\n\nexport const colorList = ['RED', 'ORANGE', 'YELLOW', 'GREEN', 'BLUE', 'PURPLE', 'PINK', 'BROWN', 'GRAY'];\n\n// Constants for AceEditor\nexport const constAceEditorAction = {\n  left: 0,\n  up: 1,\n  down: 2,\n  right: 3,\n  backspace: 4,\n};\n\nexport const constMoveDirection = {\n  up: 0,\n  down: 1,\n};\n\nexport const languageMap = {\n  abap: 'abap',\n  assembly: 'assembly_x86',\n  autohotkey: 'autohotkey',\n  batch: 'batchfile',\n  c: 'c_cpp',\n  cpp: 'c_cpp',\n  cc: 'c_cpp',\n  clojure: 'clojure',\n  coffee: 'coffee',\n  'c++': 'c_cpp',\n  'c#': 'csharp',\n  csharp: 'csharp',\n  css: 'css',\n  dart: 'dart',\n  diff: 'diff',\n  docker: 'dockerfile',\n  elixir: 'elixir',\n  elm: 'elm',\n  erlang: 'erlang',\n  fortran: 'fortran',\n  'f#': 'fsharp',\n  fsharp: 'fsharp',\n  gherkin: 'gherkin',\n  glsl: 'glsl',\n  go: 'golang',\n  golang: 'golang',\n  graphql: 'graphqlschema',\n  graphqlschema: 'graphqlschema',\n  groovy: 'groovy',\n  haskell: 'haskell',\n  html: 'html',\n  java: 'java',\n  javascript: 'javascript',\n  json: 'json',\n  kotlin: 'kotlin',\n  latex: 'latex',\n  less: 'less',\n  lisp: 'lisp',\n  livescript: 'livescript',\n  lua: 'lua',\n  makefile: 'makefile',\n  make: 'makefile',\n  markdown: 'markdown',\n  matlab: 'matlab',\n  nix: 'nix',\n  objectivec: 'objectivec',\n  'objective-c': 'objectivec',\n  ocaml: 'ocaml',\n  pascal: 'pascal',\n  perl: 'perl',\n  php: 'php',\n  txt: 'plain_text',\n  text: 'plain_text',\n  plaintext: 'plain_text',\n  plain_text: 'plain_text',\n  powershell: 'powershell',\n  prolog: 'prolog',\n  python: 'python',\n  r: 'r',\n  ruby: 'ruby',\n  rust: 'rust',\n  sass: 'sass',\n  scala: 'scala',\n  scheme: 'scheme',\n  scss: 'scss',\n  sh: 'sh',\n  shell: 'sh',\n  sql: 'sql',\n  swift: 'swift',\n  tcl: 'tcl',\n  typescript: 'typescript',\n  verilog: 'verilog',\n  vhdl: 'vhdl',\n  xml: 'xml',\n  yaml: 'yaml',\n  yml: 'yaml',\n};\n\nexport const languageList = [\n  'ABAP',\n  'Assembly',\n  'AutoHotKey',\n  'Batch',\n  'C',\n  'Clojure',\n  'Coffee',\n  'C++',\n  'C#',\n  'CSS',\n  'Dart',\n  'Diff',\n  'Docker',\n  'Elixir',\n  'Elm',\n  'Erlang',\n  'Fortran',\n  'F#',\n  'Gherkin',\n  'GLSL',\n  'Go',\n  'GraphQL',\n  'Groovy',\n  'Haskell',\n  'HTML',\n  'Java',\n  'JavaScript',\n  'JSON',\n  'Kotlin',\n  'LaTeX',\n  'Less',\n  'Lisp',\n  'LiveScript',\n  'Lua',\n  'Makefile',\n  'Markdown',\n  'MATLAB',\n  'Nix',\n  'Objective-C',\n  'OCaml',\n  'Pascal',\n  'Perl',\n  'PHP',\n  'PlainText',\n  'Powershell',\n  'Prolog',\n  'Python',\n  'R',\n  'Ruby',\n  'Rust',\n  'Sass',\n  'Scala',\n  'Scheme',\n  'Scss',\n  'Shell',\n  'SQL',\n  'Swift',\n  'TCL',\n  'TypeScript',\n  'Verilog',\n  'VHDL',\n  'XML',\n  'YAML',\n];\n\nexport const codeBlockThemeList = [\n  'ambiance',\n  'chaos',\n  'chrome',\n  'clouds_midnight',\n  'clouds',\n  'cobalt',\n  'crimson_editor',\n  'dawn',\n  'dracula',\n  'dreamweaver',\n  'eclipse',\n  'github',\n  'gob',\n  'gruvbox',\n  'idle_fingers',\n  'iplastic',\n  'katzenmilch',\n  'kr_theme',\n  'kuroir',\n  'merbivore_soft',\n  'merbivore',\n  'mono_industrial',\n  'monokai',\n  'nord_dark',\n  'pastel_on_dark',\n  'solarized_dark',\n  'solarized_light',\n  'sqlserver',\n  'terminal',\n  'textmate',\n  'tomorrow_night_blue',\n  'tomorrow_night_bright',\n  'tomorrow_night_eighties',\n  'tomorrow_night',\n  'tomorrow',\n  'twilight',\n  'vibrant_ink',\n  'xcode',\n];\n\nexport const codeBlockThemeMap = new Map([\n  ['Ambiance', 'ambiance'],\n  ['Chaos', 'chaos'],\n  ['Chrome', 'chrome'],\n  ['Clouds Midnight', 'clouds_midnight'],\n  ['Clouds', 'clouds'],\n  ['Cobalt', 'cobalt'],\n  ['Crimson Editor', 'crimson_editor'],\n  ['Dawn', 'dawn'],\n  ['Dracula', 'dracula'],\n  ['Dreamweaver', 'dreamweaver'],\n  ['Eclipse', 'eclipse'],\n  ['GitHub', 'github'],\n  ['Gob', 'gob'],\n  ['Gruvbox', 'gruvbox'],\n  ['Idle Fingers', 'idle_fingers'],\n  ['Iplastic', 'iplastic'],\n  ['Katzen-Milch', 'katzenmilch'],\n  ['KR Theme', 'kr_theme'],\n  ['Kuroir', 'kuroir'],\n  ['Merbivore Soft', 'merbivore_soft'],\n  ['Merbivore', 'merbivore'],\n  ['Mono Industrial', 'mono_industrial'],\n  ['Monokai', 'monokai'],\n  ['Nord Dark', 'nord_dark'],\n  ['Pastel on Dark', 'pastel_on_dark'],\n  ['Solarized Dark', 'solarized_dark'],\n  ['Solarized Light', 'solarized_light'],\n  ['SQL Server', 'sqlserver'],\n  ['Temrinal', 'terminal'],\n  ['Textmate', 'textmate'],\n  ['Tomorrow Night Blue', 'tomorrow_night_blue'],\n  ['Tomorrow Night Bright', 'tomorrow_night_bright'],\n  ['Tomorrow Night Eighties', 'tomorrow_night_eighties'],\n  ['Tomorrow Night', 'tomorrow_night'],\n  ['Tomorrow', 'tomorrow'],\n  ['Twilight', 'twilight'],\n  ['Vibrant Ink', 'vibrant_ink'],\n  ['XCode', 'xcode'],\n]);\n\nexport const languageOptions = languageList.map((v) => {\n  return {\n    value: languageMap[v.toLowerCase()],\n    label: v,\n  };\n});\n\nexport const languageReverseMap = new Map(\n  languageList.map((v) => {\n    let lv = v.toLowerCase();\n    return [languageMap[lv], v];\n  }),\n);\n\nexport const codeBlockThemeReverseMap = new Map(\n  Array.from(codeBlockThemeMap.keys()).map((k) => {\n    let v = codeBlockThemeMap.get(k);\n    return [v, k];\n  }),\n);\n\nexport const themeOptions = codeBlockThemeList.map((v) => {\n  return {\n    value: v,\n    label: codeBlockThemeReverseMap.get(v),\n  };\n});\n","/*************************************************\n * @file editor.js\n * @description Action and reducer of react-redux.\n *************************************************/\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { EditorState, Modifier, SelectionState } from 'draft-js';\nimport produce from 'immer';\nimport { checkOverlap, GeekeMap } from '../utils/Misc';\n\n/*************************************************\n * CONST\n *************************************************/\nimport { colorList, magicMathStr } from '../constant';\n\n// The reducer is `editor`\nconst type = 'editor';\n\n// Permission\nconst permissionConst = {\n  members: 0,\n  everyone: 1,\n  owner: 2,\n  invitee: 3,\n};\n\n/**\n * Data structure\n * Target performance:\n *   * Cluster: 1M users, 1T blocks, 10M queries per seconds\n *   * Single CPU server: 100 users, 1M blocks, 1K queries per seconds\n * DB: NoSQL\n */\n// Empty Page\nconst emptyPageObj = {\n  // Page ID\n  uuid: '11111111-2222-3333-4444-555555555555',\n  // Author\n  author: '',\n  // Space\n  space: '',\n  // Title\n  title: 'Untitled',\n  // Editor content. It should be initialized as EditorState object\n  content: null,\n  // Tags\n  tags: [],\n  // Background image above the title\n  background: '',\n  // Back links\n  backLinks: [], // {page: pageUuid, block: blockUuid}\n  // Page Comment\n  comments: [],\n  // Permision\n  Permision: {\n    read: permissionConst.members,\n    write: permissionConst.members,\n  },\n  // Icon\n  icon: '',\n  // Read only\n  readOnly: false,\n  // Public: be able to be searched by search engine\n  public: false,\n  // Create date\n  createDate: 0.0,\n  // Last modified date\n  lastModifiedDate: 0.0,\n  // Ancestors\n  ancestors: [],\n};\n\n// Empty Workspace\n// const emptyWorkspace = {\n//   // Space ID\n//   uuid: '11111111-3333-5555-7777-999999999999',\n//   // Name\n//   name: 'Workspace',\n//   // Private pages\n//   privates: [],\n//   // Shared: accessible by all workspace members by default\n//   shares: [],\n//   // Favorites\n//   favorites: [],\n//   // Members\n//   members: [],\n//   // Administrators\n//   administrators: [],\n//   // Root pages\n//   rootPages: [],\n//   // Opened page\n//   openedPages: [],\n//   // Permission: default permission\n//   permission: {\n//     read: permissionConst.members,\n//     write: permissionConst.members,\n//   },\n//   // Theme\n//   theme: 'default',\n// }\n\n// Init state\nconst initState = {\n  cachedPages: new Map(),\n};\n\n/*************************************************\n * ACTION\n *************************************************/\nexport const initPage = (dispatch, pageUuid) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      state.cachedPages.set(pageUuid, new GeekeMap(Object.entries(emptyPageObj)));\n      return state;\n    },\n  });\n};\n\nexport const setReadOnly = (dispatch, pageUuid, readOnly) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      page.set('readOnly', readOnly);\n      return state;\n    },\n  });\n};\n\nexport const setEditorState = (dispatch, pageUuid, editorState) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      page.set('content', editorState);\n      return state;\n    },\n  });\n};\n\nexport const showEditorSelection = (dispatch, pageUuid, newSelectionState = null) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      const editorState = page.get('content');\n      const selectionState = newSelectionState ? newSelectionState : editorState.getSelection();\n      const newEditorState = EditorState.forceSelection(editorState, selectionState);\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const toggleBold = (dispatch, pageUuid) => toggleStyle(dispatch, pageUuid, 'BOLD');\nexport const toggleItalic = (dispatch, pageUuid) => toggleStyle(dispatch, pageUuid, 'ITALIC');\nexport const toggleStrikethrough = (dispatch, pageUuid) => toggleStyle(dispatch, pageUuid, 'STRIKETHROUGH');\nexport const toggleUnderline = (dispatch, pageUuid) => toggleStyle(dispatch, pageUuid, 'UNDERLINE');\nexport const toggleCode = (dispatch, pageUuid) => toggleStyle(dispatch, pageUuid, 'CODE');\n\n// Reference: https://github.com/facebook/draft-js/blob/10ca1ad44843e970c4314f85a8f37d26f842ebf9/src/model/modifier/RichTextEditorUtil.js\nexport const toggleStyle = (dispatch, pageUuid, inlineStyle) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n\n      let newContentState = editorState.getCurrentContent();\n      let newEditorState = editorState;\n      const selectionState = editorState.getSelection();\n      const currentStyle = editorState.getCurrentInlineStyle();\n\n      if (selectionState.isCollapsed()) {\n        // If the selection is collapsed, toggle the specified style on or off and\n        // set the result as the new inline style override. This will then be\n        // used as the inline style for the next character to be inserted.\n        newEditorState = EditorState.setInlineStyleOverride(\n          editorState,\n          currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle),\n        );\n      } else {\n        // If characters are selected, immediately apply or remove the\n        // inline style on the document state itself.\n\n        // If the style is already present for the selection range, remove it.\n        // Otherwise, apply it.\n        if (currentStyle.has(inlineStyle)) {\n          newContentState = Modifier.removeInlineStyle(newContentState, selectionState, inlineStyle);\n        } else {\n          newContentState = Modifier.applyInlineStyle(newContentState, selectionState, inlineStyle);\n        }\n\n        // Push state\n        newEditorState = EditorState.push(editorState, newContentState, 'change-inline-style');\n      }\n\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const toggleLink = (dispatch, pageUuid, link) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n      let validUrl = true;\n      let plink = null;\n\n      const selectionState = editorState.getSelection();\n      const contentState = editorState.getCurrentContent();\n      let newContentState = contentState;\n      let newEditorState = editorState;\n\n      // Check whether the selected text are all in the same block\n      if (selectionState.getAnchorKey() !== selectionState.getFocusKey()) {\n        return state;\n      }\n\n      // Get entities ranges\n      const anchorBlock = contentState.getBlockForKey(selectionState.getAnchorKey());\n      let firstLinkEntityKey = null;\n      let curEntityKey = null;\n      let clearMin = 10e9;\n      let clearMax = -1;\n      let rangesOfOverlapLink = [];\n      anchorBlock.findEntityRanges(\n        (value) => {\n          curEntityKey = value.entity;\n          return true;\n        },\n        (start, end) => {\n          if (!curEntityKey) return;\n          const curEntity = contentState.getEntity(curEntityKey);\n          const startOffset = selectionState.getStartOffset();\n          const endOffset = selectionState.getEndOffset();\n          if (checkOverlap(start, end, startOffset, endOffset, false)) {\n            if (curEntity.type === 'LINK') {\n              if (!firstLinkEntityKey) firstLinkEntityKey = curEntityKey;\n              rangesOfOverlapLink.push({ start, end });\n            }\n            clearMin = Math.min(start, clearMin);\n            clearMax = Math.max(end, clearMax);\n          }\n        },\n      );\n      clearMin = Math.min(selectionState.getStartOffset(), clearMin);\n      clearMax = Math.max(selectionState.getEndOffset(), clearMax);\n\n      // Clear overlapping entities\n      newContentState = Modifier.applyEntity(\n        newContentState,\n        new SelectionState({\n          anchorKey: anchorBlock.getKey(),\n          anchorOffset: clearMin,\n          focusKey: anchorBlock.getKey(),\n          focusOffset: clearMax,\n        }),\n        null,\n      );\n\n      // Try to parse the link first\n      try {\n        // If no http:// before the url, add it\n        if (link && !link.match(/:\\/\\//)) {\n          link = 'http://' + link;\n        }\n        plink = new URL(link);\n      } catch {\n        // Something went wrong when parsing the given link\n        if (link) {\n          console.warn(`Invalid url: ${link}`);\n        }\n        validUrl = false;\n      }\n\n      // If this is valid link\n      if (validUrl) {\n        // Get range of new link\n        let left = 10e9;\n        let right = -1;\n        for (let i in rangesOfOverlapLink) {\n          left = Math.min(left, rangesOfOverlapLink[i].start);\n          right = Math.max(right, rangesOfOverlapLink[i].end);\n        }\n        left = Math.min(left, selectionState.getStartOffset());\n        right = Math.max(right, selectionState.getEndOffset());\n\n        // Create entity and apply url\n        newContentState = newContentState.createEntity('LINK', 'MUTABLE', { url: plink.href });\n        const entityKey = newContentState.getLastCreatedEntityKey();\n        newEditorState = EditorState.set(newEditorState, { currentContent: newContentState });\n        newContentState = Modifier.applyEntity(\n          newContentState,\n          new SelectionState({\n            anchorKey: anchorBlock.getKey(),\n            anchorOffset: left,\n            focusKey: anchorBlock.getKey(),\n            focusOffset: right,\n          }),\n          entityKey,\n        );\n      }\n\n      // Push edit record\n      newEditorState = EditorState.push(editorState, newContentState, 'apply-entity');\n      // newEditorState = EditorState.push(newEditorState, newContentState, 'apply-entity'); // Why this?\n\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\n// Create empty inline math\nexport const createEmptyInlineMath = (\n  dispatch,\n  pageUuid,\n  math = null,\n  customSelection = null,\n  getEntityKeyFunc = null,\n) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n\n      let newEditorState = editorState;\n      let newContentState = editorState.getCurrentContent();\n      let selectionState = customSelection ? customSelection : editorState.getSelection();\n\n      // Create entity key\n      newContentState = newContentState.createEntity('MATH', 'IMMUTABLE', { math: math ? math : magicMathStr });\n      const entityKey = newContentState.getLastCreatedEntityKey();\n      newEditorState = EditorState.set(newEditorState, { currentContent: newContentState });\n\n      if (selectionState.isCollapsed()) {\n        // If current selection is collapsed, let's insert an character to represent the inline math\n        newContentState = Modifier.insertText(newContentState, selectionState, magicMathStr, null, entityKey);\n      } else {\n        // If current selection is not collapsed, let's apply the entity to the selected text\n        newContentState = Modifier.applyEntity(newContentState, selectionState, entityKey);\n      }\n\n      // Push undo stack\n      newEditorState = EditorState.push(editorState, newContentState, 'apply-entity');\n\n      // Update reducer\n      page.set('content', newEditorState);\n\n      if (getEntityKeyFunc) getEntityKeyFunc(entityKey);\n\n      return state;\n    },\n  });\n};\n\n// Remove inline math entity\nexport const removeInlineMath = (dispatch, pageUuid, blockKey, entityKey, removeText = false) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let newEditorState = page.get('content');\n      let newContentState = newEditorState.getCurrentContent();\n      const curBlock = newContentState.getBlockForKey(blockKey);\n\n      let anchorOffset = -1;\n      let focusOffset = -1;\n\n      // Find and clear target entity\n      curBlock.findEntityRanges(\n        (value) => {\n          if (value.entity === entityKey) return true;\n        },\n        (start, end) => {\n          anchorOffset = start;\n          focusOffset = end;\n        },\n      );\n\n      // Sanity check whether we find the target entity\n      if (anchorOffset === -1) return state;\n\n      // Check whether the entity string is magicMathStr.\n      // If true, it means that this is a newly created inline math, then we have to remove this string as well.\n      // Else, just remove the entity.\n      let text = curBlock.getText();\n      if (text.slice(anchorOffset, focusOffset) === magicMathStr || removeText) {\n        newContentState = Modifier.removeRange(\n          newContentState,\n          new SelectionState({\n            anchorKey: blockKey,\n            anchorOffset: anchorOffset,\n            focusKey: blockKey,\n            focusOffset: focusOffset,\n          }),\n          'backward',\n        );\n      } else {\n        newContentState = Modifier.applyEntity(\n          newContentState,\n          new SelectionState({\n            anchorKey: blockKey,\n            anchorOffset: anchorOffset,\n            focusKey: blockKey,\n            focusOffset: focusOffset,\n          }),\n          null,\n        );\n      }\n\n      // Push undo stack (this operation should not be record, so we use insert-characters here)\n      newEditorState = EditorState.push(newEditorState, newContentState, 'insert-characters');\n\n      // Update reducer\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const updateInlineMathData = (dispatch, pageUuid, entityKey, math) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      if (!entityKey) return state;\n\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n      let newContentState = editorState.getCurrentContent();\n      newContentState = newContentState.replaceEntityData(entityKey, { math });\n\n      // Update with insert-characters type\n      let newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n\n      // Update reducer\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const removeEntity = (dispatch, pageUuid, selectionState, setSelectionState = false) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let newEditorState = page.get('content');\n      let newContentState = newEditorState.getCurrentContent();\n\n      newContentState = Modifier.applyEntity(newContentState, selectionState, null);\n      newEditorState = EditorState.push(newEditorState, newContentState, 'apply-entity');\n\n      if (setSelectionState) {\n        newEditorState = EditorState.forceSelection(newEditorState, selectionState);\n      }\n\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const setTextColor = (dispatch, pageUuid, color) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n\n      let newContentState = editorState.getCurrentContent();\n      const selectionState = editorState.getSelection();\n\n      // Clear test color\n      for (let i in colorList) {\n        let textColorStyle = `TEXT${colorList[i]}`;\n        newContentState = Modifier.removeInlineStyle(newContentState, selectionState, textColorStyle);\n      }\n\n      // Set text color style\n      const upperColor = color.toUpperCase();\n      if (colorList.indexOf(upperColor) !== -1) {\n        newContentState = Modifier.applyInlineStyle(newContentState, selectionState, `TEXT${upperColor}`);\n      }\n\n      let newEditorState = EditorState.push(editorState, newContentState, 'change-inline-style');\n      newEditorState = EditorState.forceSelection(newEditorState, selectionState);\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\nexport const setBackgroundColor = (dispatch, pageUuid, color) => {\n  dispatch({\n    type,\n    callback: (state) => {\n      let page = state.cachedPages.get(pageUuid);\n      let editorState = page.get('content');\n\n      let newContentState = editorState.getCurrentContent();\n      const selectionState = editorState.getSelection();\n\n      // Clear test color\n      for (let i in colorList) {\n        let textColorStyle = `BG${colorList[i]}`;\n        newContentState = Modifier.removeInlineStyle(newContentState, selectionState, textColorStyle);\n      }\n\n      // Set text color style\n      const upperColor = color.toUpperCase();\n      if (colorList.indexOf(upperColor) !== -1) {\n        newContentState = Modifier.applyInlineStyle(newContentState, selectionState, `BG${upperColor}`);\n      }\n\n      let newEditorState = EditorState.push(editorState, newContentState, 'change-inline-style');\n      newEditorState = EditorState.forceSelection(newEditorState, selectionState);\n      page.set('content', newEditorState);\n\n      return state;\n    },\n  });\n};\n\n/*************************************************\n * REDUCER\n * @brief Use immer to perform deep udpate of state.\n *************************************************/\nexport const editor = (oldState = initState, action) =>\n  action.type === type ? produce(oldState, (state) => (action.callback ? action.callback(state) : state)) : oldState;\n","/**\n * @file NumberListUtils.js\n * @description Utilities for handling keyboard input.\n * Keyword: \"/// Start\"\n */\n\n// TODO: Rename filename & function name\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { blockDataKeys, constBlockType } from '../constant';\nimport { GeekeMap, getFirstBlockKey, updateBlockData } from '../utils/Misc';\n\n/*************************************************\n * CONST\n *************************************************/\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\nexport const findPreviousBlockWithSameDepth = (contentState, blockKey, indentLevel) => {\n  let prevBlock = contentState.getBlockForKey(blockKey);\n  if (!prevBlock) return null;\n  let prevBlockData = null;\n  let prevIndentLevel = 0;\n  while (prevBlock) {\n    prevBlock = contentState.getBlockBefore(prevBlock.getKey());\n    if (!prevBlock) return null;\n    prevBlockData = prevBlock.getData();\n    prevIndentLevel = prevBlockData.has(blockDataKeys.indentLevel) ? prevBlockData.get(blockDataKeys.indentLevel) : 0;\n    if (prevIndentLevel < indentLevel) return null;\n    if (prevIndentLevel === indentLevel) return prevBlock;\n  }\n\n  return null;\n};\n\nexport const findNextBlockWithSameDepth = (contentState, blockKey, indentLevel) => {\n  let nextBlock = contentState.getBlockForKey(blockKey);\n  if (!nextBlock) return null;\n  let nextBlockData = null;\n  let nextIndentLevel = 0;\n  while (nextBlock) {\n    nextBlock = contentState.getBlockAfter(nextBlock.getKey());\n    if (!nextBlock) return null;\n    nextBlockData = nextBlock.getData();\n    nextIndentLevel = nextBlockData.has(blockDataKeys.indentLevel) ? nextBlockData.get(blockDataKeys.indentLevel) : 0;\n    if (nextIndentLevel < indentLevel) return null;\n    if (nextIndentLevel === indentLevel) return nextBlock;\n  }\n\n  return null;\n};\n\nexport const trimNumberListWithSameDepth = (contentState, blockKey, indentLevel, startOrder = 1) => {\n  let newContentState = contentState;\n  let curBlock = newContentState.getBlockForKey(blockKey);\n  let curBlockData = curBlock.getData();\n  let curBlockType = curBlock.getType();\n  let curBlockKey = null;\n  let curIndentLevel = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n\n  // Find first block with the same depth if current block is not valid for trimming\n  if (curBlockType !== constBlockType.numberList || curIndentLevel !== indentLevel) {\n    curBlock = findNextBlockWithSameDepth(contentState, blockKey, indentLevel);\n    if (!curBlock) return contentState;\n  }\n\n  // Set numberListOrder of current block to startOrder\n  curBlockData = curBlock.getData();\n  curBlockKey = curBlock.getKey();\n  let newBlockData = new GeekeMap(curBlockData);\n  newBlockData.set(blockDataKeys.numberListOrder, startOrder);\n  newContentState = updateBlockData(newContentState, curBlockKey, newBlockData);\n\n  // Update curBlock and curBlockData to the latest value\n  curBlock = newContentState.getBlockForKey(curBlockKey);\n  curBlockData = curBlock.getData();\n\n  // Set base block indent level\n  let curNumberListOrder = curBlockData.get(blockDataKeys.numberListOrder) + 1;\n  while (curBlock) {\n    // Check whether next block is valid\n    curBlock = newContentState.getBlockAfter(curBlock.getKey());\n    if (!curBlock) break;\n\n    // Check whether next block should be trimed.\n    curBlockKey = curBlock.getKey();\n    curBlockType = curBlock.getType();\n    curBlockData = curBlock.getData();\n    curIndentLevel = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n    if (curIndentLevel < indentLevel) break;\n    if (curIndentLevel > indentLevel) continue;\n    if (curBlockType !== constBlockType.numberList) break;\n\n    // Trim this block\n    let newBlockData = new GeekeMap(curBlockData);\n    newBlockData.set(blockDataKeys.numberListOrder, curNumberListOrder);\n    curNumberListOrder += 1;\n\n    // Merge new block data into editorState\n    newContentState = updateBlockData(newContentState, curBlockKey, newBlockData);\n  }\n\n  return newContentState;\n};\n\nexport const trimNumberListInWholePage = (contentState) => {\n  let numberListOrderMap = new GeekeMap([[0, 0]]);\n  let parentKeyMap = new GeekeMap([\n    [-1, null],\n    [0, null],\n  ]);\n  let curDepth = 0;\n  let newContentState = contentState;\n  let firstBlockKey = getFirstBlockKey(newContentState);\n  let curBlock = newContentState.getBlockForKey(firstBlockKey);\n\n  while (curBlock) {\n    // Get depth & type\n    let blockData = curBlock.getData();\n    let blockDepth = blockData.has(blockDataKeys.indentLevel) ? blockData.get(blockDataKeys.indentLevel) : 0;\n    let blockType = curBlock.getType();\n    let blockKey = curBlock.getKey();\n    let blockParentKey = blockData.get(blockDataKeys.parentKey);\n\n    // If current depth is change, move depth pointer: curDepth, and modify numberListOrderMap\n    if (blockDepth > curDepth) {\n      let parentKey = parentKeyMap.get(curDepth);\n      while (curDepth < blockDepth) {\n        curDepth += 1;\n        numberListOrderMap.set(curDepth, 0);\n        parentKeyMap.set(curDepth, parentKey);\n      }\n    } else if (curDepth > blockDepth) {\n      curDepth = blockDepth;\n    }\n    parentKeyMap.set(curDepth, blockKey);\n\n    // Check whether to update parent block\n    if (blockParentKey !== parentKeyMap.get(curDepth - 1)) {\n      let newBlockData = new GeekeMap(blockData);\n      newBlockData.set(blockDataKeys.parentKey, parentKeyMap.get(curDepth - 1));\n      newContentState = updateBlockData(newContentState, curBlock.getKey(), newBlockData);\n      blockData = newContentState.getBlockForKey(curBlock.getKey()).getData();\n    }\n\n    // If current block is number list\n    if (blockType === constBlockType.numberList) {\n      // If current list is the first number list, set numberListOrderMap start from 1\n      if (numberListOrderMap.get(curDepth) === 0) {\n        // When numerListOrderMap[curDepth] = 0, there are no list before.\n        numberListOrderMap.set(curDepth, 1);\n      }\n\n      // Get numberListOrder of this block\n      let numberListOrder = blockData.get(blockDataKeys.numberListOrder);\n\n      // Check numberListOrder of this block. If it is not correct,\n      if (numberListOrder !== numberListOrderMap.get(curDepth)) {\n        let newBlockData = new GeekeMap(blockData);\n        newBlockData.set(blockDataKeys.numberListOrder, numberListOrderMap.get(curDepth));\n        newContentState = updateBlockData(newContentState, curBlock.getKey(), newBlockData);\n      }\n\n      // Update numberListOrderMap\n      numberListOrderMap.set(curDepth, numberListOrderMap.get(curDepth) + 1);\n    } else {\n      // If improper number list data exists in a block, remove it!\n      if (blockData.has(blockDataKeys.numberListOrder)) {\n        let newBlockData = new GeekeMap(blockData);\n        newBlockData.delete(blockDataKeys.numberListOrder);\n        newContentState = updateBlockData(newContentState, curBlock.getKey(), newBlockData);\n      }\n\n      numberListOrderMap.set(curDepth, 0);\n    }\n\n    // Go to the next block\n    curBlock = newContentState.getBlockAfter(curBlock.getKey());\n  }\n\n  return newContentState;\n};\n\nexport const isShowBlock = (contentState, key) => {\n  let curBlock = contentState.getBlockForKey(key);\n  let blockData = curBlock.getData();\n  curBlock = contentState.getBlockForKey(blockData.get(blockDataKeys.parentKey));\n\n  while (curBlock) {\n    blockData = curBlock.getData();\n    if (blockData.has(blockDataKeys.toggleListToggle)) {\n      if (!blockData.get(blockDataKeys.toggleListToggle)) {\n        return false;\n      }\n    } else if (curBlock.getType() === constBlockType.toggleList) {\n      return false;\n    }\n    curBlock = contentState.getBlockForKey(blockData.get(blockDataKeys.parentKey));\n  }\n\n  return true;\n};\n","/**\n * @file Dispatcher.js\n * @description Utilities for dispatching redux action which is designed for Geeke.\n *              Note that the type should be exactly the same for each function!\n */\n\nexport default class Dispatcher {\n  constructor(dispatchFunc, isDispatch = false) {\n    if (isDispatch) {\n      this.dispatch = dispatchFunc;\n    } else {\n      this.dispatch = dispatchFunc();\n    }\n\n    this.reset();\n  }\n\n  add(func, ...args) {\n    func((newStore) => {\n      if (!this.type) {\n        this.callbacks.push(newStore.callback);\n        this.type = newStore.type;\n      } else if (this.type === newStore.type) {\n        this.callbacks.push(newStore.callback);\n      } else {\n        console.error(`Type is not the same as the previous function! (${this.type} !== ${newStore.type})`);\n      }\n    }, ...args);\n\n    return this;\n  }\n\n  run(func, ...args) {\n    if (func) this.add(func, ...args);\n\n    if (!this.type) return this.reset();\n\n    this.dispatch({\n      type: this.type,\n      callback: (state) => {\n        for (let i = 0; i < this.callbacks.length; i++) {\n          state = this.callbacks[i](state);\n        }\n        return state;\n      },\n    });\n\n    this.reset();\n  }\n\n  reset() {\n    this.callbacks = [];\n    this.type = null;\n  }\n}\n","/*************************************************\n * @file InlineStyleLink.js\n * @description Inline style for Link.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Grid, Snackbar, Tooltip } from '@material-ui/core';\nimport { SelectionState } from 'draft-js';\nimport { withStyles } from '@material-ui/styles';\nimport { Alert } from '@material-ui/lab';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { pmsc, setPreLinkRange } from '../states/editorMisc';\nimport { removeEntity } from '../states/editor';\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nconst CustomTooltip = withStyles({\n  tooltip: {\n    maxWidth: 'none',\n  },\n})(Tooltip);\nconst CustomButton = withStyles({\n  root: {\n    padding: '0rem 0.125rem',\n    minWidth: '0rem',\n    color: 'inherit',\n  },\n})(Button);\nconst CustomCopyIcon = withStyles({\n  root: {\n    fontSize: '1rem',\n  },\n})(FileCopyIcon);\nconst CustomEditIcon = withStyles({\n  root: {\n    fontSize: '1rem',\n  },\n})(EditIcon);\n\n/*************************************************\n * Main components\n *************************************************/\nconst InlineStyleLink = (props) => {\n  // Props\n  const { url } = props.contentState.getEntity(props.entityKey).getData();\n\n  // States\n  const dispatch = useDispatch();\n  const pageUuid = useSelector((state) => state.editorMisc.focusEditor);\n  const triggerEsc = useSelector((state) => state.editorMisc.pages?.get(pageUuid)?.get(pmsc.triggerEsc));\n  const [open, setOpen] = useState(false);\n  const [keepClose, setKeepClose] = useState(false);\n  const [showCopyMessage, setShowCopyMessage] = useState(false);\n\n  // Parse url\n  const purl = new URL(url);\n\n  // Hide tooltip when esc is pressed\n  useEffect(() => {\n    setOpen(false);\n  }, [triggerEsc]);\n\n  // Handle copy link\n  const handleCopyLink = (e) => {\n    setShowCopyMessage(true);\n  };\n  const handleCloseCopyMessage = (e) => setShowCopyMessage(false);\n\n  // Handle remove link\n  const handleRemoveLink = (e) => {\n    removeEntity(\n      dispatch,\n      pageUuid,\n      new SelectionState({\n        focusKey: props.blockKey,\n        focusOffset: props.end,\n        anchorKey: props.blockKey,\n        anchorOffset: props.start,\n      }),\n      true,\n    );\n  };\n\n  // Handle edit link\n  const handleEditLink = (e) => {\n    setOpen(false);\n    setKeepClose(true);\n    setPreLinkRange(\n      dispatch,\n      pageUuid,\n      new SelectionState({\n        focusKey: props.blockKey,\n        focusOffset: props.end,\n        anchorKey: props.blockKey,\n        anchorOffset: props.start,\n      }),\n    );\n    setTimeout(() => setKeepClose(false), 300);\n  };\n\n  // Handle click link\n  const handleClickLink = (e) => {\n    if (e.altKey) {\n      window.open(purl.href);\n    }\n  };\n\n  // Title\n  // Reference: https://www.freecodecamp.org/news/how-to-use-html-to-open-link-in-new-tab/\n  // Use noopener & noreferrer to enhance security\n  const title = (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n      <Tooltip title=\"Copy Link\" placement=\"top\">\n        <CopyToClipboard text={purl.href}>\n          <CustomButton onClick={handleCopyLink}>\n            <CustomCopyIcon />\n          </CustomButton>\n        </CopyToClipboard>\n      </Tooltip>\n      <Tooltip title=\"Edit Link\" placement=\"top\">\n        <CustomButton onClick={handleEditLink}>\n          <CustomEditIcon />\n        </CustomButton>\n      </Tooltip>\n      <Tooltip title=\"Remove Link\" placement=\"top\">\n        <CustomButton onClick={handleRemoveLink}>\n          <LinkOffIcon fontSize=\"small\" />\n        </CustomButton>\n      </Tooltip>\n      <div className=\"geeke-outlink-seperator\"></div>\n      <a className=\"geeke-outlink-nostyle\" target=\"_blank\" rel=\"noopener noreferrer\" href={purl.href}>\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <LinkIcon fontSize=\"small\" />\n          <span className=\"geeke-outlink-text\">{purl.href}</span>\n        </Grid>\n      </a>\n    </Grid>\n  );\n\n  return (\n    <>\n      <CustomTooltip\n        interactive\n        arrow\n        title={title}\n        open={open && !keepClose}\n        onOpen={() => (keepClose ? null : setOpen(true))}\n        onClose={() => setOpen(false)}\n        enterDelay={500}\n      >\n        <a className=\"geeke-outlink\" href={purl.href} onClick={handleClickLink}>\n          {props.children}\n        </a>\n      </CustomTooltip>\n\n      {/* Copy Message */}\n      <Snackbar\n        open={showCopyMessage}\n        autoHideDuration={5000}\n        onClose={handleCloseCopyMessage}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseCopyMessage} severity=\"success\">\n          Copied!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default InlineStyleLink;\n","/*************************************************\n * @file InlineStyleMath.js\n * @description Inline style for Math.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectionState } from 'draft-js';\nimport katex from 'katex';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { pmsc, setMathRange } from '../states/editorMisc';\nimport { checkOverlap } from '../utils/Misc';\nimport { showEditorSelection } from '../states/editor';\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { magicMathStr } from '../constant';\nimport { Tooltip } from '@material-ui/core';\n\n/*************************************************\n * Main components\n *************************************************/\nconst InlineStyleMath = (props) => {\n  // Props\n  const { math } = props.contentState.getEntity(props.entityKey).getData();\n  const blockKey = props.blockKey;\n  const startOffset = props.start;\n  const endOffset = props.end;\n\n  // State & Reducer\n  const dispatch = useDispatch();\n  const pageUuid = useSelector((state) => state.editorMisc.focusEditor);\n  const mathRange = useSelector((state) => state.editorMisc.pages.get(pageUuid)?.get(pmsc.mathRange));\n\n  // TODO: improve performance when there are lots of math equations...\n  const selectionState = useSelector((state) => state.editorMisc.selectionState);\n\n  // Constants\n  // TODO: this condition has cross-block bug...\n  const editingMath =\n    (mathRange &&\n      mathRange.getStartKey() === blockKey &&\n      mathRange.getEndKey() === blockKey &&\n      checkOverlap(startOffset, endOffset, mathRange.getStartOffset(), mathRange.getEndOffset())) ||\n    (selectionState &&\n      !selectionState.isCollapsed() &&\n      (selectionState.getAnchorKey() === blockKey || selectionState.getFocusKey() === blockKey) &&\n      selectionState.getStartOffset() <= startOffset &&\n      selectionState.getEndOffset() >= endOffset);\n  const styleClass = editingMath ? 'geeke-inlineStyleMath-editingStyle' : 'geeke-inlineStyleMath-defaultStyle';\n  const katexId = `geeke-inlineStyleMath-katex-${props.offsetKey}`;\n\n  // Functions\n  const handleClick = (e) => {\n    let selectionState = new SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: startOffset,\n      focusKey: blockKey,\n      focusOffset: endOffset,\n    });\n    showEditorSelection(dispatch, pageUuid, selectionState);\n    setMathRange(dispatch, pageUuid, selectionState);\n  };\n\n  // Calcualte caret position\n  let caretPos = null;\n  if (\n    selectionState &&\n    selectionState.getFocusKey() === blockKey &&\n    selectionState.isCollapsed() &&\n    checkOverlap(startOffset, endOffset, selectionState.getFocusOffset(), selectionState.getAnchorOffset(), true)\n  ) {\n    let middle = (endOffset + startOffset) / 2;\n    if (selectionState.getStartOffset() >= middle) {\n      caretPos = 'right';\n    } else if (selectionState.getStartOffset() < middle) {\n      caretPos = 'left';\n    }\n  }\n\n  // Generate blink caret\n  let leftCaret = null;\n  let rightCaret = null;\n  let caret = caretPos ? <span className=\"geeke-inlineStyleMath-caret\"></span> : null;\n  if (caretPos === 'left') {\n    leftCaret = caret;\n  } else if (caretPos === 'right') {\n    rightCaret = caret;\n  }\n\n  // TODO: prevent additional MATH equation re-rendering\n  // Render math DOM\n  let mathDom = null;\n  if (math === magicMathStr) {\n    // Render default math\n    let html = katex.renderToString('\\\\sqrt{x}', {\n      throwOnError: false,\n    });\n    mathDom = (\n      <Tooltip title={'(none)'} enterDelay={500}>\n        <span id={katexId} className={styleClass} style={{ color: 'gray' }}>\n          <span dangerouslySetInnerHTML={{ __html: html }}></span>\n          <span className=\"geeke-inlineStyleMath-newEq\">New Equation</span>\n        </span>\n      </Tooltip>\n    );\n  } else {\n    // Render math to Tex\n    let html = katex.renderToString(math, {\n      throwOnError: false,\n    });\n\n    mathDom = (\n      <Tooltip title={math} enterDelay={500}>\n        <span id={katexId} className={styleClass} dangerouslySetInnerHTML={{ __html: html }}></span>\n      </Tooltip>\n    );\n  }\n\n  // Render the result\n  return (\n    <span>\n      <span className=\"geeke-inlineStyleMath-editingWrapper\" contentEditable={false} onClick={handleClick}>\n        {leftCaret}\n        {mathDom}\n        {rightCaret}\n      </span>\n      <span className=\"geeke-inlineStyleMath-transparent\">{props.children}</span>\n    </span>\n  );\n};\n\nexport default InlineStyleMath;\n","/*************************************************\n * @file Decorator.js\n * @description Decorator for Geeke.\n *************************************************/\n\n/*************************************************\n * IMPORT LIBRARIES\n *************************************************/\nimport { CompositeDecorator } from 'draft-js';\nimport InlineStyleLink from '../components/InlineStyleLink';\nimport InlineStyleMath from '../components/InlineStyleMath';\n\n/*************************************************\n * CONSTANTS\n *************************************************/\n\n/*************************************************\n * STRATEGIES\n *************************************************/\nconst inlineLinkStretagy = (contentBlock, callback, contentState) =>\n  inlineEntityStretagy(contentBlock, callback, contentState, 'LINK');\n\nconst inlineMathStretagy = (contentBlock, callback, contentState) =>\n  inlineEntityStretagy(contentBlock, callback, contentState, 'MATH');\n\nconst inlineEntityStretagy = (contentBlock, callback, contentState, inlineStyle) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return entityKey !== null && contentState.getEntity(entityKey).getType() === inlineStyle;\n  }, callback);\n};\n\n/*************************************************\n * DECORATOR\n *************************************************/\nexport const decorator = new CompositeDecorator([\n  {\n    strategy: inlineLinkStretagy,\n    component: InlineStyleLink,\n  },\n  {\n    strategy: inlineMathStretagy,\n    component: InlineStyleMath,\n  },\n]);\n","/**\n * @file BlockKeyboardUtils.js\n * @description Utilities for handling keyboard input.\n * Keyword: \"/// Start\"\n */\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { EditorState, getDefaultKeyBinding, KeyBindingUtil, Modifier, RichUtils, SelectionState } from 'draft-js';\n\nimport { setMouseOverBlockKey } from '../states/editorMisc';\nimport {\n  trimNumberListInWholePage,\n  trimNumberListWithSameDepth,\n  findPreviousBlockWithSameDepth,\n} from './NumberListUtils';\nimport { GeekeMap, updateBlockData } from './Misc';\n\n/*************************************************\n * CONST\n *************************************************/\nimport {\n  blockDataKeys,\n  constAceEditorAction,\n  constBlockType,\n  constMoveDirection,\n  headingType,\n  isOSX,\n} from '../constant';\n\nexport const defaultKeyboardHandlingConfig = {\n  indentBlock: true,\n  convertBlockTypeInline: true,\n  numberList: true,\n  bulletList: true,\n};\n\nconst keyCommandConst = {\n  doNothing: 0,\n  moreIndent: 1,\n  lessIndent: 2,\n  checkBlockTypeConversion: 3,\n  handleBackspace: 4,\n  handleDelete: 5,\n  multiCommands: 6,\n  deleteMultipleBlocks: 7,\n  moveDownToCodeBlock: 8,\n  moveUpToCodeBlock: 9,\n  moveToPreviousBlock: 10,\n  moveToNextBlock: 11,\n  selectPreviousSpecialBlock: 12,\n  selectNextSpecialBlock: 13,\n  toggleInlineStrikeThrough: 14,\n  toggleInlineCode: 15,\n  triggerEditorEsc: 16,\n  toggleInlineLink: 17,\n  toggleInlineMath: 18,\n  toggleInlineMathLeft: 19,\n  toggleInlineMathRight: 20,\n  toggleSlashMenu: 21,\n};\n\n/**\n * key             : value\n * dispatcher name : error message\n */\nconst dispatcherNotFoundConst = {\n  setEditorState: 'setEditorState is not configured!',\n  setFocusBlockKey: 'setFocusBlockKey is not configured!',\n  moveCursor: 'moveCursor is not configured!',\n  handleFocusEditor: 'handleFocusEditor is not configured!',\n  setMoveDirection: 'setMoveDirection is not configured!',\n};\n\n/**\n * key        : value\n * block type : unique number\n */\nconst blockDataPreserveConstant = {\n  none: 0,\n  all: 1,\n};\n\n/**\n * key                : value\n * name of block data : block type\n */\nconst blockDataPreserveConfig = {\n  [blockDataKeys.indentLevel]: [blockDataPreserveConstant.all],\n  [blockDataKeys.numberListOrder]: [constBlockType.numberList],\n  [blockDataKeys.checkListCheck]: [blockDataPreserveConstant.none],\n  [blockDataKeys.parentKey]: [blockDataPreserveConstant.all],\n  [blockDataKeys.toggleListToggle]: [blockDataPreserveConstant.none],\n  [blockDataKeys.headingType]: [blockDataPreserveConstant.none],\n};\n\nconst specialBlockSet = new Set([constBlockType.code]);\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\n/// Start mapKeyToEditorCommand\nconst mapKeyToEditorCommand_tab = (e, config) => {\n  e.preventDefault();\n  if (!config.indentBlock) return getDefaultKeyBinding(e);\n\n  if (e.shiftKey) return keyCommandConst.lessIndent;\n  else return keyCommandConst.moreIndent;\n};\n\nconst mapKeyToEditorCommand_space = (e, config) => {\n  if (!config.convertBlockTypeInline) return getDefaultKeyBinding(e);\n  return keyCommandConst.checkBlockTypeConversion;\n};\n\nconst mapKeyToEditorCommand_backspace = (e, config, editorState) => {\n  // Default backspace function\n  const defaultBackspaceFunciton = () => {\n    if (KeyBindingUtil.isOptionKeyCommand(e) || (!isOSX && KeyBindingUtil.isCtrlKeyCommand(e))) {\n      return 'backspace-word';\n    } else if (KeyBindingUtil.hasCommandModifier(e)) {\n      return 'backspace-to-start-of-line';\n    } else {\n      return 'backspace';\n    }\n  };\n\n  // If number list is not enabled, just run the default backspace function\n  if (!config.numberList) return defaultBackspaceFunciton();\n\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n  const endKey = selectionState.getEndKey();\n\n  // If selectionState is not collapsed, then perform delete action\n  if (!selectionState.isCollapsed()) {\n    if (selectionState.getFocusKey() === selectionState.getAnchorKey()) {\n      return defaultBackspaceFunciton();\n    } else {\n      return keyCommandConst.deleteMultipleBlocks;\n    }\n  }\n\n  // Check whether current caret position is at the start of the block. If not, this backspace will not remove a block, and no need to trim the numberListOrder\n  if (selectionState.getFocusOffset() !== 0) {\n    return defaultBackspaceFunciton();\n  }\n\n  // Get first previous block with the same indent level\n  const curBlock = contentState.getBlockForKey(endKey);\n  const curBlockData = curBlock.getData();\n  const baseIndentLevel = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n  let prevBlock = findPreviousBlockWithSameDepth(contentState, endKey, baseIndentLevel);\n\n  // Check whether this block and the previous block are not number list blocks\n  let needTrimNumberList = !(\n    prevBlock &&\n    curBlock.getType() !== constBlockType.numberList &&\n    prevBlock.getType() !== constBlockType.numberList\n  );\n\n  // Make sure that prevBlock is a numberListBlock\n  if (prevBlock && prevBlock.getType() !== constBlockType.numberList) prevBlock = null;\n\n  return [\n    keyCommandConst.multiCommands,\n    keyCommandConst.handleBackspace,\n    prevBlock ? prevBlock.getKey() : null,\n    needTrimNumberList,\n  ];\n};\n\nconst mapKeyToEditorCommand_delete = (e, config, editorState) => {\n  // Default delete function\n  const defaultDeleteFunciton = () => {\n    if (KeyBindingUtil.isOptionKeyCommand(e) || (!isOSX && KeyBindingUtil.isCtrlKeyCommand(e))) {\n      return 'delete-word';\n    } else if (KeyBindingUtil.hasCommandModifier(e)) {\n      return 'delete-to-end-of-block';\n    } else {\n      return 'delete';\n    }\n  };\n\n  // if number list is not enabled, just run the default delete function\n  if (!config.numberList) return defaultDeleteFunciton();\n\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n  const endKey = selectionState.getEndKey();\n  const curBlock = contentState.getBlockForKey(endKey);\n  const nextBlock = contentState.getBlockAfter(endKey);\n\n  // If selectionState is not collapsed, then perform delete action\n  if (!selectionState.isCollapsed()) {\n    if (selectionState.getFocusKey() === selectionState.getAnchorKey()) {\n      return defaultDeleteFunciton();\n    } else {\n      return keyCommandConst.deleteMultipleBlocks;\n    }\n  }\n\n  // Check whether current caret position is at the end of the block. If not, this delete will not remove a block, and no need to trim the numberListOrder\n  if (selectionState.getFocusOffset() !== contentState.getBlockForKey(endKey).getLength()) {\n    return defaultDeleteFunciton();\n  }\n\n  // If next block does not exists, then just use the default delete function\n  if (!nextBlock) {\n    return defaultDeleteFunciton();\n  }\n\n  // If this block and the next block are not number lists, then no need to trim the block as well\n  let needTrimNumberList =\n    curBlock.getType() === constBlockType.numberList || nextBlock.getType() === constBlockType.numberList;\n\n  return [keyCommandConst.multiCommands, keyCommandConst.handleDelete, endKey, needTrimNumberList];\n};\n\nconst mapKeyToEditorCommand_arrowKey = (e, editorState) => {\n  const defaultArrowKeyFunction = () => null;\n\n  const selectionState = editorState.getSelection();\n\n  // No need to handle the event that selection is not collapsed because in this condition, arrow key will not move the caret to next/previous block.\n  if (!selectionState.isCollapsed()) return defaultArrowKeyFunction();\n\n  // Functions to check whether to move to code block\n  const contentState = editorState.getCurrentContent();\n  const focusBlockKey = selectionState.getFocusKey();\n  const focusBlock = contentState.getBlockForKey(focusBlockKey);\n  const focusOffset = selectionState.getFocusOffset();\n  const hasShift = e.shiftKey;\n\n  // console.log(focusOffset);\n  // console.log(focusBlock.getText());\n\n  const checkMoveUp = (leftKey = false) => {\n    // If there are any modifier, use the default action\n    if (\n      hasShift ||\n      KeyBindingUtil.isCtrlKeyCommand(e) ||\n      KeyBindingUtil.isOptionKeyCommand(e) ||\n      KeyBindingUtil.hasCommandModifier(e)\n    ) {\n      return defaultArrowKeyFunction();\n    }\n\n    // Check whether current position is at first\n    if (leftKey && focusOffset > 0) {\n      // Check whether the left entity is inlineMath\n      let entityKey = focusBlock.getEntityAt(focusOffset - 1);\n      if (entityKey) {\n        let entity = contentState.getEntity(entityKey);\n        if (entity.type === 'MATH') {\n          return keyCommandConst.toggleInlineMathLeft;\n        }\n      }\n\n      return defaultArrowKeyFunction();\n    }\n\n    // If this is the first block\n    const previousBlock = contentState.getBlockBefore(focusBlockKey);\n    if (!previousBlock) return defaultArrowKeyFunction();\n\n    // Check whether the previous block is a code block\n    if (previousBlock.getType() === constBlockType.code && !hasShift) {\n      // This is exactly the block that you can move up!\n      return keyCommandConst.moveUpToCodeBlock;\n    }\n\n    return defaultArrowKeyFunction();\n  };\n\n  const checkMoveDown = (rightKey = false) => {\n    // If there are any modifier, use the default action\n    if (\n      hasShift ||\n      KeyBindingUtil.isCtrlKeyCommand(e) ||\n      KeyBindingUtil.isOptionKeyCommand(e) ||\n      KeyBindingUtil.hasCommandModifier(e)\n    ) {\n      return defaultArrowKeyFunction();\n    }\n\n    // Check whether current position is at the end of the block\n    if (rightKey && focusOffset < focusBlock.getLength()) {\n      // Check whether the left entity is inlineMath\n      let entityKey = focusBlock.getEntityAt(focusOffset);\n      if (entityKey) {\n        let entity = contentState.getEntity(entityKey);\n        if (entity.type === 'MATH') {\n          return keyCommandConst.toggleInlineMathRight;\n        }\n      }\n\n      return defaultArrowKeyFunction();\n    }\n\n    // If this is the last block\n    const nextBlock = contentState.getBlockAfter(focusBlockKey);\n    if (!nextBlock) return defaultArrowKeyFunction();\n\n    // Check whether the next block is a code block\n    if (nextBlock.getType() === constBlockType.code && !hasShift) {\n      return keyCommandConst.moveDownToCodeBlock;\n    }\n\n    return defaultArrowKeyFunction();\n  };\n\n  switch (e.keyCode) {\n    case 37: // Left\n      return checkMoveUp(true);\n\n    case 38: // Up\n      return checkMoveUp(false);\n\n    case 39: // Right\n      return checkMoveDown(true);\n\n    case 40: // Down\n      return checkMoveDown(false);\n\n    default:\n      console.error(`Unknown keycode ${e.keyCode}. Use default action`);\n      return defaultArrowKeyFunction();\n  }\n};\n\nconst mapKeyToEditorCommand_s = (e, config) => {\n  // If (command(on mac) or ctrl(on win)) and shift are pressed\n  if (((!isOSX && KeyBindingUtil.isCtrlKeyCommand(e)) || KeyBindingUtil.hasCommandModifier(e)) && e.shiftKey) {\n    return keyCommandConst.toggleInlineStrikeThrough;\n  }\n\n  return null;\n};\n\nconst mapKeyToEditorCommand_e = (e, config) => {\n  // If command(on mac) or ctrl(on win) is pressed\n  if ((!isOSX && KeyBindingUtil.isCtrlKeyCommand(e)) || KeyBindingUtil.hasCommandModifier(e)) {\n    if (e.shiftKey) {\n      return keyCommandConst.toggleInlineMath;\n    } else {\n      return keyCommandConst.toggleInlineCode;\n    }\n  }\n\n  return null;\n};\n\nconst mapKeyToEditorCommand_esc = (e, config) => {\n  return keyCommandConst.triggerEditorEsc;\n};\n\nconst mapKeyToEditorCommand_k = (e, config) => {\n  // If command(on mac) or ctrl(on win) is pressed\n  if ((!isOSX && KeyBindingUtil.isCtrlKeyCommand(e)) || KeyBindingUtil.hasCommandModifier(e)) {\n    return keyCommandConst.toggleInlineLink;\n  }\n};\n\nconst mapKeyToEditorCommand_slash = (e, config) => {\n  // If there are any modifier key, just return\n  if (\n    e.shiftKey ||\n    KeyBindingUtil.isCtrlKeyCommand(e) ||\n    KeyBindingUtil.isOptionKeyCommand(e) ||\n    KeyBindingUtil.hasCommandModifier(e)\n  ) {\n    return null;\n  }\n\n  return keyCommandConst.toggleSlashMenu;\n};\n\nexport const mapKeyToEditorCommand = (e, config, dispatch, editorState, pageUuid) => {\n  setMouseOverBlockKey(dispatch, pageUuid, null);\n\n  switch (e.keyCode) {\n    case 9: // Tab\n      return mapKeyToEditorCommand_tab(e, config);\n\n    case 32: // Space\n      return mapKeyToEditorCommand_space(e, config);\n\n    case 8: // Backspace\n      return mapKeyToEditorCommand_backspace(e, config, editorState);\n\n    case 46: // Delete\n      return mapKeyToEditorCommand_delete(e, config, editorState);\n\n    case 37: // Left\n    case 38: // Up\n    case 39: // Right\n    case 40: // Down\n      return mapKeyToEditorCommand_arrowKey(e, editorState);\n\n    case 83: // S\n      return mapKeyToEditorCommand_s(e, config);\n\n    case 69: // E\n      return mapKeyToEditorCommand_e(e, config);\n\n    case 27: // Esc\n      return mapKeyToEditorCommand_esc(e, config);\n\n    case 75: // K\n      return mapKeyToEditorCommand_k(e, config);\n\n    case 191: // Slash\n      return mapKeyToEditorCommand_slash(e, config);\n\n    default:\n      return getDefaultKeyBinding(e);\n  }\n};\n/// End mapKeyToEditorCommand\n\n/// Start handleKeyCommand\nconst handleKeyCommand_moreIndent = (editorState, dispatcher) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  // Constants\n  const curContent = editorState.getCurrentContent();\n  const curSelection = editorState.getSelection();\n  const startBlockKey = curSelection.getStartKey();\n  const endBlockKey = curSelection.getEndKey();\n  const focusBlockKey = curSelection.getFocusKey();\n  const focusOffset = curSelection.getFocusOffset();\n  const focusBlock = curContent.getBlockForKey(focusBlockKey);\n  const focusBlockLength = focusBlock.getLength();\n  const blockMap = curContent.getBlockMap();\n  const keyArray = Array.from(blockMap.keys());\n  const startIndex = keyArray.indexOf(startBlockKey);\n  const endIndex = keyArray.indexOf(endBlockKey);\n  const startBlock = blockMap.get(keyArray[startIndex]);\n\n  // Set prevIndentLevel\n  let prevIndentLevel = -1;\n  if (startIndex > 0) {\n    let blockData = blockMap.get(keyArray[startIndex - 1]).getData();\n    if (blockData.has(blockDataKeys.indentLevel)) {\n      prevIndentLevel = blockData.get(blockDataKeys.indentLevel);\n    } else {\n      prevIndentLevel = 0;\n    }\n  }\n\n  // Initialize new content\n  let newBlockData = new GeekeMap(curContent.getBlockForKey(keyArray[startIndex]).getData());\n  newBlockData.set(\n    blockDataKeys.indentLevel,\n    startBlock.getData().has(blockDataKeys.indentLevel) ? startBlock.getData().get(blockDataKeys.indentLevel) : 0,\n  );\n  let newContentState = updateBlockData(curContent, keyArray[startIndex], newBlockData);\n\n  // Update indent level for each block\n  let minIndentLevel = 9999999;\n  for (let i = startIndex; i <= endIndex; i++) {\n    let block = blockMap.get(keyArray[i]);\n    let blockData = block.getData();\n    let newBlockData = new GeekeMap(blockData);\n    let curIndentLevel = 0;\n    if (blockData.has(blockDataKeys.indentLevel)) {\n      curIndentLevel = blockData.get(blockDataKeys.indentLevel);\n    }\n\n    minIndentLevel = Math.min(minIndentLevel, curIndentLevel);\n\n    // Check whether the first selected block can be indented\n    if (i === startIndex && curIndentLevel === prevIndentLevel + 1) {\n      return;\n    }\n\n    if (curIndentLevel <= prevIndentLevel) curIndentLevel += 1;\n    prevIndentLevel = curIndentLevel;\n    newBlockData.set(blockDataKeys.indentLevel, curIndentLevel);\n\n    newContentState = updateBlockData(newContentState, keyArray[i], newBlockData);\n  }\n\n  // Check whether the indent of all the children blocks are changed.\n  let nextBlock = newContentState.getBlockAfter(endBlockKey);\n  let changeMoreIndent = false;\n  if (nextBlock) {\n    let nextBlockData = nextBlock.getData();\n    if (nextBlockData.has(blockDataKeys.indentLevel) && nextBlockData.get(blockDataKeys.indentLevel) > minIndentLevel) {\n      changeMoreIndent = true;\n    }\n  }\n\n  // If not all the children blocks are chagned, update them\n  while (changeMoreIndent) {\n    if (!nextBlock) break;\n    let nextBlockData = nextBlock.getData();\n    let nextBlockDepth = nextBlockData.has(blockDataKeys.indentLevel)\n      ? nextBlockData.get(blockDataKeys.indentLevel)\n      : 0;\n    if (nextBlockDepth <= minIndentLevel) break;\n\n    let newNextBlockData = new GeekeMap(nextBlockData);\n    newNextBlockData.set(blockDataKeys.indentLevel, nextBlockDepth + 1);\n    newContentState = updateBlockData(newContentState, nextBlock.getKey(), newNextBlockData);\n    nextBlock = newContentState.getBlockAfter(nextBlock.getKey());\n  }\n\n  // Push state\n  newContentState = trimNumberListInWholePage(newContentState);\n  let newEditorState = EditorState.push(editorState, newContentState, 'more-indent');\n  if (curSelection.isCollapsed()) {\n    newEditorState = EditorState.forceSelection(\n      newEditorState,\n      new SelectionState({\n        focusKey: focusBlockKey,\n        focusOffset: focusBlockLength === 0 ? 1 : focusOffset,\n        anchorKey: focusBlockKey,\n        anchorOffset: focusBlockLength === 0 ? 1 : focusOffset,\n      }),\n    );\n  }\n\n  // Update editorState\n  dispatcher.setEditorState(newEditorState);\n};\n\nconst handleKeyCommand_lessIndent = (editorState, dispatcher, returnResult = false) => {\n  if (!returnResult && !dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return;\n  }\n\n  // Constants\n  const curContent = editorState.getCurrentContent();\n  const curSelection = editorState.getSelection();\n  const startBlockKey = curSelection.getStartKey();\n  const endBlockKey = curSelection.getEndKey();\n  const focusBlockKey = curSelection.getFocusKey();\n  const focusOffset = curSelection.getFocusOffset();\n  const focusBlock = curContent.getBlockForKey(focusBlockKey);\n  const focusBlockLength = focusBlock.getLength();\n  const blockMap = curContent.getBlockMap();\n  const keyArray = Array.from(blockMap.keys());\n  const startIndex = keyArray.indexOf(startBlockKey);\n  const endIndex = keyArray.indexOf(endBlockKey);\n  const startBlock = blockMap.get(keyArray[startIndex]);\n\n  // Initialize new content\n  let newBlockData = new GeekeMap(curContent.getBlockForKey(keyArray[startIndex]).getData());\n  newBlockData.set(\n    blockDataKeys.indentLevel,\n    startBlock.getData().has(blockDataKeys.indentLevel) ? startBlock.getData().get(blockDataKeys.indentLevel) : 0,\n  );\n  let newContentState = updateBlockData(curContent, keyArray[startIndex], newBlockData);\n\n  // Update indent level for each block\n  let minIndentLevel = 9999999;\n  let updated = 0;\n  for (let i = startIndex; i <= endIndex; i++) {\n    let block = blockMap.get(keyArray[i]);\n    let blockData = block.getData();\n    let newBlockData = new GeekeMap(blockData);\n    let curIndentLevel = 0;\n    if (blockData.has(blockDataKeys.indentLevel)) {\n      curIndentLevel = blockData.get(blockDataKeys.indentLevel);\n    }\n\n    minIndentLevel = Math.min(curIndentLevel, minIndentLevel);\n\n    if (curIndentLevel > 0) {\n      newBlockData.set(blockDataKeys.indentLevel, curIndentLevel - 1);\n      updated += 1;\n    } else {\n      continue;\n    }\n\n    newContentState = updateBlockData(newContentState, keyArray[i], newBlockData);\n  }\n\n  // Check whether the indent of all the children blocks are changed.\n  let nextBlock = newContentState.getBlockAfter(endBlockKey);\n  let changeMoreIndent = false;\n  if (nextBlock) {\n    let nextBlockData = nextBlock.getData();\n    if (nextBlockData.has(blockDataKeys.indentLevel) && nextBlockData.get(blockDataKeys.indentLevel) > minIndentLevel) {\n      changeMoreIndent = true;\n    }\n  }\n\n  // If not all the children blocks are chagned, update them\n  while (changeMoreIndent) {\n    if (!nextBlock) break;\n    let nextBlockData = nextBlock.getData();\n    let nextBlockDepth = nextBlockData.has(blockDataKeys.indentLevel)\n      ? nextBlockData.get(blockDataKeys.indentLevel)\n      : 0;\n    if (nextBlockDepth <= minIndentLevel) break;\n\n    let newNextBlockData = new GeekeMap(nextBlockData);\n    newNextBlockData.set(blockDataKeys.indentLevel, nextBlockDepth - 1);\n    newContentState = updateBlockData(newContentState, nextBlock.getKey(), newNextBlockData);\n    nextBlock = newContentState.getBlockAfter(nextBlock.getKey());\n    updated += 1;\n  }\n\n  // Check whether the editor is updated by reducing the indent level of some blocks\n  if (updated === 0) return;\n\n  // Push state\n  newContentState = trimNumberListInWholePage(newContentState);\n  if (returnResult) return newContentState;\n  let newEditorState = EditorState.push(editorState, newContentState, 'less-indent');\n  if (curSelection.isCollapsed()) {\n    newEditorState = EditorState.forceSelection(\n      newEditorState,\n      new SelectionState({\n        focusKey: focusBlockKey,\n        focusOffset: focusBlockLength === 0 ? 1 : focusOffset,\n        anchorKey: focusBlockKey,\n        anchorOffset: focusBlockLength === 0 ? 1 : focusOffset,\n      }),\n    );\n  }\n\n  // Update editorState\n  dispatcher.setEditorState(newEditorState);\n  return 'handled';\n};\n\nconst handleKeyCommand_default = (editorState, command, dispatcher) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  const newEditorState = RichUtils.handleKeyCommand(editorState, command);\n  if (!newEditorState) return 'not-handled';\n\n  dispatcher.setEditorState(newEditorState);\n  return 'handled';\n};\n\n// TODO: this implementation may have performance issue if user enter space continuously...\nconst handleKeyCommand_checkBlockTypeConversion = (editorState, command, dispatcher) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  // Get current caret position. Absolutely, if selectionState is not collapse, this feature must not work.\n  const selectionState = editorState.getSelection();\n  const caretPosition = selectionState.getFocusOffset();\n  if (!selectionState.isCollapsed()) return handleKeyCommand_default(editorState, command, dispatcher);\n\n  // Get current block content and find the position of the first space\n  const contentState = editorState.getCurrentContent();\n  const focusKey = selectionState.getFocusKey();\n  const focusBlock = contentState.getBlockForKey(focusKey);\n  const focusBlockType = focusBlock.getType();\n  const blockText = focusBlock.getText();\n  const __firstSpaceIndex = blockText.indexOf(' ');\n  const firstSpaceIndex = __firstSpaceIndex > -1 ? __firstSpaceIndex : focusBlock.getLength();\n\n  // handleConvertToNumberList\n  const handleConvertToNumberList = () => {\n    // Before conver the block into another type, insert a space first for a better undo\n    let newContentState = contentState;\n    let newEditorState = editorState;\n\n    // Get entity by key and offset\n    let focusInlineStyle = focusBlock.getInlineStyleAt(caretPosition - 1);\n    let focusEntity = focusBlock.getEntityAt(caretPosition - 1);\n\n    // Insert space with style\n    newContentState = Modifier.insertText(contentState, selectionState, ' ', focusInlineStyle, focusEntity);\n    newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n\n    // Convert the type of the block\n    newContentState = Modifier.setBlockType(newContentState, selectionState, constBlockType.numberList);\n    newContentState = Modifier.removeRange(newContentState, rangeToRemove, 'forward');\n\n    // Find previous block with the same depth\n    const focusBlockData = focusBlock.getData();\n    const curIndentLevel = focusBlockData.has(blockDataKeys.indentLevel)\n      ? focusBlockData.get(blockDataKeys.indentLevel)\n      : 0;\n    const prevBlock = findPreviousBlockWithSameDepth(newContentState, focusKey, curIndentLevel);\n    if (prevBlock && prevBlock.getType() === constBlockType.numberList) {\n      const prevBlockData = prevBlock.getData();\n      const prevBlockNumberListOrder = prevBlockData.has(blockDataKeys.numberListOrder)\n        ? prevBlockData.get(blockDataKeys.numberListOrder)\n        : 1;\n      newContentState = trimNumberListWithSameDepth(\n        newContentState,\n        prevBlock.getKey(),\n        curIndentLevel,\n        prevBlockNumberListOrder,\n      );\n    } else {\n      newContentState = trimNumberListWithSameDepth(newContentState, focusKey, curIndentLevel);\n    }\n\n    // Update change via dispatcher\n    newEditorState = EditorState.push(newEditorState, newContentState, 'change-block-type');\n    newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n    dispatcher.setEditorState(newEditorState);\n  };\n\n  // Check whether current caret position is before the first space. If not, this is not the type conversion case, and insert a space back\n  const insertSpaceToCurrentSelection = () => {\n    // Get entity by key and offset\n    let focusInlineStyle = focusBlock.getInlineStyleAt(caretPosition - 1);\n    let focusEntity = focusBlock.getEntityAt(caretPosition - 1);\n\n    // Insert space with the same inline style to the entity\n    let newContentState = Modifier.insertText(contentState, selectionState, ' ', focusInlineStyle, focusEntity);\n    let newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n    dispatcher.setEditorState(newEditorState);\n  };\n\n  if (caretPosition >= firstSpaceIndex && caretPosition !== focusBlock.getLength()) {\n    insertSpaceToCurrentSelection();\n    return 'handled';\n  }\n\n  // Get text befoer first space\n  let keyword = blockText.slice(0, caretPosition);\n\n  // Chech the conversion type and convert\n  const newSelectionState = new SelectionState({\n    focusKey: focusKey,\n    focusOffset: 0,\n    anchorKey: focusKey,\n    anchorOffset: 0,\n  });\n  const rangeToRemove = new SelectionState({\n    focusKey: focusKey,\n    focusOffset: caretPosition + 1, // Including the extra space charactor\n    anchorKey: focusKey,\n    anchorOffset: 0,\n  });\n\n  // Get new type\n  let newType = null;\n  let newHeadingType = 1;\n  switch (keyword) {\n    // Bullet list\n    case '*':\n    case '-':\n      if (focusBlockType !== constBlockType.bulletList) newType = constBlockType.bulletList;\n      break;\n\n    // Check list\n    case '[]':\n      if (focusBlockType !== constBlockType.checkList) newType = constBlockType.checkList;\n      break;\n\n    // Toggle list\n    case '>':\n      if (focusBlockType !== constBlockType.toggleList) newType = constBlockType.toggleList;\n      break;\n\n    // Quote\n    case '\"':\n      if (focusBlockType !== constBlockType.quote) newType = constBlockType.quote;\n      break;\n\n    // Heading\n    case '#':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h1;\n      break;\n    case '##':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h2;\n      break;\n    case '###':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h3;\n      break;\n    case '####':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h4;\n      break;\n    case '#####':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h5;\n      break;\n    case '######':\n      if (focusBlockType !== constBlockType.heading) newType = constBlockType.heading;\n      newHeadingType = headingType.h6;\n      break;\n\n    // Other cases\n    default:\n      // Numbered list\n      if (keyword.match(/^\\d+\\./) && focusBlockType !== constBlockType.numberList) {\n        handleConvertToNumberList();\n        return 'handled';\n      }\n\n      // Code Block\n      if (keyword.match(/^```/) && focusBlockType !== constBlockType.code) {\n        newType = constBlockType.code;\n        break;\n      }\n\n      // Default: null\n      break;\n  }\n\n  // If not a valid keyword, then just insert a space\n  if (!newType) {\n    insertSpaceToCurrentSelection();\n    return 'handled';\n  }\n\n  // Before convert the block into another type, insert a space first for a better undo\n  let newContentState = contentState;\n  let newEditorState = editorState;\n  newContentState = Modifier.insertText(contentState, selectionState, ' ');\n  newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n\n  // Convert the type of the block\n  newContentState = Modifier.setBlockType(newContentState, selectionState, newType);\n  newContentState = Modifier.removeRange(newContentState, rangeToRemove, 'forward');\n\n  // Remove from block data according to its block type\n  switch (focusBlockType) {\n    case constBlockType.numberList:\n      {\n        // Remove numberListOrder from current block\n        let focusBlockData = new GeekeMap(focusBlock.getData());\n        focusBlockData.delete(blockDataKeys.numberListOrder);\n        newContentState = updateBlockData(newContentState, focusKey, focusBlockData);\n\n        // Trim the following blocks\n        let baseIndentLevel = focusBlockData.has(blockDataKeys.indentLevel)\n          ? focusBlockData.get(blockDataKeys.indentLevel)\n          : 0;\n        let nextBlock = newContentState.getBlockAfter(focusKey);\n        if (nextBlock) {\n          newContentState = trimNumberListWithSameDepth(newContentState, nextBlock.getKey(), baseIndentLevel);\n        }\n      }\n      break;\n\n    case constBlockType.toggleList:\n      {\n        // Remove toggleListToggle from current block\n        let focusBlockData = new GeekeMap(focusBlock.getData());\n        focusBlockData.delete(blockDataKeys.toggleListToggle);\n        newContentState = updateBlockData(newContentState, focusKey, focusBlockData);\n      }\n      break;\n\n    case constBlockType.checkList:\n      {\n        // Remove checkListCheck from current block\n        let focusBlockData = new GeekeMap(focusBlock.getData());\n        focusBlockData.delete(blockDataKeys.checkListCheck);\n        newContentState = updateBlockData(newContentState, focusKey, focusBlockData);\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  // Set heading type if the new type is heading\n  if (newType === constBlockType.heading) {\n    let focusBlock = newContentState.getBlockForKey(focusKey);\n    let focusBlockData = new GeekeMap(focusBlock.getData());\n    focusBlockData.set(blockDataKeys.headingType, newHeadingType);\n    newContentState = updateBlockData(newContentState, focusKey, focusBlockData);\n  }\n\n  // If newType is code, then put the content to block data\n  if (newType === constBlockType.code) {\n    // Put content to block data\n    let focusBlock = newContentState.getBlockForKey(focusKey);\n    let focusBlockData = new GeekeMap(focusBlock.getData());\n    let focusBlockContent = focusBlock.getText();\n    focusBlockData.set(blockDataKeys.codeContent, focusBlockContent);\n    newContentState = updateBlockData(newContentState, focusKey, focusBlockData);\n\n    // Remove block text\n    let selectionToRemoveText = new SelectionState({\n      focusKey: focusKey,\n      focusOffset: focusBlockContent.length,\n      anchorKey: focusKey,\n      anchorOffset: 0,\n    });\n    newContentState = Modifier.removeRange(newContentState, selectionToRemoveText, 'forward');\n  }\n\n  // Update editorState\n  newEditorState = EditorState.push(newEditorState, newContentState, 'change-block-type');\n  newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nexport const handleKeyCommand_backspace = (editorState, command, dispatcher, returnResult = false) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  // Constants\n  const prevBlockKeyWithSameDepth = command[2];\n  const needTrimNumberList = command[3];\n  let newEditorState = editorState;\n  let newContentState = newEditorState.getCurrentContent();\n  let newSelectionState = newEditorState.getSelection();\n  let focusKey = newSelectionState.getFocusKey();\n  let focusBlock = newContentState.getBlockForKey(focusKey);\n  let focusBlockData = focusBlock.getData();\n  let baseIndentLevel = focusBlockData.has(blockDataKeys.indentLevel)\n    ? focusBlockData.get(blockDataKeys.indentLevel)\n    : 0;\n\n  // Check current block type. If it has type, remove it. If it does not have type, remove this block and append all text after caret to the previous block.\n  if (focusBlock.getType() !== 'unstyled') {\n    newContentState = Modifier.setBlockType(newContentState, newSelectionState, 'unstyled');\n\n    // Update block data: remove numberListOrder from block data\n    let focusBlockData = new GeekeMap(focusBlock.getData());\n    let dataChanged = false;\n    const removeBlockData = (blockDataKey) => {\n      if (focusBlockData.has(blockDataKey)) {\n        focusBlockData.delete(blockDataKey);\n        dataChanged = true;\n      }\n    };\n\n    // TODO: automation...\n    removeBlockData(blockDataKeys.numberListOrder);\n    removeBlockData(blockDataKeys.toggleListToggle);\n    removeBlockData(blockDataKeys.checkListCheck);\n    removeBlockData(blockDataKeys.headingType);\n    removeBlockData(blockDataKeys.codeContent);\n    removeBlockData(blockDataKeys.codeLanguage);\n    removeBlockData(blockDataKeys.codeWrapping);\n    removeBlockData(blockDataKeys.codeTheme);\n    removeBlockData(blockDataKeys.codeLineNumber);\n\n    if (dataChanged) {\n      newContentState = updateBlockData(newContentState, null, focusBlockData, newSelectionState);\n    }\n\n    // Trim the next list\n    let nextBlock = newContentState.getBlockAfter(focusBlock.getKey());\n    if (nextBlock) {\n      if (needTrimNumberList) {\n        newContentState = trimNumberListWithSameDepth(newContentState, nextBlock.getKey(), baseIndentLevel);\n      }\n      newSelectionState = null; // No need to set new selection state\n    }\n  } else {\n    const selectionState = newEditorState.getSelection();\n    const curBlock = newContentState.getBlockForKey(selectionState.getFocusKey());\n    let prevBlock = newContentState.getBlockBefore(selectionState.getFocusKey());\n    if (!prevBlock) return 'not-handled';\n\n    // Update parent map & depth\n    // Check whether the previous block is the parent of current block\n    // If true, make the indent less by 1 level if current indent level is not at root\n    if (focusBlockData.get(blockDataKeys.parentKey) === prevBlock.getKey() && baseIndentLevel > 0) {\n      newContentState = handleKeyCommand_lessIndent(editorState, dispatcher, true);\n    } else {\n      // Update parent for preparing to remove this block...\n      let newParentBlock = findPreviousBlockWithSameDepth(newContentState, focusKey, baseIndentLevel);\n      let newParentBlockKey = newParentBlock.getKey();\n      console.assert(newParentBlock, 'Unhandled condition: newParentBlock is undefined!');\n      let tempBlock = newContentState.getBlockAfter(focusKey);\n      while (true) {\n        if (!tempBlock) break;\n        let tempBlockData = tempBlock.getData();\n        let tempBlockDepth = tempBlockData.has(blockDataKeys.indentLevel)\n          ? tempBlockData.get(blockDataKeys.indentLevel)\n          : 0;\n        if (tempBlockDepth <= baseIndentLevel) break;\n\n        let newTempBlockData = new GeekeMap(tempBlockData);\n        newTempBlockData.set(blockDataKeys.parentKey, newParentBlockKey);\n        newContentState = updateBlockData(newContentState, tempBlock.getKey(), newTempBlockData);\n        tempBlock = newContentState.getBlockAfter(tempBlock.getKey());\n      }\n\n      // Remove the block\n      prevBlock = newContentState.getBlockForKey(prevBlock.getKey());\n      const removeSelectionState = new SelectionState({\n        focusKey: curBlock.getKey(),\n        focusOffset: 0,\n        anchorKey: prevBlock.getKey(),\n        anchorOffset: prevBlock.getLength(),\n      });\n      newContentState = Modifier.removeRange(newContentState, removeSelectionState, 'backward');\n\n      // Set newSelectionState\n      newSelectionState = new SelectionState({\n        focusKey: prevBlock.getKey(),\n        focusOffset: prevBlock.getLength(),\n        anchorKey: prevBlock.getKey(),\n        anchorOffset: prevBlock.getLength(),\n      });\n\n      // Update focusKey, because current block is removed\n      focusKey = prevBlock.getKey();\n      focusBlock = newContentState.getBlockForKey(focusKey);\n\n      // Update block data: trim the numbered list (start from the prevBlock)\n      if (needTrimNumberList) {\n        if (prevBlockKeyWithSameDepth) {\n          let prevBlock = newContentState.getBlockForKey(prevBlockKeyWithSameDepth);\n          let prevBlockData = prevBlock.getData();\n          let prevNumberListOrder = prevBlockData.has(blockDataKeys.numberListOrder)\n            ? prevBlockData.get(blockDataKeys.numberListOrder)\n            : 1;\n          newContentState = trimNumberListWithSameDepth(\n            newContentState,\n            prevBlockKeyWithSameDepth,\n            baseIndentLevel,\n            prevNumberListOrder,\n          );\n        } else {\n          newContentState = trimNumberListWithSameDepth(newContentState, focusKey, baseIndentLevel);\n        }\n      }\n    }\n  }\n\n  if (returnResult) return newContentState;\n\n  // Apply update to editorState\n  newEditorState = EditorState.push(editorState, newContentState, 'change-block-type');\n  console.assert(newEditorState !== null, 'newEditorState is null when handling backspace!');\n  if (newSelectionState) {\n    newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n  }\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_delete = (editorState, command, dispatcher) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  // Constants\n  const selectionState = editorState.getSelection();\n  const curBlockKey = command[2];\n  const needTrimNumberList = command[3];\n  let newEditorState = editorState;\n  let newContentState = editorState.getCurrentContent();\n  const curBlock = newContentState.getBlockForKey(curBlockKey);\n  const nextBlock = newContentState.getBlockAfter(curBlockKey);\n  const nextBlockKey = nextBlock.getKey();\n  const curBlockData = curBlock.getData();\n  const nextBlockData = nextBlock.getData();\n  const baseIndentLevel = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n  const nextIndentLevel = nextBlockData.has(blockDataKeys.indentLevel)\n    ? nextBlockData.get(blockDataKeys.indentLevel)\n    : 0;\n  const baseNumberListOrder = curBlockData.has(blockDataKeys.numberListOrder)\n    ? curBlockData.get(blockDataKeys.numberListOrder)\n    : 1;\n\n  // Check whether the block to be deleted has children.\n  // If no children, then no need to re-organize the parent map.\n  // If has children, update the parent map\n  const nextNextBlock = newContentState.getBlockAfter(nextBlockKey);\n  if (nextNextBlock && nextNextBlock.getData().get(blockDataKeys.parentKey) === nextBlockKey) {\n    // Chech whether current block is the parent of the next block\n    // If yes, then make indent of the children of nextBlock less by 1\n    if (nextBlockData.get(blockDataKeys.parentKey) === curBlockKey) {\n      let tempBlock = newContentState.getBlockAfter(nextBlockKey);\n      while (true) {\n        // Iterate through all block with more depth\n        if (!tempBlock) break;\n        let tempBlockKey = tempBlock.getKey();\n        let tempBlockData = tempBlock.getData();\n        let tempBlockDepth = tempBlockData.has(blockDataKeys.indentLevel)\n          ? tempBlockData.get(blockDataKeys.indentLevel)\n          : 0;\n\n        // Only deal with the children of the deleted block (nextBlock)\n        if (tempBlockDepth - 1 <= baseIndentLevel) break;\n\n        // Update depth\n        let tempData = new GeekeMap(tempBlockData);\n        tempData.set(blockDataKeys.indentLevel, tempBlockDepth - 1);\n\n        // If the indent level - 1 is not equal to the nextIndentLevel, then it is not a direct child of next block. No need to process it.\n        if (tempBlockDepth - 1 === nextIndentLevel) {\n          tempData.set(blockDataKeys.parentKey, curBlockKey);\n        }\n\n        // Update block data to contentState\n        newContentState = updateBlockData(newContentState, tempBlockKey, tempData);\n        tempBlock = newContentState.getBlockAfter(tempBlockKey);\n      }\n    } else {\n      // Update parentKey of the children of the nextBlock to curBlock\n      let tempBlock = newContentState.getBlockAfter(nextBlockKey);\n      let previousBlock = findPreviousBlockWithSameDepth(newContentState, nextBlockKey, nextIndentLevel);\n      // In this case, previousBlock must not be undefined\n      console.assert(previousBlock, 'Un-handled case: previousBlock cannot be found!');\n      let previousBlockKey = previousBlock.getKey();\n      while (true) {\n        if (!tempBlock) break;\n        let tempBlockKey = tempBlock.getKey();\n        let tempBlockData = tempBlock.getData();\n        let tempBlockDepth = tempBlockData.has(blockDataKeys.indentLevel)\n          ? tempBlockData.get(blockDataKeys.indentLevel)\n          : 0;\n\n        // Only deal with the children of the deleted block (nextBlock)\n        if (tempBlockDepth <= nextIndentLevel) break;\n\n        // If the indent level - 1 is not equal to the nextIndentLevel, then it is not a direct child of next block. No need to process it.\n        if (tempBlockDepth - 1 === nextIndentLevel) {\n          let tempData = new GeekeMap(tempBlockData);\n          tempData.set(blockDataKeys.parentKey, previousBlockKey);\n          newContentState = updateBlockData(newContentState, tempBlockKey, tempData);\n        }\n\n        tempBlock = newContentState.getBlockAfter(tempBlockKey);\n      }\n    }\n  }\n\n  // Remove block\n  const removeSelectionState = new SelectionState({\n    anchorKey: curBlockKey,\n    anchorOffset: curBlock.getLength(),\n    focusKey: nextBlock.getKey(),\n    focusOffset: 0,\n  });\n  newContentState = Modifier.removeRange(newContentState, removeSelectionState, 'backward');\n\n  if (needTrimNumberList) {\n    // Trim the following blocks\n    if (curBlock.getType() === constBlockType.numberList && baseIndentLevel === nextIndentLevel) {\n      newContentState = trimNumberListWithSameDepth(newContentState, curBlockKey, baseIndentLevel, baseNumberListOrder);\n    } else {\n      const newNextBlock = newContentState.getBlockAfter(curBlockKey);\n      newContentState = trimNumberListWithSameDepth(newContentState, newNextBlock.getKey(), nextIndentLevel, 1);\n    }\n  }\n\n  // Update editorState\n  newEditorState = EditorState.push(editorState, newContentState, 'delete-number-list');\n  newEditorState = EditorState.forceSelection(newEditorState, selectionState);\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_deleteMultipleBlocks = (editorState, command, dispatcher) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return 'not-handled';\n  }\n\n  let newContentState = editorState.getCurrentContent();\n  let selectionState = editorState.getSelection();\n  let startBlockKey = selectionState.getStartKey();\n  let startOffset = selectionState.getStartOffset();\n  let endBlockKey = selectionState.getEndKey();\n  let nextToEndBlock = newContentState.getBlockAfter(endBlockKey);\n\n  // Sanity check whether startOffset is valid. If not, set it to the length of the startBlock\n  let startBlock = newContentState.getBlockForKey(startBlockKey);\n  if (startBlock.getLength() < startOffset) {\n    startOffset = startBlock.getLength();\n  }\n\n  // If this is not the end of the editor...\n  if (nextToEndBlock) {\n    let curBlock = nextToEndBlock;\n    let baseBlock = newContentState.getBlockForKey(startBlockKey);\n    let curBlockData = curBlock.getData();\n    let baseBlockData = baseBlock.getData();\n    let curBlockDepth = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n    let baseBlockDepth = baseBlockData.has(blockDataKeys.indentLevel)\n      ? baseBlockData.get(blockDataKeys.indentLevel)\n      : 0;\n    let depthDelta = curBlockDepth - baseBlockDepth;\n\n    // Only when depth delta is larger than 0, which means the later block has deeper depth than the base block, we have to update the block depth.\n    if (depthDelta > 0) {\n      let tempBlock = curBlock;\n      while (true) {\n        if (!tempBlock) break;\n        let tempBlockData = curBlock.getData();\n        let tempBlockDepth = tempBlockData.has(blockDataKeys.indentLevel)\n          ? tempBlockData.get(blockDataKeys.indentLevel)\n          : 0;\n        if (tempBlockDepth <= curBlockDepth) break;\n\n        let newTempBlockData = new GeekeMap(tempBlockData);\n        newTempBlockData.set(blockDataKeys.indentLevel, tempBlockDepth - depthDelta);\n        newContentState = updateBlockData(newContentState, newTempBlockData);\n        tempBlock = newContentState.getBlockAfter(tempBlock.getKey());\n      }\n    }\n  }\n\n  // If the focus block is a special block, set the block type to basic block and remove all the related block data\n  const focusBlockType = newContentState.getBlockForKey(selectionState.getFocusKey()).getType();\n  if (specialBlockSet.has(focusBlockType)) {\n    let newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n    newContentState = handleKeyCommand_backspace(newEditorState, command, dispatcher, true);\n  }\n\n  // Remove the block\n  newContentState = Modifier.removeRange(newContentState, selectionState, 'backward');\n\n  // Trim the page\n  newContentState = trimNumberListInWholePage(newContentState);\n\n  // Push undo stack\n  let newEditorState = EditorState.push(editorState, newContentState, 'delete-block');\n  newEditorState = EditorState.forceSelection(\n    newEditorState,\n    new SelectionState({\n      anchorKey: startBlockKey,\n      anchorOffset: startOffset,\n      focusKey: startBlockKey,\n      focusOffset: startOffset,\n    }),\n  );\n\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_moveUpToSpecialBlock = (editorState, dispatcher) => {\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n\n  // Check whether current selectionState is collapsed\n  if (!selectionState.isCollapsed()) return 'not-handled';\n\n  // Check whether the previous block exists\n  const focusBlockKey = selectionState.getFocusKey();\n  const previousBlock = contentState.getBlockBefore(focusBlockKey);\n  if (!previousBlock) return 'not-handled';\n\n  // Set selectionState to the previous block first\n  const previousBlockKey = previousBlock.getKey();\n  let newEditorState = EditorState.forceSelection(\n    editorState,\n    new SelectionState({\n      focusKey: previousBlockKey,\n      focusOffset: 0,\n      anchorKey: previousBlockKey,\n      anchorOffset: 0,\n    }),\n  );\n  dispatcher.setEditorState(newEditorState);\n\n  // Focus the special block\n  dispatcher.focusSpecialBlock(previousBlockKey, constMoveDirection.up);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_moveDownToSpecialBlock = (editorState, dispatcher) => {\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n\n  // Check whether current selectionState is collapsed\n  if (!selectionState.isCollapsed()) return 'not-handled';\n\n  // Check whether the next block exists\n  const focusBlockKey = selectionState.getFocusKey();\n  const nextBlock = contentState.getBlockAfter(focusBlockKey);\n  if (!nextBlock) return 'not-handled';\n\n  // Set selectionState to the previous block first\n  const nextBlockKey = nextBlock.getKey();\n  let newEditorState = EditorState.forceSelection(\n    editorState,\n    new SelectionState({\n      focusKey: nextBlockKey,\n      focusOffset: 0,\n      anchorKey: nextBlockKey,\n      anchorOffset: 0,\n    }),\n  );\n  dispatcher.setEditorState(newEditorState);\n\n  // Focus the special block\n  dispatcher.focusSpecialBlock(nextBlockKey, constMoveDirection.down);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_moveToPreviousBlock = (editorState, dispatcher, blockKey, restArgs = null) => {\n  if (restArgs === null) return 'not-handled';\n\n  const selectionState = editorState.getSelection();\n  const focusBlockKey = blockKey ? blockKey : selectionState.getFocusKey();\n  let newContentState = editorState.getCurrentContent();\n\n  // If current block is code block, then blur it first\n  const focusBlock = newContentState.getBlockForKey(focusBlockKey);\n  if (focusBlock.getType() === constBlockType.code) {\n    restArgs.blurAceEditor();\n    restArgs.handleFocusEditor();\n  }\n\n  // Check whether previous block is a special block\n  const previousBlock = newContentState.getBlockBefore(focusBlockKey);\n  if (!previousBlock) return 'not-handled'; // If this is the first block, then no need to handle this event.\n  if (specialBlockSet.has(previousBlock.getType())) {\n    // The previous block is a special block\n    return handleKeyCommand_moveUpToSpecialBlock(\n      EditorState.forceSelection(\n        editorState,\n        new SelectionState({\n          focusKey: focusBlockKey,\n          focusOffset: 0,\n          anchorKey: focusBlockKey,\n          anchorOffset: 0,\n        }),\n      ),\n      dispatcher,\n      restArgs,\n    );\n  }\n\n  // The previous block is NOT a special block. Then, se the cursor position to the end of the previous block.\n  const previousBlockLength = previousBlock.getLength();\n  const previousBlockKey = previousBlock.getKey();\n  const newSelectionState = new SelectionState({\n    focusKey: previousBlockKey,\n    focusOffset: previousBlockLength,\n    anchorKey: previousBlockKey,\n    anchorOffset: previousBlockLength,\n  });\n  const newEditorState = EditorState.forceSelection(editorState, newSelectionState);\n\n  // Render the new selection\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_moveToNextBlock = (editorState, dispatcher, blockKey, restArgs = null) => {\n  if (restArgs === null) return 'not-handled';\n\n  const selectionState = editorState.getSelection();\n  const focusBlockKey = blockKey ? blockKey : selectionState.getFocusKey();\n  let newContentState = editorState.getCurrentContent();\n\n  // If current block is code block, then blur it first\n  const focusBlock = newContentState.getBlockForKey(focusBlockKey);\n  if (focusBlock.getType() === constBlockType.code) {\n    restArgs.blurAceEditor();\n    restArgs.handleFocusEditor();\n  }\n\n  // Check whether next block is a special block\n  const nextBlock = newContentState.getBlockAfter(focusBlockKey);\n  if (!nextBlock) return 'not-handled'; // If this is the first block, then no need to handle this event.\n  if (specialBlockSet.has(nextBlock.getType())) {\n    // The next block is a special block\n    return handleKeyCommand_moveDownToSpecialBlock(\n      EditorState.forceSelection(\n        editorState,\n        new SelectionState({\n          focusKey: focusBlockKey,\n          focusOffset: 0,\n          anchorKey: focusBlockKey,\n          anchorOffset: 0,\n        }),\n      ),\n      dispatcher,\n      restArgs,\n    );\n  }\n\n  // The previous block is NOT a special block. Then, se the cursor position to the end of the previous block.\n  const nextBlockKey = nextBlock.getKey();\n  const newSelectionState = new SelectionState({\n    focusKey: nextBlockKey,\n    focusOffset: 0,\n    anchorKey: nextBlockKey,\n    anchorOffset: 0,\n  });\n  const newEditorState = EditorState.forceSelection(editorState, newSelectionState);\n\n  // Render the new selection\n  dispatcher.setEditorState(newEditorState);\n\n  return 'handled';\n};\n\nconst handleKeyCommand_toggleInlineStrikeThrough = (dispatcher) => {\n  dispatcher.toggleInlineStyle('STRIKETHROUGH');\n  return 'handled';\n};\n\nconst handleKeyCommand_toggleInlineCode = (dispatcher) => {\n  dispatcher.toggleInlineStyle('CODE');\n  return 'handled';\n};\n\nconst handleKeyCommand_triggerEditorEsc = (dispatcher) => {\n  dispatcher.triggerEsc();\n  return 'handled';\n};\n\nconst handleKeyCommand_toggleInlineLink = (editorState, dispatcher) => {\n  const selectionState = editorState.getSelection();\n  dispatcher.setLinkRange(selectionState);\n  return 'handled';\n};\n\nconst handleKeyCommand_toggleInlineMath = (editorState, dispatcher) => {\n  const selectionState = editorState.getSelection();\n  dispatcher.setMathRange(selectionState);\n  return 'handled';\n};\n\nconst handleKeyCommand_toggleInlineMathDirection = (editorState, dispatcher, direction) => {\n  // If this function is called by mapKeyToEditorCommand, then the selection must\n  //   not at the beginning of a line and must be collapsed.\n  const selectionState = editorState.getSelection();\n  const focusKey = selectionState.getFocusKey();\n  const contentState = editorState.getCurrentContent();\n  const curBlock = contentState.getBlockForKey(focusKey);\n  const entityKey = curBlock.getEntityAt(selectionState.getFocusOffset() + (direction === 'left' ? -1 : 0));\n\n  // Find the range of the entity\n  let newSelectionState = null;\n  curBlock.findEntityRanges(\n    (value) => {\n      if (value.entity === entityKey) return true;\n    },\n    (start, end) => {\n      newSelectionState = new SelectionState({\n        anchorKey: focusKey,\n        anchorOffset: start,\n        focusKey: focusKey,\n        focusOffset: end,\n      });\n    },\n  );\n\n  if (newSelectionState) {\n    let newEditorState = EditorState.forceSelection(editorState, newSelectionState);\n    dispatcher.setEditorState(newEditorState);\n  }\n\n  dispatcher.setMathRange(newSelectionState);\n  return 'handled';\n};\n\nexport const handleKeyCommand_toggleSlashMenu = (editorState, dispatcher) => {\n  // Check whether current selectionState is collapsed. If true, insert slash symbol first\n  // Else, set editorMisc so that it will show slash command menu with textfield\n  const selectionState = editorState.getSelection();\n\n  if (selectionState.isCollapsed()) {\n    // Insert symbol first\n    const contentState = editorState.getCurrentContent();\n    const focusBlock = contentState.getBlockForKey(selectionState.getFocusKey());\n    const caretPosition = selectionState.getFocusOffset();\n    let newContentState = contentState;\n    let newEditorState = editorState;\n\n    // Get entity by key and offset\n    let focusInlineStyle = focusBlock.getInlineStyleAt(caretPosition - 1);\n    let focusEntity = focusBlock.getEntityAt(caretPosition - 1);\n\n    // Insert slash with style\n    newContentState = Modifier.insertText(contentState, selectionState, '/', focusInlineStyle, focusEntity);\n    newEditorState = EditorState.push(editorState, newContentState, 'insert-characters');\n\n    // Set editorMisc, such that it can monitor user input until user press space\n    // The monitor need the blockKey and slash position to grab the user input\n\n    dispatcher.setEditorState(newEditorState);\n  } else {\n\n  }\n};\n\nexport const handleKeyCommand = (editorState, command, dispatcher, blockKey, restArgs = null) => {\n  switch (command) {\n    case keyCommandConst.moreIndent:\n      return handleKeyCommand_moreIndent(editorState, dispatcher);\n\n    case keyCommandConst.lessIndent:\n      return handleKeyCommand_lessIndent(editorState, dispatcher);\n\n    case keyCommandConst.doNothing:\n      return false;\n\n    case keyCommandConst.checkBlockTypeConversion:\n      return handleKeyCommand_checkBlockTypeConversion(editorState, command, dispatcher);\n\n    case keyCommandConst.deleteMultipleBlocks:\n      return handleKeyCommand_deleteMultipleBlocks(editorState, command, dispatcher);\n\n    case keyCommandConst.moveToNextBlock:\n      return handleKeyCommand_moveToNextBlock(editorState, dispatcher, blockKey, restArgs);\n\n    case keyCommandConst.moveToPreviousBlock:\n      return handleKeyCommand_moveToPreviousBlock(editorState, dispatcher, blockKey, restArgs);\n\n    case keyCommandConst.moveUpToCodeBlock:\n      return handleKeyCommand_moveUpToSpecialBlock(editorState, dispatcher);\n\n    case keyCommandConst.moveDownToCodeBlock:\n      return handleKeyCommand_moveDownToSpecialBlock(editorState, dispatcher);\n\n    case keyCommandConst.toggleInlineStrikeThrough:\n      return handleKeyCommand_toggleInlineStrikeThrough(dispatcher);\n\n    case keyCommandConst.toggleInlineCode:\n      return handleKeyCommand_toggleInlineCode(dispatcher);\n\n    case keyCommandConst.triggerEditorEsc:\n      return handleKeyCommand_triggerEditorEsc(dispatcher);\n\n    case keyCommandConst.toggleInlineLink:\n      return handleKeyCommand_toggleInlineLink(editorState, dispatcher);\n\n    case keyCommandConst.toggleInlineMath:\n      return handleKeyCommand_toggleInlineMath(editorState, dispatcher);\n\n    case keyCommandConst.toggleInlineMathLeft:\n      return handleKeyCommand_toggleInlineMathDirection(editorState, dispatcher, 'left');\n\n    case keyCommandConst.toggleInlineMathRight:\n      return handleKeyCommand_toggleInlineMathDirection(editorState, dispatcher, 'right');\n\n    case keyCommandConst.toggleSlashMenu:\n      return handleKeyCommand_toggleSlashMenu(editorState, dispatcher);\n\n    default:\n      if (typeof command === typeof [] && command.length > 0 && command[0] === keyCommandConst.multiCommands) {\n        switch (command[1]) {\n          case keyCommandConst.handleBackspace:\n            return handleKeyCommand_backspace(editorState, command, dispatcher);\n\n          case keyCommandConst.handleDelete:\n            return handleKeyCommand_delete(editorState, command, dispatcher);\n\n          default:\n            break;\n        }\n      }\n      return handleKeyCommand_default(editorState, command, dispatcher);\n  }\n};\n/// End handleKeyCommand\n\n/// Start handleReturn\n// TODO: Copy different block data depends on different block\nexport const handleReturn = (e, editorState, dispatcher, config = blockDataPreserveConfig) => {\n  if (!dispatcher.setEditorState) {\n    console.error(dispatcherNotFoundConst.setEditorState);\n    return false;\n  }\n\n  // Constants\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n  const originalBlockKey = selectionState.getEndKey();\n  const hasShift = e.shiftKey;\n  const toggleBlockData = (!isOSX && KeyBindingUtil.isCtrlKeyCommand(e)) || KeyBindingUtil.hasCommandModifier(e);\n\n  // Variables\n  let newEditorState = editorState;\n  let newContentState = contentState;\n\n  // If selection is not collapsed... return false!\n  // TODO: handle this kind of case\n  if (!selectionState.isCollapsed()) {\n    console.error('Unhandled condition: selectionState is not collapsed when enter is pressed!');\n    return true;\n  }\n\n  // If shift is pressed, then insert soft new line\n  if (hasShift) {\n    newEditorState = RichUtils.insertSoftNewline(newEditorState);\n    dispatcher.setEditorState(newEditorState);\n    return true;\n  }\n\n  // Get all block data from current block\n  const curBlock = contentState.getBlockMap().get(originalBlockKey);\n  const curBlockType = curBlock.getType();\n  const blockData = curBlock.getData();\n  const indentLevel = blockData.has(blockDataKeys.indentLevel) ? blockData.get(blockDataKeys.indentLevel) : 0;\n\n  // Check whether the current block is not a default block and the content is empty.\n  // If both conditions are true, then convert this block into a default block and remove the corresponding block data.\n  if (curBlockType !== constBlockType.default && curBlock.getLength() === 0) {\n    newContentState = Modifier.setBlockType(newContentState, selectionState, 'unstyled');\n\n    // Update block data: remove numberListOrder from block data\n    let focusBlockData = new GeekeMap(curBlock.getData());\n    let dataChanged = false;\n    if (focusBlockData.has(blockDataKeys.numberListOrder)) {\n      focusBlockData.delete(blockDataKeys.numberListOrder);\n      dataChanged = true;\n    }\n    if (focusBlockData.has(blockDataKeys.toggleListToggle)) {\n      focusBlockData.delete(blockDataKeys.toggleListToggle);\n      dataChanged = true;\n    }\n    if (focusBlockData.has(blockDataKeys.checkListCheck)) {\n      focusBlockData.delete(blockDataKeys.checkListCheck);\n      dataChanged = true;\n    }\n    if (dataChanged) {\n      newContentState = updateBlockData(newContentState, null, focusBlockData, selectionState);\n    }\n\n    // Trim the next list\n    let nextBlock = newContentState.getBlockAfter(curBlock.getKey());\n    if (nextBlock) {\n      let prevBlock = newContentState.getBlockBefore(curBlock.getKey());\n      if (\n        !(\n          prevBlock &&\n          curBlock.getType() !== constBlockType.numberList &&\n          prevBlock.getType() !== constBlockType.numberList\n        )\n      ) {\n        newContentState = trimNumberListWithSameDepth(newContentState, nextBlock.getKey(), indentLevel);\n      }\n    }\n\n    // Push to undo stack\n    newEditorState = EditorState.push(editorState, newContentState, 'split-block');\n    dispatcher.setEditorState(newEditorState);\n\n    return true;\n  }\n\n  // Copy only necessary block data\n  let newMap = new GeekeMap();\n  blockData.forEach((value, key) => {\n    if (config[key].indexOf(blockDataPreserveConstant.all) > -1 || config[key].indexOf(curBlockType) > -1) {\n      newMap.set(key, value);\n    }\n  });\n\n  if (toggleBlockData) {\n    switch (curBlockType) {\n      case constBlockType.toggleList:\n        // Update block data\n        newMap.set(blockDataKeys.toggleListToggle, !blockData.get(blockDataKeys.toggleListToggle));\n        // Merge block data into contentState\n        newContentState = updateBlockData(newContentState, curBlock.getKey(), newMap);\n        // Update undo stack\n        newEditorState = EditorState.push(editorState, newContentState, 'change-block-data');\n        // Update editor\n        dispatcher.setEditorState(newEditorState);\n\n        return true;\n\n      case constBlockType.checkList:\n        // Update block data\n        newMap.set(blockDataKeys.checkListCheck, !blockData.get(blockDataKeys.checkListCheck));\n        // Merge block data into contentState\n        newContentState = updateBlockData(newContentState, curBlock.getKey(), newMap);\n        // Update undo stack\n        newEditorState = EditorState.push(editorState, newContentState, 'change-block-data');\n        // Update editor\n        dispatcher.setEditorState(newEditorState);\n\n        return true;\n\n      default:\n        break;\n    }\n  }\n\n  // Perform split block operation\n  newContentState = Modifier.splitBlock(newContentState, selectionState);\n  // Use push to get a new editorState with a new selectionState for merging block data\n  newEditorState = EditorState.push(newEditorState, newContentState, 'split-block');\n  const newSelectionState = newEditorState.getSelection();\n\n  // Update block data\n  newContentState = updateBlockData(newContentState, null, newMap, newSelectionState);\n\n  // If current block is number list block, modify the number list order after this block\n  if (curBlockType === constBlockType.numberList) {\n    let focusBlock = newContentState.getBlockForKey(selectionState.getFocusKey());\n    let focusBlockData = focusBlock.getData();\n    let baseNumberListOrder = focusBlockData.has(blockDataKeys.numberListOrder)\n      ? focusBlockData.get(blockDataKeys.numberListOrder)\n      : 1;\n    newContentState = trimNumberListWithSameDepth(\n      newContentState,\n      selectionState.getFocusKey(),\n      indentLevel,\n      baseNumberListOrder,\n    );\n  }\n\n  // If current block is heading, remove the block type and set it to default\n  if (curBlockType === constBlockType.heading) {\n    let nextBlock = newContentState.getBlockAfter(selectionState.getFocusKey());\n    let nextBlockKey = nextBlock.getKey();\n    newContentState = Modifier.setBlockType(\n      newContentState,\n      new SelectionState({\n        focusKey: nextBlockKey,\n        focusOffset: 0,\n        anchorKey: nextBlockKey,\n        anchorOffset: 0,\n      }),\n      constBlockType.default,\n    );\n  }\n\n  // Push copy block data action into editorState & update selection state\n  // Note: to ignore the push we used for generating a new selectionState, use original editorState to push undo stack\n  newEditorState = EditorState.push(editorState, newContentState, 'split-block');\n  newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n\n  // Render current change\n  dispatcher.setEditorState(newEditorState);\n\n  return true;\n};\n/// End handleReturn\n\n/// Start handleAceEditor\nconst handleAceEditor_up = (editor, dispatcher) => {\n  if (!dispatcher.moveCursor) {\n    console.error(dispatcherNotFoundConst.moveCursor);\n    return null;\n  }\n\n  const selection = editor.getSelection();\n  const cursor = selection.getCursor();\n\n  // Check whether range start is equal to range end. If not, apply the default action.\n  const selectionAnchor = selection.getSelectionAnchor();\n  const selectionLead = selection.getSelectionLead();\n  if (selectionAnchor.row !== selectionLead.row || selectionAnchor.column !== selectionLead.column) return false;\n\n  // Check whether current cursor position at the first line. If not, apply the default action.\n  if (cursor.row !== 0 || cursor.column !== 0) return false;\n\n  // Current cursor is at the first line of the ace editor. However, up arrow key is pressed now because user want to move to the previous block.\n  dispatcher.moveCursor(keyCommandConst.moveToPreviousBlock);\n};\n\nconst handleAceEditor_down = (editor, dispatcher) => {\n  if (!dispatcher.moveCursor) {\n    console.error(dispatcherNotFoundConst.moveCursor);\n    return null;\n  }\n\n  const selection = editor.getSelection();\n  const cursor = selection.getCursor();\n  const editSession = editor.getSession();\n  const lastLine = editSession.getLength() - 1;\n  const lastLineLastPosition = editSession.getLine(lastLine).length;\n\n  // Check whether range start is equal to range end. If not, apply the default action.\n  const selectionAnchor = selection.getSelectionAnchor();\n  const selectionLead = selection.getSelectionLead();\n  if (selectionAnchor.row !== selectionLead.row || selectionAnchor.column !== selectionLead.column) return false;\n\n  // Check whether current cursor position at the last line. If not, apply the default action.\n  if (cursor.row !== lastLine || cursor.column !== lastLineLastPosition) return false;\n\n  // Current cursor is at the last line of the ace editor. However, down arrow key is pressed now because user want to move to the next block.\n  dispatcher.moveCursor(keyCommandConst.moveToNextBlock);\n};\n\nconst handleAceEditor_left = (editor, dispatcher) => {\n  if (!dispatcher.moveCursor) {\n    console.error(dispatcherNotFoundConst.moveCursor);\n    return null;\n  }\n\n  const selection = editor.getSelection();\n  const cursor = selection.getCursor();\n\n  // Check whether range start is equal to range end. If not, apply the default action.\n  const selectionAnchor = selection.getSelectionAnchor();\n  const selectionLead = selection.getSelectionLead();\n  if (selectionAnchor.row !== selectionLead.row || selectionAnchor.column !== selectionLead.column) return false;\n\n  // Check whether current cursor position at the start of the first line. If not, apply the default action.\n  if (cursor.row !== 0 || cursor.column !== 0) return false;\n\n  // Current cursor is at the beginning of the first line of the ace editor. However, left arrow key is pressed now because user want to move to the previous block.\n  dispatcher.moveCursor(keyCommandConst.moveToPreviousBlock);\n};\n\nconst handleAceEditor_right = (editor, dispatcher) => {\n  if (!dispatcher.moveCursor) {\n    console.error(dispatcherNotFoundConst.moveCursor);\n    return null;\n  }\n\n  const selection = editor.getSelection();\n  const cursor = selection.getCursor();\n  const editSession = editor.getSession();\n  const lastLine = editSession.getLength() - 1;\n  const lastLineLastPosition = editSession.getLine(lastLine).length;\n\n  // Check whether range start is equal to range end. If not, apply the default action.\n  const selectionAnchor = selection.getSelectionAnchor();\n  const selectionLead = selection.getSelectionLead();\n  if (selectionAnchor.row !== selectionLead.row || selectionAnchor.column !== selectionLead.column) return false;\n\n  // Check whether current cursor position at the last line. If not, apply the default action.\n  if (cursor.row !== lastLine || cursor.column !== lastLineLastPosition) return false;\n\n  // Current cursor is at the end of the last line of the ace editor. However, right arrow key is pressed now because user want to move to the next block.\n  dispatcher.moveCursor(keyCommandConst.moveToNextBlock);\n};\n\nconst handleAceEditor_backspace = (editor, dispatcher) => {\n  if (!dispatcher.moveCursor) {\n    console.error(dispatcherNotFoundConst.moveCursor);\n    return false;\n  }\n\n  // Check whether the code block is empty. If not, perform normal backspace operation\n  let editorContent = editor.getValue();\n  if (editorContent !== '') return false;\n\n  // 1. Blur ace editor to make editingCode to false\n  // 2. Focus editor\n  // 3. Remove block style and block data\n  dispatcher.onBlur();\n  dispatcher.handleFocusEditor();\n  dispatcher.moveCursor([keyCommandConst.multiCommands, keyCommandConst.handleBackspace, null, false]);\n};\n\nexport const handleAceEditor = (editor, action, dispatcher) => {\n  switch (action) {\n    case constAceEditorAction.up:\n      return handleAceEditor_up(editor, dispatcher);\n\n    case constAceEditorAction.down:\n      return handleAceEditor_down(editor, dispatcher);\n\n    case constAceEditorAction.left:\n      return handleAceEditor_left(editor, dispatcher);\n\n    case constAceEditorAction.right:\n      return handleAceEditor_right(editor, dispatcher);\n\n    case constAceEditorAction.backspace:\n      return handleAceEditor_backspace(editor, dispatcher);\n\n    default:\n      console.error(`Unknown action in handleAceEditor: ${action}`);\n      return false;\n  }\n};\n","/**\n * @file DraggableBlockUtils.js\n * @description Utilities for handling dragging blocks.\n */\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { trimNumberListInWholePage } from './NumberListUtils';\nimport { setMouseOverBlockKey } from '../states/editorMisc';\nimport { GeekeMap, getFirstBlockKey, getLastBlockKey, updateBlockData } from '../utils/Misc';\n\n/*************************************************\n * CONST\n *************************************************/\nimport {\n  editorLeftPadding,\n  editorDraggableButtonWidth,\n  editorDraggableButtonLeftPadding,\n  remToPx,\n  oneRem,\n  blockDataKeys,\n  dragMaskHeight,\n  indentWidth,\n} from '../constant';\nimport { EditorState, SelectionState, AtomicBlockUtils } from 'draft-js';\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\nconst getElementAtDropPosition = (x, y) => {\n  let elements = document.elementsFromPoint(x, y);\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].className === 'geeke-pageDragShadow' && i + 1 < elements.length) {\n      return elements[i + 1];\n    }\n  }\n  return elements[0];\n};\n\nconst getBlockElementFromAnyDomEle = (target) => {\n  if (!target) return null;\n  let curElement = target;\n\n  if (curElement.nodeName === 'HTML') return null;\n  while (!curElement.hasAttribute('geeke')) {\n    if (curElement === document.body) return null;\n    curElement = curElement.parentNode;\n  }\n\n  return curElement;\n};\n\nconst getBlockKeyFromBlockElement = (element) => {\n  if (!element) return null;\n\n  const elementParent = element.parentNode;\n  const blockKey = elementParent.getAttribute('data-offset-key').split('-')[0];\n\n  return blockKey;\n};\n\nconst getBlockDepthFromBlockKey = (key, contentState) => {\n  let depth = 0;\n  const block = contentState.getBlockForKey(key);\n  const blockData = block.getData();\n  depth = blockData.has(blockDataKeys.indentLevel) ? blockData.get(blockDataKeys.indentLevel) : 0;\n\n  return depth;\n};\n\nconst moveAtomicBlock = (contentState, atomicBlock, targetRange, insertionMode) => {\n  const editorState = EditorState.createWithContent(contentState);\n  const newEditorState = AtomicBlockUtils.moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode);\n  return newEditorState.getCurrentContent();\n};\n\nconst handleDrop_normalBlock = (e, pageUuid, editorState, selectedBlocks) => {\n  const mouseX = e.clientX,\n    mouseY = e.clientY;\n  const dropComponent = getElementAtDropPosition(mouseX, mouseY);\n  if (dropComponent === null) return editorState;\n\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getCurrentContent();\n  const blockMap = contentState.getBlockMap();\n  const previousBlock = contentState.getBlockBefore(selectedBlocks[0]);\n  const previousBlockKey = previousBlock ? previousBlock.getKey() : null;\n  const newSelectionState = new SelectionState({\n    anchorKey: selectedBlocks[0],\n    anchorOffset: 0,\n    focusKey: selectedBlocks[0],\n    focusOffset: 0,\n  });\n  let newEditorState = editorState;\n  let newContentState = contentState;\n\n  // Check whether drop above the editor\n  const editorId = `geeke-editor-${pageUuid}`;\n  const editorRect = document.getElementById(editorId).getBoundingClientRect();\n  const editorTopFromPageTop = editorRect.top;\n  const editorBottomFromPageTop = editorRect.bottom;\n  const editorRightFromPageLeft = editorRect.right;\n  const insertBeforeFirstBlock = mouseY <= editorTopFromPageTop;\n  const insertAfterLastBlock = mouseY >= editorBottomFromPageTop;\n\n  // Calculate target depth\n  const dragMaskLeft = editorRect.left + remToPx(editorLeftPadding);\n  const cursorDeltaX = mouseX - dragMaskLeft;\n  const depth = Math.floor(cursorDeltaX / remToPx(indentWidth));\n\n  // Get target block id\n  let targetBlockKey = null;\n  if (insertBeforeFirstBlock) {\n    targetBlockKey = getFirstBlockKey(contentState);\n  } else if (insertAfterLastBlock) {\n    targetBlockKey = getLastBlockKey(contentState);\n  } else {\n    const dropComponent = getElementAtDropPosition(editorRightFromPageLeft - remToPx(editorLeftPadding), mouseY);\n    const blockElement = getBlockElementFromAnyDomEle(dropComponent);\n    targetBlockKey = getBlockKeyFromBlockElement(blockElement);\n  }\n\n  if (!targetBlockKey) {\n    console.warn('targetBlockKey is null...');\n    // If drop position is not good, then we cannot get target block key... QQ\n    // Ex. If drop on editor button, then it would not work\n    return editorState;\n  }\n\n  // Check whether the drop position is the selected blocks\n  if (selectedBlocks.indexOf(targetBlockKey) !== -1) return editorState;\n\n  // Set block moving setting\n  let previousKey = targetBlockKey;\n  let insertionMode = insertBeforeFirstBlock ? 'before' : 'after';\n\n  // Check whether the block position is changed\n  if (targetBlockKey !== previousBlockKey || insertBeforeFirstBlock) {\n    // If the position is changed, move selected block iteratively\n    for (let i = 0; i < selectedBlocks.length; i++) {\n      const blockKeyToBeMoved = selectedBlocks[i];\n      const blockLengthToBeMoved = blockMap.get(blockKeyToBeMoved).getLength();\n      if (!previousKey) {\n        console.error(`Unknown condition! previousKey is null!`);\n        break;\n      }\n      newContentState = moveAtomicBlock(\n        newContentState,\n        contentState.getBlockForKey(blockKeyToBeMoved),\n        new SelectionState({\n          anchorKey: previousKey,\n          anchorOffset: blockLengthToBeMoved,\n          focusKey: previousKey,\n          focusOffset: blockLengthToBeMoved,\n        }),\n        insertionMode,\n      );\n      if (!insertBeforeFirstBlock) previousKey = blockKeyToBeMoved;\n    }\n\n    // Push state (before modifying indent level)\n    newContentState = newContentState.merge({\n      selectionBefore: selectionState,\n      selectionAfter: newSelectionState.set('hasFocus', true),\n    });\n  }\n\n  // Modify block data (just like indentLevel)\n  // Set prevIndentLevel\n  let prevIndentLevel = -1;\n  if (!insertBeforeFirstBlock) {\n    let blockData = blockMap.get(targetBlockKey).getData();\n    if (blockData.has(blockDataKeys.indentLevel)) {\n      prevIndentLevel = blockData.get(blockDataKeys.indentLevel);\n    } else {\n      prevIndentLevel = 0;\n    }\n  }\n  if (depth < 0) prevIndentLevel = 0;\n  else prevIndentLevel = Math.min(prevIndentLevel + 1, depth);\n\n  // Get indentLevel of first selected block\n  const firstSelectedBlockData = blockMap.get(selectedBlocks[0]).getData();\n  const firstSelectedIndentLevel = firstSelectedBlockData.has(blockDataKeys.indentLevel)\n    ? firstSelectedBlockData.get(blockDataKeys.indentLevel)\n    : 0;\n  const indentLevelDelta = prevIndentLevel - firstSelectedIndentLevel;\n\n  // Check whether indent level should be updated. If not, trim the whole page and return directly\n  if (indentLevelDelta === 0) {\n    newContentState = trimNumberListInWholePage(newContentState);\n    newEditorState = EditorState.push(editorState, newContentState, 'drag-and-drop-blocks');\n    newEditorState = EditorState.acceptSelection(newEditorState, newSelectionState);\n    return newEditorState;\n  }\n\n  // Update indent level for each block\n  for (let i = 0; i < selectedBlocks.length; i++) {\n    const thisKey = selectedBlocks[i];\n    const thisBlock = blockMap.get(thisKey);\n    const blockData = thisBlock.getData();\n    let newBlockData = new GeekeMap(blockData);\n    let curIndentLevel = 0;\n    if (blockData.has(blockDataKeys.indentLevel)) {\n      curIndentLevel = blockData.get(blockDataKeys.indentLevel);\n    }\n\n    curIndentLevel += indentLevelDelta;\n    curIndentLevel = Math.min(curIndentLevel, prevIndentLevel + 1);\n    curIndentLevel = Math.max(curIndentLevel, 0);\n    prevIndentLevel = curIndentLevel;\n\n    newBlockData.set(blockDataKeys.indentLevel, curIndentLevel);\n    newContentState = updateBlockData(newContentState, thisKey, newBlockData);\n  }\n\n  // Trim the whole page and push state to undo stack\n  newContentState = newContentState.merge({\n    selectionBefore: selectionState,\n    selectionAfter: newSelectionState.set('hasFocus', true),\n  });\n  newContentState = trimNumberListInWholePage(newContentState);\n  newEditorState = EditorState.acceptSelection(newEditorState, newSelectionState);\n  newEditorState = EditorState.push(editorState, newContentState, 'drag-and-drop-blocks');\n\n  return newEditorState;\n};\n\nexport const onMouseOver = (e, dispatch, pageUuid, blockKey) => {\n  e.stopPropagation();\n  setMouseOverBlockKey(dispatch, pageUuid, blockKey);\n};\n\nexport const onMouseLeave = (e, dispatch, pageUuid) => {\n  e.stopPropagation();\n  setMouseOverBlockKey(dispatch, pageUuid, null);\n};\n\nexport const onDragStart = (\n  e,\n  readOnly,\n  renderEleId,\n  setDragShadowPos,\n  editorState,\n  blockKey,\n  handleDropCallback = handleDrop_normalBlock,\n) => {\n  if (readOnly) {\n    return;\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  // Constants\n  const selectionState = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n  const hasFocus = selectionState.getHasFocus();\n\n  // Find target DOM element and get the block key of the dragged block\n  const target = getBlockElementFromAnyDomEle(e.target);\n  const targetBlockKey = getBlockKeyFromBlockElement(target);\n\n  // Get size of the cloned object\n  const targetRect = target.getBoundingClientRect();\n  const targetWidth = targetRect.width;\n  const targetHeight = targetRect.height;\n\n  // Find all selected blocks\n  const endBlockKey = hasFocus ? selectionState.getEndKey() : blockKey;\n  let curBlock = contentState.getBlockForKey(hasFocus ? selectionState.getStartKey() : blockKey);\n  let selectedBlocks = [];\n  while (curBlock.getKey() !== endBlockKey) {\n    selectedBlocks.push(curBlock.getKey());\n    curBlock = contentState.getBlockAfter(curBlock.getKey());\n  }\n  selectedBlocks.push(curBlock.getKey());\n\n  // Check if the dragged block is in the selected blocks\n  if (selectedBlocks.indexOf(targetBlockKey) < 0) {\n    selectedBlocks = [targetBlockKey];\n  }\n\n  // Find all child blocks of the dragged blocks\n  curBlock = contentState.getBlockForKey(targetBlockKey);\n  let curChild = true;\n  let curBlockData = curBlock.getData();\n  let baseBlockDepth = curBlockData.has(blockDataKeys.indentLevel) ? curBlockData.get(blockDataKeys.indentLevel) : 0;\n  while (curBlock && curChild) {\n    curBlock = contentState.getBlockAfter(curBlock.getKey());\n    if (!curBlock) break;\n    curBlockData = curBlock.getData();\n    curChild = curBlockData.has(blockDataKeys.indentLevel)\n      ? curChild\n        ? curBlockData.get(blockDataKeys.indentLevel) > baseBlockDepth\n        : false\n      : false;\n    if (curChild && selectedBlocks.indexOf(curBlock.getKey()) < 0) selectedBlocks.push(curBlock.getKey());\n  }\n\n  // Calculate X offset\n  const computedEle = window.getComputedStyle(target, null);\n  const targetMarginLeft = parseFloat(computedEle.getPropertyValue('margin-left').replace('px', ''));\n  const targetPaddingLeft = parseFloat(computedEle.getPropertyValue('padding-left').replace('px', ''));\n  const targetPaddingRight = parseFloat(computedEle.getPropertyValue('padding-right').replace('px', ''));\n  const offsetX =\n    targetMarginLeft + remToPx(editorLeftPadding - editorDraggableButtonLeftPadding + editorDraggableButtonWidth / 2);\n  const offsetXBackground = targetMarginLeft + remToPx(editorLeftPadding - editorDraggableButtonLeftPadding);\n  const targetTextWidth =\n    targetWidth - targetPaddingLeft - targetPaddingRight + remToPx(editorDraggableButtonLeftPadding);\n\n  // Clone the target component\n  let clone = target.cloneNode(true);\n\n  // Set size of cloned component\n  clone.style.width = `${targetWidth}px`;\n  clone.style.height = `${targetHeight}px`;\n  clone.style.lineHeight = `1.4rem`;\n\n  // Create a block represents there are multiple blocks when dragging\n  let moreBlocks = document.createElement('div');\n  moreBlocks.innerHTML = '<b>...</b>';\n  moreBlocks.style.position = 'absolute';\n  moreBlocks.style.left = `${remToPx(editorDraggableButtonLeftPadding)}px`;\n  moreBlocks.style.bottom = `0.2rem`;\n\n  // Create background component\n  let background = document.createElement('div');\n  background.style.left = `${offsetXBackground}px`;\n  background.style.position = 'absolute';\n  background.style.width = `${targetTextWidth}px`;\n  background.style.height = `${targetHeight + (selectedBlocks.length > 1 ? remToPx(1.4) : 0)}px`;\n  background.style.top = `0px`;\n  background.style.background = 'rgba(114, 199, 255, 0.5)';\n  background.style.borderRadius = '0.2rem';\n\n  // Render the background and the cloned component\n  let dragShadowEle = document.getElementById(renderEleId);\n  if (selectedBlocks.length > 1) {\n    background.appendChild(moreBlocks);\n  }\n  dragShadowEle.appendChild(background);\n  dragShadowEle.appendChild(clone);\n\n  // Start mouse tracker\n  setDragShadowPos([\n    offsetX,\n    oneRem / 2,\n    true,\n    (e, pageUuid, editorState) => {\n      return handleDropCallback(e, pageUuid, editorState, selectedBlocks);\n    },\n    selectedBlocks,\n  ]);\n};\n\nexport const onDragEnd = (e, setDraggingBlock, renderEleId, setDragShadowPos) => {\n  e.stopPropagation();\n\n  setDraggingBlock(false);\n\n  // Remove event listener\n  document.onmousemove = null;\n  document.onmouseup = null;\n\n  // Remove shadow element\n  let dragShadowEle = document.getElementById(renderEleId);\n  dragShadowEle.innerHTML = '';\n\n  // Disable drag event listener\n  setDragShadowPos([-1, -1, false, null, []]);\n};\n\nexport const createDragMaskParam = (mouseX, mouseY, pageUuid, editorState, selectedBlocks) => {\n  // Sanity check if there are any selected blocks\n  if (selectedBlocks.length === 0) return null;\n\n  // Get block at current cursor position\n  const dropComponent = getElementAtDropPosition(mouseX, mouseY);\n  if (dropComponent === null) return null;\n\n  // Constants\n  const contentState = editorState.getCurrentContent();\n\n  // Check whether drop above the editor\n  const editorId = `geeke-editor-${pageUuid}`;\n  const editorRect = document.getElementById(editorId).getBoundingClientRect();\n  const editorTopFromPageTop = editorRect.top;\n  const editorBottomFromPageTop = editorRect.bottom;\n  const editorRightFromPageLeft = editorRect.right;\n  const insertBeforeFirstBlock = mouseY <= editorTopFromPageTop;\n  const insertAfterLastBlock = mouseY >= editorBottomFromPageTop;\n\n  // Calculate X offset\n  const offsetX = editorRect.left;\n  const editorTop = editorRect.top;\n  const editorBottom = editorRect.bottom;\n  const editorWidth = editorRect.width;\n\n  // Check whether mouse is over any editor block. If not, handle it\n  if (insertBeforeFirstBlock) {\n    return {\n      left: `${offsetX}px`,\n      top: `${editorTop}px`,\n      width: `${editorWidth}px`,\n      depth: -1,\n    };\n  } else if (insertAfterLastBlock) {\n    // Get depth of the last block\n    const lastBlockKey = getLastBlockKey(contentState);\n    const depth = getBlockDepthFromBlockKey(lastBlockKey, contentState);\n\n    // Return result!\n    return {\n      left: `${offsetX}px`,\n      top: `${editorBottom - remToPx(dragMaskHeight)}px`,\n      width: `${editorWidth}px`,\n      depth: depth,\n    };\n  }\n\n  // Get target block key\n  const target = getBlockElementFromAnyDomEle(\n    getElementAtDropPosition(editorRightFromPageLeft - remToPx(editorLeftPadding), mouseY),\n  );\n  const targetBlockKey = getBlockKeyFromBlockElement(target);\n\n  // Check whether target block is selected. If so, do not show mask.\n  if (selectedBlocks.indexOf(targetBlockKey) !== -1 || targetBlockKey === null) return null;\n\n  // Get size of the cloned object\n  const targetRect = target.getBoundingClientRect();\n  const targetbottom = targetRect.bottom;\n\n  // Get depth of the target block\n  const depth = getBlockDepthFromBlockKey(targetBlockKey, contentState);\n\n  // Create the position and size parameters for the drag mask\n  return {\n    left: `${offsetX}px`,\n    top: `${targetbottom - remToPx(dragMaskHeight)}px`,\n    width: `${editorWidth}px`,\n    depth: depth,\n  };\n};\n","/*************************************************\n * @file BlockDragButton.js\n * @description Block Drag Button.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\n\n/*************************************************\n * Utils & States\n *************************************************/\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { pmsc, setDragShadowPos as _setDragShadowPos } from '../states/editorMisc';\nimport { onDragStart } from '../utils/DraggableBlockUtils';\n\n/*************************************************\n * Main components\n *************************************************/\nconst BlockDargButton = (props) => {\n  // Props\n  const blockKey = props.blockKey;\n  const pageUuid = props.pageUuid;\n  const readOnly = props.readOnly;\n  const topOffset = props.topOffset; // Unit: rem\n  const paddingLeft = props.paddingLeft;\n  const dargShadowId = `geeke-dragShadow-${pageUuid}`;\n\n  // Reducers\n  const dispatch = useDispatch();\n  const editorMiscPage = useSelector((state) => state.editorMisc.pages.get(pageUuid));\n  const editorPage = useSelector((state) => state.editor.cachedPages.get(pageUuid));\n  const mouseOverBlockKey = editorMiscPage.get(pmsc.hover);\n  const editorState = editorPage.get('content');\n  const className =\n    'geeke-draggableWrapper' +\n    (readOnly ? '' : ' geeke-draggableCursor') +\n    (mouseOverBlockKey === blockKey ? '' : ' geeke-invisible');\n\n  // Functions\n  const setDragShadowPos = (newShadowPos) => _setDragShadowPos(dispatch, pageUuid, newShadowPos);\n\n  // Top offset\n  let style = null;\n  if (topOffset) {\n    style = { top: `${topOffset}rem` };\n  }\n\n  return (\n    <div\n      className={className}\n      contentEditable={false}\n      draggable=\"true\"\n      style={{ paddingLeft: `${paddingLeft}px` }}\n      onDragStart={(e) => onDragStart(e, readOnly, dargShadowId, setDragShadowPos, editorState, blockKey)}\n    >\n      <div className=\"geeke-draggableWrapperInner\" style={style}>\n        <DragIndicatorIcon style={{ position: 'relative', right: '0.25rem' }} />\n      </div>\n    </div>\n  );\n};\n\nexport default BlockDargButton;\n","/*************************************************\n * @file BasicBlock.js\n * @description Basic block.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst BasicBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <EditorBlock {...props} />\n    </div>\n  );\n};\n\nexport default BasicBlock;\n","/*************************************************\n * @file BulletListBlock.js\n * @description Blocks in bullet list.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst BulletListBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <div\n        className=\"geeke-bulletListMark noselect\"\n        contentEditable={false}\n        style={{ paddingLeft: `${paddingLeft}px` }}\n      >\n        <div className=\"geeke-bulletListMarkInner\">•</div>\n      </div>\n      <div className=\"geeke-bulletListEditor\">\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default BulletListBlock;\n","/*************************************************\n * @file CheckListBlock.js\n * @description Blocks in check list.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst CheckListBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const handleToggleCheckList = props.blockProps.handleToggleCheckList;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  // Get indent level from block data\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  // Get the number of this list\n  const checkListCheck = blockData.has(blockDataKeys.checkListCheck)\n    ? blockData.get(blockDataKeys.checkListCheck)\n    : false;\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <div className=\"geeke-checkListMark noselect\" contentEditable={false} style={{ paddingLeft: `${paddingLeft}px` }}>\n        <div className=\"geeke-checkListMarkInner\">\n          <Checkbox\n            checked={checkListCheck}\n            onClick={() => handleToggleCheckList(blockKey)}\n            color=\"primary\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n      <div className=\"geeke-checkListEditor\">\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default CheckListBlock;\n","/*************************************************\n * @file CodeBlock.js\n * @description Write codes in Geeke!\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { EditorBlock, EditorState } from 'draft-js';\nimport Select from 'react-select';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Switch from '@material-ui/core/Switch';\nimport { Button, ButtonGroup, Popover } from '@material-ui/core';\n\nimport AceEditor from 'react-ace';\nimport 'ace-builds/webpack-resolver';\n\n// TODO: Are there any better method to import these stuff...?\n// Import ace mode\nimport 'ace-builds/src-min-noconflict/mode-abap';\nimport 'ace-builds/src-min-noconflict/mode-assembly_x86';\nimport 'ace-builds/src-min-noconflict/mode-autohotkey';\nimport 'ace-builds/src-min-noconflict/mode-batchfile';\nimport 'ace-builds/src-min-noconflict/mode-c_cpp';\nimport 'ace-builds/src-min-noconflict/mode-clojure';\nimport 'ace-builds/src-min-noconflict/mode-coffee';\nimport 'ace-builds/src-min-noconflict/mode-csharp';\nimport 'ace-builds/src-min-noconflict/mode-css';\nimport 'ace-builds/src-min-noconflict/mode-dart';\nimport 'ace-builds/src-min-noconflict/mode-diff';\nimport 'ace-builds/src-min-noconflict/mode-dockerfile';\nimport 'ace-builds/src-min-noconflict/mode-elixir';\nimport 'ace-builds/src-min-noconflict/mode-elm';\nimport 'ace-builds/src-min-noconflict/mode-erlang';\nimport 'ace-builds/src-min-noconflict/mode-fortran';\nimport 'ace-builds/src-min-noconflict/mode-fsharp';\nimport 'ace-builds/src-min-noconflict/mode-gherkin';\nimport 'ace-builds/src-min-noconflict/mode-glsl';\nimport 'ace-builds/src-min-noconflict/mode-golang';\nimport 'ace-builds/src-min-noconflict/mode-graphqlschema';\nimport 'ace-builds/src-min-noconflict/mode-groovy';\nimport 'ace-builds/src-min-noconflict/mode-haskell';\nimport 'ace-builds/src-min-noconflict/mode-html';\nimport 'ace-builds/src-min-noconflict/mode-java';\nimport 'ace-builds/src-min-noconflict/mode-javascript';\nimport 'ace-builds/src-min-noconflict/mode-json';\nimport 'ace-builds/src-min-noconflict/mode-kotlin';\nimport 'ace-builds/src-min-noconflict/mode-latex';\nimport 'ace-builds/src-min-noconflict/mode-less';\nimport 'ace-builds/src-min-noconflict/mode-lisp';\nimport 'ace-builds/src-min-noconflict/mode-livescript';\nimport 'ace-builds/src-min-noconflict/mode-lua';\nimport 'ace-builds/src-min-noconflict/mode-makefile';\nimport 'ace-builds/src-min-noconflict/mode-markdown';\nimport 'ace-builds/src-min-noconflict/mode-matlab';\nimport 'ace-builds/src-min-noconflict/mode-nix';\nimport 'ace-builds/src-min-noconflict/mode-objectivec';\nimport 'ace-builds/src-min-noconflict/mode-ocaml';\nimport 'ace-builds/src-min-noconflict/mode-pascal';\nimport 'ace-builds/src-min-noconflict/mode-perl';\nimport 'ace-builds/src-min-noconflict/mode-php';\nimport 'ace-builds/src-min-noconflict/mode-plain_text';\nimport 'ace-builds/src-min-noconflict/mode-powershell';\nimport 'ace-builds/src-min-noconflict/mode-prolog';\nimport 'ace-builds/src-min-noconflict/mode-python';\nimport 'ace-builds/src-min-noconflict/mode-r';\nimport 'ace-builds/src-min-noconflict/mode-ruby';\nimport 'ace-builds/src-min-noconflict/mode-rust';\nimport 'ace-builds/src-min-noconflict/mode-sass';\nimport 'ace-builds/src-min-noconflict/mode-scala';\nimport 'ace-builds/src-min-noconflict/mode-scheme';\nimport 'ace-builds/src-min-noconflict/mode-scss';\nimport 'ace-builds/src-min-noconflict/mode-sh';\nimport 'ace-builds/src-min-noconflict/mode-sql';\nimport 'ace-builds/src-min-noconflict/mode-swift';\nimport 'ace-builds/src-min-noconflict/mode-tcl';\nimport 'ace-builds/src-min-noconflict/mode-typescript';\nimport 'ace-builds/src-min-noconflict/mode-verilog';\nimport 'ace-builds/src-min-noconflict/mode-vhdl';\nimport 'ace-builds/src-min-noconflict/mode-xml';\nimport 'ace-builds/src-min-noconflict/mode-yaml';\n\n// Import ace theme\nimport 'ace-builds/src-min-noconflict/theme-ambiance';\nimport 'ace-builds/src-min-noconflict/theme-merbivore';\nimport 'ace-builds/src-min-noconflict/theme-chaos';\nimport 'ace-builds/src-min-noconflict/theme-merbivore_soft';\nimport 'ace-builds/src-min-noconflict/theme-chrome';\nimport 'ace-builds/src-min-noconflict/theme-mono_industrial';\nimport 'ace-builds/src-min-noconflict/theme-clouds';\nimport 'ace-builds/src-min-noconflict/theme-monokai';\nimport 'ace-builds/src-min-noconflict/theme-clouds_midnight';\nimport 'ace-builds/src-min-noconflict/theme-nord_dark';\nimport 'ace-builds/src-min-noconflict/theme-cobalt';\nimport 'ace-builds/src-min-noconflict/theme-pastel_on_dark';\nimport 'ace-builds/src-min-noconflict/theme-crimson_editor';\nimport 'ace-builds/src-min-noconflict/theme-solarized_dark';\nimport 'ace-builds/src-min-noconflict/theme-dawn';\nimport 'ace-builds/src-min-noconflict/theme-solarized_light';\nimport 'ace-builds/src-min-noconflict/theme-dracula';\nimport 'ace-builds/src-min-noconflict/theme-sqlserver';\nimport 'ace-builds/src-min-noconflict/theme-dreamweaver';\nimport 'ace-builds/src-min-noconflict/theme-terminal';\nimport 'ace-builds/src-min-noconflict/theme-eclipse';\nimport 'ace-builds/src-min-noconflict/theme-textmate';\nimport 'ace-builds/src-min-noconflict/theme-github';\nimport 'ace-builds/src-min-noconflict/theme-tomorrow';\nimport 'ace-builds/src-min-noconflict/theme-gob';\nimport 'ace-builds/src-min-noconflict/theme-tomorrow_night';\nimport 'ace-builds/src-min-noconflict/theme-gruvbox';\nimport 'ace-builds/src-min-noconflict/theme-tomorrow_night_blue';\nimport 'ace-builds/src-min-noconflict/theme-idle_fingers';\nimport 'ace-builds/src-min-noconflict/theme-tomorrow_night_bright';\nimport 'ace-builds/src-min-noconflict/theme-iplastic';\nimport 'ace-builds/src-min-noconflict/theme-tomorrow_night_eighties';\nimport 'ace-builds/src-min-noconflict/theme-katzenmilch';\nimport 'ace-builds/src-min-noconflict/theme-twilight';\nimport 'ace-builds/src-min-noconflict/theme-kr_theme';\nimport 'ace-builds/src-min-noconflict/theme-vibrant_ink';\nimport 'ace-builds/src-min-noconflict/theme-kuroir';\nimport 'ace-builds/src-min-noconflict/theme-xcode';\n\n// Import ace plugins\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { isShowBlock } from '../utils/NumberListUtils';\nimport { handleAceEditor, handleKeyCommand } from '../utils/KeyboardUtils';\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { GeekeMap, getBackgroundColorWithClass, updateBlockData } from '../utils/Misc';\n\nimport { setEditorState } from '../states/editor';\nimport { pmsc, setEditingCode, setEditingMenu, setSpecialFocusFunc } from '../states/editorMisc';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport {\n  blockDataKeys,\n  codeBlockThemeReverseMap,\n  constAceEditorAction,\n  constMoveDirection,\n  editorLeftPadding,\n  indentWidth,\n  languageOptions,\n  languageReverseMap,\n  remToPx,\n  themeOptions,\n} from '../constant';\nimport { Alert } from '@material-ui/lab';\n\n/*************************************************\n * Main components\n *************************************************/\nconst CodeBlock = (props) => {\n  // Props\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const contentState = props.contentState;\n  const selectionState = props.selection;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const pageUuid = props.blockProps.pageUuid;\n  const readOnly = props.blockProps.readOnly;\n  const handleFocusEditor = props.blockProps.handleFocusEditor;\n  const updateSelectionState = props.blockProps.updateSelectionState;\n  const keyCommandDispatcher = props.blockProps.keyCommandDispatcher;\n  const editorState = props.blockProps.editorState;\n\n  // Reducers\n  const dispatch = useDispatch();\n  const aceEditor = useRef(null);\n  const [editorKeyCommand, setEditorKeyCommand] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState('rgba(0,0,0,0)');\n\n  // Register focus function\n  const focusCodeBlock = (moveDirection) => {\n    if (moveDirection === constMoveDirection.up) {\n      aceEditor.current.editor.navigateFileEnd();\n    } else if (moveDirection === constMoveDirection.down) {\n      aceEditor.current.editor.navigateFileStart();\n    } else {\n      console.error(`Unknown move direction: ${moveDirection}`);\n    }\n    // Use timeout to prevent dispatch runs in dispatch because onFocus dispatch something\n    setTimeout(() => aceEditor.current.editor.focus(), 1);\n  };\n  useEffect(() => setSpecialFocusFunc(dispatch, pageUuid, blockKey, focusCodeBlock), []); // eslint-disable-line\n\n  // Focus code block if it is created by converting from other type of block\n  useEffect(() => {\n    if (selectionState.getFocusKey() !== blockKey) return;\n    setTimeout(() => aceEditor.current.editor.focus(), 1);\n  }, []); // eslint-disable-line\n\n  // Variables\n  const codeContent = blockData.has(blockDataKeys.codeContent) ? blockData.get(blockDataKeys.codeContent) : '';\n  let indentLevel = 0;\n  let codeLanguage = 'plain_text';\n  let codeWrapping = false; // TODO: make the default value to user-specieifed.\n  let codeTheme = 'github'; // TODO: make the default value to user-specieifed.\n  let showLineNumber = true;\n  let codeWrapperBorder = '0px';\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n  const focusAceEditor = () => aceEditor.current.editor.focus();\n  const blurAceEditor = () => aceEditor.current.editor.blur();\n  const onBlur = (e) => {\n    aceEditor.current.editor.clearSelection();\n    setEditingCode(dispatch, pageUuid, false);\n  };\n  const onFocus = (e) => {\n    setEditingCode(dispatch, pageUuid, true);\n    updateSelectionState();\n  };\n\n  // Calculate indent level\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  // Get code language\n  if (blockData.has(blockDataKeys.codeLanguage)) {\n    codeLanguage = blockData.get(blockDataKeys.codeLanguage);\n  }\n\n  // Get wrapping status\n  if (blockData.has(blockDataKeys.codeWrapping)) {\n    codeWrapping = blockData.get(blockDataKeys.codeWrapping);\n  }\n\n  // Get code theme\n  if (blockData.has(blockDataKeys.codeTheme)) {\n    codeTheme = blockData.get(blockDataKeys.codeTheme);\n  }\n\n  // Get show line number\n  if (blockData.has(blockDataKeys.codeLineNumber)) {\n    showLineNumber = blockData.get(blockDataKeys.codeLineNumber);\n  }\n\n  // Set border width\n  if (backgroundColor === 'rgb(255, 255, 255)') {\n    // codeWrapperBorder = '#e8e8e8 solid 2px';\n  }\n\n  // Calculate paddingLeft depends on indent level\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  // Function to update blockData of block data\n  const updateCodeBlockData = (blockDataKey, changeType, newValue) => {\n    let newBlockData = new GeekeMap(blockData);\n    newBlockData.set(blockDataKey, newValue);\n    let newContentState = updateBlockData(contentState, blockKey, newBlockData);\n    let newEditorState = EditorState.push(editorState, newContentState, changeType);\n    setEditorState(dispatch, pageUuid, newEditorState);\n  };\n\n  // Function to update content, language, theme, and wrapping status\n  const updateCodeContent = (newValue) => updateCodeBlockData(blockDataKeys.codeContent, 'insert-characters', newValue);\n  const updateCodeLanguage = (language) =>\n    updateCodeBlockData(blockDataKeys.codeLanguage, 'change-block-data', language);\n  const updateCodeTheme = (theme) => updateCodeBlockData(blockDataKeys.codeTheme, 'change-block-data', theme);\n  const updateCodeWrapping = (wrapping) =>\n    updateCodeBlockData(blockDataKeys.codeWrapping, 'change-block-data', wrapping);\n  const updateShowLineNumber = (showLineNumber) =>\n    updateCodeBlockData(blockDataKeys.codeLineNumber, 'change-block-data', showLineNumber);\n\n  // Handle moveCursor\n  // Because moveCursor cannot be updated to Ace Editor when editorState is updated (i.e. using useCallback),\n  // we have to use useEffect to get the latest editorState when editorKeyCommand is updated.\n  const moveCursor = (editorKeyCommand) => setEditorKeyCommand(editorKeyCommand);\n  useEffect(() => {\n    if (!editorKeyCommand) return;\n    setEditorKeyCommand(null);\n    handleKeyCommand(editorState, editorKeyCommand, keyCommandDispatcher, blockKey, {\n      blurAceEditor,\n      handleFocusEditor,\n    });\n  }, [editorKeyCommand, editorState]); // eslint-disable-line\n\n  // Set codeblock background color\n  useEffect(() => {\n    let processedCodeTheme = codeTheme.replace('_', '-');\n    let targetClass = showLineNumber ? `.ace-${processedCodeTheme} .ace_gutter` : `.ace-${processedCodeTheme}`;\n    let newBackgroundColor = getBackgroundColorWithClass(targetClass);\n    if (newBackgroundColor) {\n      setBackgroundColor(newBackgroundColor);\n    }\n  }, [codeTheme, showLineNumber]);\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Compose aceEditor command\n  const aceEditorCommands = [\n    {\n      name: 'moveCursorUp',\n      bindKey: { win: 'up', mac: 'up' },\n      exec: (editor) => handleAceEditor(editor, constAceEditorAction.up, { moveCursor }),\n    },\n    {\n      name: 'moveCursorDown',\n      bindKey: { win: 'down', mac: 'down' },\n      exec: (editor) => handleAceEditor(editor, constAceEditorAction.down, { moveCursor }),\n    },\n    {\n      name: 'moveCursorLeft',\n      bindKey: { win: 'left', mac: 'left' },\n      exec: (editor) => handleAceEditor(editor, constAceEditorAction.left, { moveCursor }),\n    },\n    {\n      name: 'moveCursorRight',\n      bindKey: { win: 'right', mac: 'right' },\n      exec: (editor) => handleAceEditor(editor, constAceEditorAction.right, { moveCursor }),\n    },\n    {\n      name: 'removeBlockType',\n      bindKey: { win: 'backspace', mac: 'backspace' },\n      exec: (editor) =>\n        handleAceEditor(editor, constAceEditorAction.backspace, {\n          moveCursor,\n          onBlur,\n          handleFocusEditor,\n          updateSelectionState,\n        }),\n    },\n  ];\n\n  // Compose aceEditor Props\n  const aceEditorProps = {\n    ref: aceEditor,\n    className: 'geeke-codeEditor',\n    mode: codeLanguage,\n    wrapEnabled: codeWrapping,\n    theme: codeTheme,\n    fontSize: '1rem',\n    onFocus: onFocus,\n    onBlur: onBlur,\n    readOnly: readOnly,\n    placeholder: 'Coding here...',\n    minLines: 1,\n    maxLines: Infinity,\n    width: 'auto',\n    highlightActiveLine: false,\n    name: `${blockKey}-aceEditor`,\n    value: codeContent,\n    onChange: updateCodeContent,\n    showGutter: showLineNumber,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: true,\n    },\n    commands: aceEditorCommands,\n  };\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px`, margin: '1rem 0rem 0rem' }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n        topOffset={-0.1} // TODO: Need to be tuned...\n      />\n\n      <CodeBlockMenuButtons\n        pageUuid={pageUuid}\n        blockKey={blockKey}\n        focusAceEditor={focusAceEditor}\n        codeLanguage={codeLanguage}\n        codeTheme={codeTheme}\n        codeContent={codeContent}\n        codeWrapping={codeWrapping}\n        showLineNumber={showLineNumber}\n        updateCodeLanguage={updateCodeLanguage}\n        updateCodeTheme={updateCodeTheme}\n        updateCodeWrapping={updateCodeWrapping}\n        updateShowLineNumber={updateShowLineNumber}\n      />\n\n      <div className=\"geeke-codeBlockEditor\">\n        <EditorBlock {...props} />\n      </div>\n      <CodeBlockSelection blockKey={blockKey} pageUuid={pageUuid}>\n        <div\n          className=\"geeke-codeEditorWrapper\"\n          style={{ backgroundColor: backgroundColor, border: codeWrapperBorder }}\n          onClick={focusAceEditor} // Need to force focus on mouse click because in some situation, click on the last line cannot focus the AceEditor...\n          contentEditable={false} // Make this block not contenteditable to prevent from modify some DOM by accident...\n        >\n          <AceEditor {...aceEditorProps} />\n        </div>\n      </CodeBlockSelection>\n    </div>\n  );\n};\n\nconst CodeBlockSelection = (props) => {\n  // Props\n  const blockKey = props.blockKey;\n  const pageUuid = props.pageUuid;\n  const children = props.children;\n\n  // Reducers\n  const selectedBlocks = useSelector((state) => state.editorMisc.pages.get(pageUuid).get(pmsc.selectedBlocks));\n\n  // Constants\n  const isSelected = selectedBlocks.has(blockKey);\n  const className = 'geeke-codeBlockSelectionMask' + (isSelected ? ' geeke-codeBlockSelected' : '');\n\n  return <div className={className}>{children}</div>;\n};\n\nconst CodeBlockMenuButtons = (props) => {\n  // Props\n  const pageUuid = props.pageUuid;\n  const blockKey = props.blockKey;\n  const updateCodeLanguage = props.updateCodeLanguage;\n  const updateCodeTheme = props.updateCodeTheme;\n  const updateCodeWrapping = props.updateCodeWrapping;\n  const updateShowLineNumber = props.updateShowLineNumber;\n  const focusAceEditor = props.focusAceEditor;\n  const codeLanguage = props.codeLanguage;\n  const codeTheme = props.codeTheme;\n  const codeContent = props.codeContent;\n  const codeWrapping = props.codeWrapping;\n  const showLineNumber = props.showLineNumber;\n  const languageName = languageReverseMap.has(codeLanguage) ? languageReverseMap.get(codeLanguage) : 'PlainText';\n  const themeName = codeBlockThemeReverseMap.has(codeTheme) ? codeBlockThemeReverseMap.get(codeTheme) : 'GitHub';\n\n  // Reducers\n  const dispatch = useDispatch();\n  const [languageAnchorEl, setLanguageAnchorEl] = useState(null);\n  const [themeAnchorEl, setThemeAnchorEl] = useState(null);\n  const [settingAnchorEl, setSettingAnchorEl] = useState(null);\n  const [showCopyMessage, setShowCopyMessage] = useState(false);\n  const languageMenuOpen = Boolean(languageAnchorEl);\n  const themeMenuOpen = Boolean(themeAnchorEl);\n  const settingmenuOpen = Boolean(settingAnchorEl);\n  const editorMiscPages = useSelector((state) => state.editorMisc.pages);\n  const mouseOverBlockKey = editorMiscPages.get(pageUuid).get(pmsc.hover);\n\n  // handleClickLanguageMenu\n  const handleClickLanguageMenu = (e) => {\n    setLanguageAnchorEl(e.currentTarget);\n    setEditingMenu(dispatch, pageUuid, true);\n  };\n\n  // handleCloseLanguageMenu\n  const handleCloseLanguageMenu = () => {\n    setLanguageAnchorEl(null);\n    setEditingMenu(dispatch, pageUuid, false);\n    setTimeout(() => {\n      focusAceEditor();\n    }, 1);\n  };\n\n  // handleChangeCodeLanguage\n  const handleChangeCodeLanguage = (v) => {\n    if (!v) return;\n    handleCloseLanguageMenu();\n    updateCodeLanguage(v.value);\n  };\n\n  // handleClickThemeMenu\n  const handleClickThemeMenu = (e) => {\n    setThemeAnchorEl(e.currentTarget);\n    setEditingMenu(dispatch, pageUuid, true);\n  };\n\n  // handleCloseThemeMenu\n  const handleCloseThemeMenu = (e) => {\n    setThemeAnchorEl(null);\n    setEditingMenu(dispatch, pageUuid, false);\n    setTimeout(() => {\n      focusAceEditor();\n    }, 1);\n  };\n\n  // handleChangeCodeTheme\n  const handleChangeCodeTheme = (v) => {\n    if (!v) return;\n    handleCloseThemeMenu();\n    updateCodeTheme(v.value);\n  };\n\n  // handleShowCopyMessage\n  const handleShowCopyMessage = () => {\n    setShowCopyMessage(true);\n    setTimeout(() => {\n      focusAceEditor();\n    }, 1);\n  };\n\n  // handleCloseCopyMessage\n  const handleCloseCopyMessage = () => {\n    setShowCopyMessage(false);\n  };\n\n  // handleOpenSettingMenu\n  const handleOpenSettingMenu = (e) => {\n    setSettingAnchorEl(e.currentTarget);\n    setEditingMenu(dispatch, pageUuid, true);\n  };\n\n  // handleCloseSettingMenu\n  const handleCloseSettingMenu = () => {\n    setSettingAnchorEl(null);\n    setEditingMenu(dispatch, pageUuid, false);\n    setTimeout(() => {\n      focusAceEditor();\n    }, 1);\n  };\n\n  // handleToggleCodeWrapping\n  const handleToggleCodeWrapping = () => updateCodeWrapping(!codeWrapping);\n\n  // handleToggleShowLineNumber\n  const handleToggleShowLineNumber = () => updateShowLineNumber(!showLineNumber);\n\n  // Styles...\n  const codeBlockMenuStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      boxShadow: 'unset',\n      fontSize: '1rem',\n    }),\n    control: (provided, state) => ({\n      ...provided,\n      margin: '0.6rem 0.6rem 0rem',\n      height: '1.8rem',\n      minHeight: '1.8rem',\n    }),\n    indicatorsContainer: (provided, state) => ({\n      display: 'none',\n    }),\n    valueContainer: (provided, state) => ({\n      ...provided,\n      top: '-0.15rem',\n      left: '0.1rem',\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      padding: '6px 12px',\n      fontSize: '0.9rem',\n    }),\n  };\n\n  return (\n    <div className=\"geeke-codeEditor-dropdownWrapper\" contentEditable={false}>\n      <div\n        className={\n          'geeke-codeEditor-buttonWrapper' + (mouseOverBlockKey === blockKey ? ' geeke-codeEditor-button-active' : '')\n        }\n      >\n        <ButtonGroup className=\"geeke-codeEditor-buttonGroup\" variant=\"outlined\" size=\"small\">\n          <Button className=\"geeke-codeEditor-button\" onClick={handleClickLanguageMenu}>\n            {languageName} ▾\n          </Button>\n\n          <Button className=\"geeke-codeEditor-button\" onClick={handleClickThemeMenu}>\n            {themeName} ▾\n          </Button>\n\n          <CopyToClipboard text={codeContent}>\n            <Button\n              style={{ textTransform: 'none' }} // I don't know why className not work when using button group...\n              onClick={handleShowCopyMessage}\n            >\n              Copy\n            </Button>\n          </CopyToClipboard>\n\n          <Button onClick={handleOpenSettingMenu}>\n            <MoreHorizIcon />\n          </Button>\n        </ButtonGroup>\n      </div>\n\n      {/* Code Language */}\n      <Popover\n        open={languageMenuOpen}\n        anchorEl={languageAnchorEl}\n        onClose={handleCloseLanguageMenu}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <div className=\"geeke-codeEditor-languageListWrapper\">\n          <Select\n            options={languageOptions}\n            autoFocus={true}\n            menuIsOpen={true}\n            maxMenuHeight={255}\n            styles={codeBlockMenuStyles}\n            placeholder=\"Language\"\n            onChange={handleChangeCodeLanguage}\n          />\n        </div>\n      </Popover>\n\n      {/* Code Themes */}\n      <Popover\n        open={themeMenuOpen}\n        anchorEl={themeAnchorEl}\n        onClose={handleCloseThemeMenu}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <div className=\"geeke-codeEditor-themeListWrapper\">\n          <Select\n            options={themeOptions}\n            autoFocus={true}\n            menuIsOpen={true}\n            maxMenuHeight={255}\n            styles={codeBlockMenuStyles}\n            placeholder=\"Theme\"\n            onChange={handleChangeCodeTheme}\n          />\n        </div>\n      </Popover>\n\n      {/* Setting Menu */}\n      <Popover\n        open={settingmenuOpen}\n        anchorEl={settingAnchorEl}\n        onClose={handleCloseSettingMenu}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <div className=\"geeke-codeblockSettingMenu noselect\">\n          <table>\n            <tbody>\n              <tr>\n                <td>Wrapping</td>\n                <td>\n                  <Switch size=\"small\" checked={codeWrapping} onChange={handleToggleCodeWrapping} color=\"primary\" />\n                </td>\n              </tr>\n              <tr>\n                <td>Line Number</td>\n                <td>\n                  <Switch size=\"small\" checked={showLineNumber} onChange={handleToggleShowLineNumber} color=\"primary\" />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Popover>\n\n      {/* Copy Message */}\n      <Snackbar\n        open={showCopyMessage}\n        autoHideDuration={5000}\n        onClose={handleCloseCopyMessage}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseCopyMessage} severity=\"success\">\n          Copied!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CodeBlock;\n","/*************************************************\n * @file HeadingBlock.js\n * @description Heading block.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useState } from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\nimport { getFirstBlockKey, newBlockId } from '../utils/Misc';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, editorTopPadding, headingType, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst HeadingBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n  const [headingId, setHeadingId] = useState(newBlockId()); // eslint-disable-line\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  const isFirstBlock = blockKey === getFirstBlockKey(contentState);\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  // Set font style\n  let style = 'h1';\n  let paddingTop = 2 + editorTopPadding; // Unit: rem\n  let topOffset = 3; // Unit: rem\n  let blockHeadingType = blockData.get(blockDataKeys.headingType);\n  switch (blockHeadingType) {\n    case headingType.h1:\n      style = 'h1';\n      paddingTop = (isFirstBlock ? 0 : 2) + editorTopPadding;\n      topOffset = isFirstBlock ? 0.7 : 3;\n      break;\n\n    case headingType.h2:\n      style = 'h2';\n      paddingTop = (isFirstBlock ? 0 : 1.7) + editorTopPadding;\n      topOffset = isFirstBlock ? 0.5 : 2.3;\n      break;\n\n    case headingType.h3:\n      style = 'h3';\n      paddingTop = (isFirstBlock ? 0 : 1.5) + editorTopPadding;\n      topOffset = isFirstBlock ? 0.4 : 1.9;\n      break;\n\n    case headingType.h4:\n      style = 'h4';\n      paddingTop = (isFirstBlock ? 0 : 1.3) + editorTopPadding;\n      topOffset = isFirstBlock ? 0.2 : 1.5;\n      break;\n\n    case headingType.h5:\n      style = 'h5';\n      paddingTop = (isFirstBlock ? 0 : 1.2) + editorTopPadding;\n      topOffset = isFirstBlock ? 0 : 1.2;\n      break;\n\n    case headingType.h6:\n      style = 'h6';\n      paddingTop = (isFirstBlock ? 0 : 1.2) + editorTopPadding;\n      topOffset = isFirstBlock ? -0.1 : 1.1;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px`, paddingTop: `${paddingTop}rem` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n        topOffset={topOffset}\n      />\n      <div id={headingId} className={'geeke-headingEditor ' + style} headingtype={blockHeadingType}>\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default HeadingBlock;\n","/*************************************************\n * @file NumberedListBlock.js\n * @description Blocks in numbered list.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst NumberedListBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  // Get indent level from block data\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  // Get the number of this list\n  const numberListOrder = blockData.has(blockDataKeys.numberListOrder)\n    ? blockData.get(blockDataKeys.numberListOrder)\n    : 1;\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <div\n        className=\"geeke-numberedListMark noselect\"\n        contentEditable={false}\n        style={{ paddingLeft: `${paddingLeft}px` }}\n      >\n        <div className=\"geeke-numberedListMarkInner\">{numberListOrder}.</div>\n      </div>\n      <div className=\"geeke-numberedListEditor\">\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default NumberedListBlock;\n","/*************************************************\n * @file BlockDragMask.js\n * @description Show the mask over a block when a block drag over this block.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\n\n/*************************************************\n * Utils & States\n *************************************************/\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { indentWidth, editorLeftPadding, dragMaskIndentInterval, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst BlockDragMask = (props) => {\n  // Props\n  const dragMaskParam = props.dragMaskParam;\n\n  // Check whether dragMaskParam is not empty\n  if (dragMaskParam === null) return null;\n\n  // Extract dragMaskParam\n  const left = dragMaskParam.left;\n  const top = dragMaskParam.top;\n  const depth = dragMaskParam.depth;\n  const width = parseInt(dragMaskParam.width);\n\n  // Generate masks\n  let nopacity = 0.8;\n  let leftPadding = (\n    <div key=\"-1\" className=\"geeke-inlineBlock\" style={{ paddingLeft: `${editorLeftPadding}rem` }}></div>\n  );\n  let masks = [leftPadding];\n  for (let i = 0; i <= depth; i++) {\n    let mask = (\n      <div\n        key={`${i}`}\n        className=\"geeke-dragMask\"\n        style={{\n          left: `${editorLeftPadding + indentWidth * i}rem`,\n          backgroundColor: `rgba(2, 141, 255, ${1 - nopacity})`,\n          width: `${indentWidth - dragMaskIndentInterval}rem`,\n        }}\n      ></div>\n    );\n    nopacity *= nopacity;\n    masks.push(mask);\n  }\n  let lastMaskLeft = remToPx(editorLeftPadding + indentWidth * (depth + 1));\n  masks.push(\n    <div\n      key=\"-2\"\n      className=\"geeke-dragMaskRight\"\n      style={{\n        left: `${lastMaskLeft}px`,\n        width: `${width - lastMaskLeft - remToPx(editorLeftPadding)}px`,\n        backgroundColor: `rgba(2, 141, 255, ${1 - nopacity})`,\n      }}\n    ></div>,\n  );\n\n  return (\n    <div className=\"geeke-blockDragMask\" style={{ left: left, top: top }}>\n      {masks}\n    </div>\n  );\n};\n\nexport default BlockDragMask;\n","/*************************************************\n * @file PageDragShadow.js\n * @description Show a clone of the dragged block.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport throttle from 'lodash/throttle';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onDragEnd as _onDragEnd, createDragMaskParam } from '../utils/DraggableBlockUtils';\nimport {\n  setDragShadowPos as _setDragShadowPos,\n  setDraggingBlock as _setDraggingBlock,\n  pmsc,\n} from '../states/editorMisc';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDragMask from './BlockDragMask';\n\n/*************************************************\n * Constants\n *************************************************/\n\n/*************************************************\n * Main components\n *************************************************/\nconst PageDragShadow = (props) => {\n  // Props\n  const pageUuid = props.pageUuid;\n  const elementId = props.elementId;\n  const updateEditor = props.updateEditor;\n  const editorState = props.editorState;\n  const focusEditor = props.focusEditor;\n\n  // States & Reducers\n  const initShadowPos = [window.innerWidth * 2, window.innerHeight * 2];\n  const dispatch = useDispatch();\n  const [mousePosition, setMousePosition] = useState(initShadowPos);\n  const [dragMaskParam, setDragMaskParam] = useState(null);\n  const dragShadowPos = useSelector((state) => state.editorMisc.pages.get(pageUuid).get(pmsc.dragShadowPos));\n\n  // Constants\n  const enable = dragShadowPos && dragShadowPos.length >= 2 && dragShadowPos[2];\n\n  // Functions\n  const createDragMask = throttle(\n    (x, y) => {\n      // Set dragMaskParam. This function may consume lots of CPU resource, so use throttle to reduce CPU usage.\n      // To set the dragMaskParam, createDragMaskParam needs the information about selected blocks, which is the fifth elemnt in dragShadowPos.\n      let selectedBlocks = dragShadowPos.length >= 5 ? dragShadowPos[4] : [];\n      setDragMaskParam(createDragMaskParam(x, y, pageUuid, editorState, selectedBlocks));\n    },\n    100,\n    { trailing: false },\n  );\n  const getMousePosition = (e) => {\n    // Set current mouse position.\n    setMousePosition([e.clientX, e.clientY]);\n    // Create/update drag mask.\n    createDragMask(e.clientX, e.clientY);\n  };\n  const onDragEnd = (e) => {\n    // Get drop handler, which is the fourth element in dragShadowPos, and by default is handleDrop_normalBlock\n    const handleDrop = dragShadowPos && dragShadowPos.length >= 3 && dragShadowPos[3] ? dragShadowPos[3] : null;\n    const setDraggingBlock = (dragging) => _setDraggingBlock(dispatch, pageUuid, dragging);\n    const setDragShadowPos = (newPos) => _setDragShadowPos(dispatch, pageUuid, newPos);\n\n    // If drop handler exists, update editor\n    if (handleDrop) updateEditor(handleDrop(e, pageUuid, editorState));\n\n    // Remove mouse position handler\n    _onDragEnd(e, setDraggingBlock, elementId, setDragShadowPos);\n\n    // Automatically focus editor\n    focusEditor();\n  };\n\n  useEffect(() => {\n    if (enable) {\n      // If drag action has started, set callback function\n      document.onmousemove = getMousePosition;\n      document.onmouseup = onDragEnd;\n    } else {\n      // If action has stopped, clear callback function, and prevent creaetDragMask to run once again.\n      createDragMask.cancel();\n      document.onmousemove = null;\n      document.onmouseup = null;\n\n      // Move shadow block out of screen to avoid shadow blink when dragging starts.\n      setMousePosition(initShadowPos);\n\n      // This can make dragMask disappear.\n      setDragMaskParam(null);\n    }\n  }, [enable]); // eslint-disable-line\n\n  return (\n    <>\n      <BlockDragMask dragMaskParam={dragMaskParam} />\n      <div\n        id={elementId}\n        className=\"geeke-pageDragShadow\"\n        style={{ left: mousePosition[0] - dragShadowPos[0], top: mousePosition[1] - dragShadowPos[1] }}\n      ></div>\n    </>\n  );\n};\n\nexport default PageDragShadow;\n","/*************************************************\n * @file PageTitle.js\n * @description Page title.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\nimport { ContentState, Editor, EditorState, getDefaultKeyBinding } from 'draft-js';\n\n/*************************************************\n * Utils & States\n *************************************************/\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Main components\n *************************************************/\nconst PageTitle = (props) => {\n  // Props\n  const uuid = props.uuid;\n\n  // States & Reducers\n  // const dispatch = useDispatch();\n  // const state = useSelector(state => state.editor);\n  const [title, setTitle] = useState(EditorState.createWithContent(ContentState.createFromText('Readme'))); // Create ContentState wit pure text: https://stackoverflow.com/a/35885589/6868122\n\n  // Constants\n  // const draggedBlockInfo = state.draggedBlock[uuid];\n\n  const titleStyleFn = (contentBlock) => {\n    return 'Geeke-Page-Title';\n  };\n\n  const mapKeyToEditorCommand = (e) => {\n    const preventDefault = null; // Prevent default action.\n    switch (e.keyCode) {\n      case 13: // Enter\n        return preventDefault;\n      default:\n        break;\n    }\n    return getDefaultKeyBinding(e);\n  };\n\n  // Update page title to reducer\n  // useEffect(() => {\n  //   // Get plain text: https://stackoverflow.com/a/56275995/6868122\n  //   updatePageTitle(dispatch, uuid, title.getCurrentContent().getPlainText('\\u0001'));\n  // }, [title]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div\n      geeke-id={uuid}\n      geeke-type=\"Title\"\n      depth={-1}\n      style={{\n        padding: '1.2rem 3rem 1.6rem',\n      }}\n\n      // onDragEnter={e => draggableOnDragEnter(e, dispatch, uuid, uuid, draggedBlockInfo, false)}\n      // onDrop={e => draggableOnDrop(e, dispatch, uuid, draggedBlockInfo, state)}\n    >\n      <Editor\n        className=\"Geeke-Page-Title\"\n        editorState={title}\n        onChange={setTitle}\n        blockStyleFn={titleStyleFn}\n        keyBindingFn={mapKeyToEditorCommand}\n      />\n    </div>\n  );\n};\n\nexport default PageTitle;\n","/*************************************************\n * @file QuoteBlock.js\n * @description Blocks in quote block.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst QuoteBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <div className=\"geeke-quoteBar noselect\" contentEditable={false} style={{ paddingLeft: `${paddingLeft}px` }}>\n        <div className=\"geeke-quoteBarInner\"></div>\n      </div>\n      <div className=\"geeke-quoteEditor\">\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteBlock;\n","/*************************************************\n * @file ToggleListBlock.js\n * @description Blocks in check list.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React from 'react';\nimport { EditorBlock } from 'draft-js';\nimport { useDispatch } from 'react-redux';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { onMouseOver as _onMouseOver, onMouseLeave as _onMouseLeave } from '../utils/DraggableBlockUtils';\nimport { isShowBlock } from '../utils/NumberListUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BlockDargButton from './BlcokDragButton';\n\n/*************************************************\n * Constant\n *************************************************/\nimport { blockDataKeys, editorLeftPadding, indentWidth, remToPx } from '../constant';\n\n/*************************************************\n * Main components\n *************************************************/\nconst ToggleListBlock = (props) => {\n  // Props\n  const pageUuid = props.blockProps.pageUuid;\n  const blockData = props.block.getData();\n  const blockKey = props.block.key;\n  const readOnly = props.blockProps.readOnly;\n  const handleBlockDargStart = props.blockProps.handleBlockDargStart;\n  const handleToggleToggleList = props.blockProps.handleToggleToggleList;\n  const contentState = props.contentState;\n\n  // Reducers\n  const dispatch = useDispatch();\n\n  // Check whether to show this block\n  if (!isShowBlock(contentState, blockKey)) {\n    return null;\n  }\n\n  // Variables\n  let indentLevel = 0;\n\n  // Functions\n  const onMouseOver = (e) => _onMouseOver(e, dispatch, pageUuid, blockKey);\n  const onMouseLeave = (e) => _onMouseLeave(e, dispatch, pageUuid);\n\n  // Get indent level from block data\n  if (blockData.has(blockDataKeys.indentLevel)) {\n    indentLevel = blockData.get(blockDataKeys.indentLevel);\n  }\n\n  const paddingLeft = remToPx(indentWidth * indentLevel);\n\n  // Get the number of this list\n  const toggleListToggle = blockData.has(blockDataKeys.toggleListToggle)\n    ? blockData.get(blockDataKeys.toggleListToggle)\n    : false;\n\n  return (\n    <div\n      className=\"geeke-blockWrapper\"\n      style={{ paddingLeft: `${paddingLeft + remToPx(editorLeftPadding)}px` }}\n      geeke=\"true\"\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n    >\n      <BlockDargButton\n        blockKey={blockKey}\n        pageUuid={pageUuid}\n        readOnly={readOnly}\n        handleBlockDargStart={handleBlockDargStart}\n        paddingLeft={paddingLeft}\n      />\n      <div\n        className=\"geeke-toggleListMark noselect\"\n        contentEditable={false}\n        style={{ paddingLeft: `${paddingLeft}px` }}\n      >\n        <div className=\"geeke-toggleListMarkInner\" onClick={() => handleToggleToggleList(blockKey)}>\n          <div className={'geeke-toggleListImg' + (toggleListToggle ? ' geeke-toggleListImgOpen' : '')}>\n            <ChevronRightIcon />\n          </div>\n        </div>\n      </div>\n      <div className=\"geeke-toggleListEditor\">\n        <EditorBlock {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default ToggleListBlock;\n","/*************************************************\n * @file PopupMenu.js\n * @description Popup menu for Geeke.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Fade, MenuItem, MenuList, Paper, Popper, Tooltip } from '@material-ui/core';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatColorTextIcon from '@material-ui/icons/FormatColorText';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport FontDownloadOutlinedIcon from '@material-ui/icons/FontDownloadOutlined';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport FunctionsIcon from '@material-ui/icons/Functions';\nimport CodeIcon from '@material-ui/icons/Code';\nimport LinkIcon from '@material-ui/icons/Link';\nimport throttle from 'lodash/throttle';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport {\n  showEditorSelection,\n  toggleBold as _toggleBold,\n  toggleItalic as _toggleItalic,\n  toggleStrikethrough as _toggleStrikethrough,\n  toggleUnderline as _toggleUnderline,\n  toggleCode as _toggleCode,\n  setTextColor as _setTextColor,\n  setBackgroundColor as _setBackgroundColor,\n} from '../states/editor';\nimport { pmsc, setLinkRange, setMathRange } from '../states/editorMisc';\nimport { remToPx } from '../constant';\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { styleMap } from '../constant';\n\nconst textColorList = [\n  { text: 'Default', color: 'inherit' },\n  { text: 'Red', color: styleMap.TEXTRED.color },\n  { text: 'Orange', color: styleMap.TEXTORANGE.color },\n  { text: 'Yellow', color: styleMap.TEXTYELLOW.color },\n  { text: 'Green', color: styleMap.TEXTGREEN.color },\n  { text: 'Blue', color: styleMap.TEXTBLUE.color },\n  { text: 'Purple', color: styleMap.TEXTPURPLE.color },\n  { text: 'Pink', color: styleMap.TEXTPINK.color },\n  { text: 'Brown', color: styleMap.TEXTBROWN.color },\n  { text: 'Gray', color: styleMap.TEXTGRAY.color },\n];\n\nconst isOSX = navigator.userAgent.indexOf('Mac') !== -1;\n\nconst menuDescription = {\n  Bold: isOSX ? '⌘ + B' : 'Ctrl + B',\n  Italic: isOSX ? '⌘ + I' : 'Ctrl + I',\n  Underline: isOSX ? '⌘ + U' : 'Ctrl + U',\n  Strikethrough: isOSX ? '⌘ + Shift + S' : 'Ctrl + Shift + S',\n  Code: isOSX ? '⌘ + E' : 'Ctrl + E',\n  Link: isOSX ? '⌘ + K' : 'Ctrl + K',\n  Math: isOSX ? '⌘ + Shift + E' : 'Ctrl + Shift + E',\n};\n\n/*************************************************\n * Main components\n *************************************************/\nconst PopupMenu = (props) => {\n  // Props\n  const pageUuid = props.pageUuid;\n  const handleFocusEditor = props.handleFocusEditor;\n\n  // Reducers\n  const dispatch = useDispatch();\n  const menuRange = useSelector((state) => state.editorMisc.pages.get(pageUuid).get(pmsc.popupMenuRange));\n  const triggerEsc = useSelector((state) => state.editorMisc.pages.get(pageUuid).get(pmsc.triggerEsc));\n  const editorState = useSelector((state) => state.editor.cachedPages.get(pageUuid).get('content'));\n  const [menuPosition, setMenuPosition] = useState({ top: -1000, left: 0 });\n  const [showMenu, setShowMenu] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [textColorEl, setTextColorEl] = useState(null);\n  const [backgroundColorEl, setBackgroundColorEl] = useState(null);\n\n  // Constants\n  const anchorId = `geeke-popupMenuAnchor-${pageUuid}`;\n\n  // Set anchor\n  useEffect(() => {\n    setAnchorEl(document.getElementById(anchorId));\n  }, []); // eslint-disable-line\n\n  // Update position info\n  const throttle_updateMenuPosition = throttle(\n    (menuRange) => {\n      if (!menuRange) {\n        setShowMenu(false);\n        setTextColorEl(null);\n        setBackgroundColorEl(null);\n        setTimeout(() => {\n          setMenuPosition({ top: -1000, left: 0 });\n        }, 200);\n      } else {\n        const editorDom = document.getElementById(`geeke-editor-${pageUuid}`);\n        const editorRect = editorDom.getBoundingClientRect();\n        const selectionRect = menuRange.getBoundingClientRect();\n        const menuHeight = remToPx(0.5);\n        const newPosition = {\n          top: editorDom.offsetTop + (selectionRect.top - editorRect.top) - menuHeight,\n          left: editorDom.offsetLeft + (selectionRect.left - editorRect.left) + selectionRect.width / 2,\n        };\n        setMenuPosition(newPosition);\n        setShowMenu(true);\n      }\n    },\n    100,\n    { trailing: true },\n  );\n  useEffect(() => {\n    throttle_updateMenuPosition(menuRange);\n  }, [menuRange]); // eslint-disable-line\n\n  // Update anchorEl depends on esc\n  useEffect(() => {\n    if (textColorEl || backgroundColorEl) {\n      setTextColorEl(null);\n      setBackgroundColorEl(null);\n    } else if (showMenu) {\n      setShowMenu(false);\n    }\n  }, [triggerEsc]); // eslint-disable-line\n\n  // Functions\n  const keepFocusOnEditor = (e) => {\n    e.stopPropagation();\n    handleFocusEditor();\n    setTimeout(() => {\n      showEditorSelection(dispatch, pageUuid);\n    });\n  };\n\n  const toggleStyle = (toggleFunc) => {\n    toggleFunc(dispatch, pageUuid);\n    if (textColorEl) {\n      setTextColorEl(null);\n    }\n    if (backgroundColorEl) {\n      setBackgroundColorEl(null);\n    }\n  };\n  const toggleBold = (e) => toggleStyle(_toggleBold);\n  const toggleItalic = (e) => toggleStyle(_toggleItalic);\n  const toggleUnderline = (e) => toggleStyle(_toggleUnderline);\n  const toggleStrikethrough = (e) => toggleStyle(_toggleStrikethrough);\n  const toggleCode = (e) => toggleStyle(_toggleCode);\n  const toggleLink = (e) => toggleStyle(() => setLinkRange(dispatch, pageUuid, editorState.getSelection()));\n  const toggleMath = (e) => toggleStyle(() => setMathRange(dispatch, pageUuid, editorState.getSelection()));\n\n  const toggleFontColorMenu = (e) => {\n    // Hide other menus\n    setBackgroundColorEl(null);\n\n    // Toggle fontColorMenu\n    if (!textColorEl) {\n      setTextColorEl(e.currentTarget);\n    } else {\n      setTextColorEl(null);\n    }\n  };\n\n  const toggleBackgroundColorMenu = (e) => {\n    // Hide other menus\n    setTextColorEl(null);\n\n    // Toggle backgroundColorMenu\n    if (!backgroundColorEl) {\n      setBackgroundColorEl(e.currentTarget);\n    } else {\n      setBackgroundColorEl(null);\n    }\n  };\n\n  const setTextColor = (color) => _setTextColor(dispatch, pageUuid, color);\n  const setBackgroundColor = (color) => _setBackgroundColor(dispatch, pageUuid, color);\n\n  // Component\n  const seperator = <div className=\"geeke-popupMenuSeperator\"></div>;\n  const dropdownIcon = <span className=\"geeke-popupMenu-dropdownIcon\">▾</span>;\n\n  const fontColorButtons = (\n    <Popper\n      open={Boolean(textColorEl)}\n      transition\n      anchorEl={textColorEl}\n      placement=\"bottom-start\"\n      onClose={() => setTextColorEl(null)}\n    >\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={200}>\n          <Paper elevation={3}>\n            <MenuList>\n              {textColorList.map((context, i) => {\n                return (\n                  <MenuItem key={i} dense onMouseDown={keepFocusOnEditor} onClick={() => setTextColor(context.text)}>\n                    <FontDownloadOutlinedIcon\n                      fontSize=\"small\"\n                      style={{ color: context.color, paddingRight: '0.5rem' }}\n                    />\n                    {context.text}\n                  </MenuItem>\n                );\n              })}\n            </MenuList>\n          </Paper>\n        </Fade>\n      )}\n    </Popper>\n  );\n\n  const backgroundColorButtons = (\n    <Popper\n      open={Boolean(backgroundColorEl)}\n      transition\n      anchorEl={backgroundColorEl}\n      placement=\"bottom-start\"\n      onClose={() => setBackgroundColorEl(null)}\n    >\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={200}>\n          <Paper elevation={3}>\n            <MenuList>\n              {textColorList.map((context, i) => {\n                return (\n                  <MenuItem\n                    key={i}\n                    dense\n                    onMouseDown={keepFocusOnEditor}\n                    onClick={() => setBackgroundColor(context.text)}\n                  >\n                    <FontDownloadIcon fontSize=\"small\" style={{ color: context.color, paddingRight: '0.5rem' }} />\n                    {context.text}\n                  </MenuItem>\n                );\n              })}\n            </MenuList>\n          </Paper>\n        </Fade>\n      )}\n    </Popper>\n  );\n\n  const buttonDescription_Bold = <ButtonDescription style=\"Bold\" />; // eslint-disable-line\n  const buttonDescription_Italic = <ButtonDescription style=\"Italic\" />; // eslint-disable-line\n  const buttonDescription_Underline = <ButtonDescription style=\"Underline\" />; // eslint-disable-line\n  const buttonDescription_Strikethrough = <ButtonDescription style=\"Strikethrough\" />; // eslint-disable-line\n  const buttonDescription_Code = <ButtonDescription style=\"Code\" />; // eslint-disable-line\n  const buttonDescription_Link = <ButtonDescription style=\"Link\" />; // eslint-disable-line\n  const buttonDescription_Math = <ButtonDescription style=\"Math\" />; // eslint-disable-line\n\n  const menuItems = (\n    <Paper elevation={3}>\n      <Tooltip title={buttonDescription_Bold} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleBold}>\n          <FormatBoldIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Tooltip title={buttonDescription_Italic} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleItalic}>\n          <FormatItalicIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Tooltip title={buttonDescription_Underline} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleUnderline}>\n          <FormatUnderlinedIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Tooltip title={buttonDescription_Strikethrough} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleStrikethrough}>\n          <StrikethroughSIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n\n      {seperator}\n\n      <Tooltip title={buttonDescription_Code} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleCode}>\n          <CodeIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Tooltip title={buttonDescription_Link} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleLink}>\n          <LinkIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n      <Tooltip title={buttonDescription_Math} placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleMath}>\n          <FunctionsIcon fontSize=\"small\" />\n        </Button>\n      </Tooltip>\n\n      {seperator}\n\n      <Tooltip title=\"Text Color\" placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleFontColorMenu}>\n          <FormatColorTextIcon fontSize=\"small\" /> {dropdownIcon}\n        </Button>\n      </Tooltip>\n\n      {seperator}\n\n      <Tooltip title=\"Highlight Color\" placement=\"top\" arrow>\n        <Button className=\"geeke-popupMenuButton\" onMouseDown={keepFocusOnEditor} onClick={toggleBackgroundColorMenu}>\n          <BorderColorIcon fontSize=\"small\" /> {dropdownIcon}\n        </Button>\n      </Tooltip>\n    </Paper>\n  );\n\n  return (\n    <>\n      <div id={anchorId} className=\"geeke-popupMenu-Anchor\" style={menuPosition}></div>\n      <Popper open={showMenu} transition anchorEl={anchorEl} placement=\"top-start\">\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            {menuItems}\n          </Fade>\n        )}\n      </Popper>\n      {fontColorButtons}\n      {backgroundColorButtons}\n    </>\n  );\n};\n\nconst ButtonDescription = (props) => {\n  const style = props.style;\n  return (\n    <div className=\"geeke-popupMenu-ButtonDescription\">\n      <div>\n        <b>{style}</b>\n      </div>\n      <div>{menuDescription[style]}</div>\n    </div>\n  );\n};\n\nexport default PopupMenu;\n","/*************************************************\n * @file InlineStyleLinkEditor.js\n * @description Editor for inline link.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Grid, Menu, Snackbar, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Alert } from '@material-ui/lab';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { checkOverlap, getCaretRange } from '../utils/Misc';\nimport { pmsc, setLinkRange, setPreLinkRange } from '../states/editorMisc';\nimport { showEditorSelection, toggleLink } from '../states/editor';\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { remToPx } from '../constant';\n\nconst CustonButton = withStyles({\n  root: {\n    position: 'relative',\n    left: '-0.5rem',\n  },\n})(Button);\n\n/*************************************************\n * Main components\n *************************************************/\nconst InlineStyleLinkEditor = (props) => {\n  // Props\n  const handleFocusEditor = props.handleFocusEditor;\n\n  // State & Reducer\n  const dispatch = useDispatch();\n  const [anchorPosition, setAnchorPosition] = useState({ top: -1000, left: 0 });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectionState, setSelectionState] = useState(null);\n  const [linkContent, setLinkContent] = useState('');\n  const [showCorssLineWarning, setShowCrossLineWarning] = useState(false);\n  const [showEmptySelectionWarning, setShowEmptySelectionWarning] = useState(false);\n  const pageUuid = useSelector((state) => state.editorMisc.focusEditor);\n  const linkRange = useSelector((state) => state.editorMisc.pages?.get(pageUuid)?.get(pmsc.linkRange));\n  const preLinkRange = useSelector((state) => state.editorMisc.pages?.get(pageUuid)?.get(pmsc.preLinkRange));\n  const editorState = useSelector((state) => state.editor.cachedPages.get(pageUuid)?.get('content'));\n\n  // Constants\n  const anchorId = `geeke-inlineStyleLinkEditor-${pageUuid}`;\n  const initAnchorPosition = { top: -1000, left: 0 };\n\n  const clearState = () => {\n    setAnchorPosition(initAnchorPosition);\n    setLinkRange(dispatch, pageUuid, null);\n    setLinkContent('');\n  };\n\n  const closeEditor = (e, curSelectionState = null) => {\n    e?.stopPropagation();\n    clearState();\n    setTimeout(\n      () => showEditorSelection(dispatch, pageUuid, curSelectionState ? curSelectionState : selectionState),\n      0,\n    );\n  };\n\n  // Open link editor when linkRange is updated\n  useEffect(() => {\n    if (linkRange) {\n      // Get position\n      const editorDom = document.getElementById(`geeke-editor-${pageUuid}`);\n      const editorRect = editorDom.getBoundingClientRect();\n      const selectionRect = getCaretRange().getBoundingClientRect();\n      const menuHeight = remToPx(1.5);\n      const newPosition = {\n        top: editorDom.offsetTop + (selectionRect.top - editorRect.top) + menuHeight,\n        left: editorDom.offsetLeft + (selectionRect.left - editorRect.left) + selectionRect.width / 2,\n      };\n\n      // Get entity data\n      // Rule: if there are any link entity in the selection range,\n      const selectionState = editorState.getSelection();\n      const contentState = editorState.getCurrentContent();\n\n      // Check whether the selected text are all in the same block\n      if (selectionState.getAnchorKey() !== selectionState.getFocusKey()) {\n        closeEditor(null, selectionState);\n        setShowCrossLineWarning(true);\n        return;\n      }\n\n      const anchorBlock = contentState.getBlockForKey(selectionState.getAnchorKey());\n      let firstLinkEntityKey = null;\n      let curEntityKey = null;\n      anchorBlock.findEntityRanges(\n        (value) => {\n          curEntityKey = value.entity;\n          return true;\n        },\n        (start, end) => {\n          if (!curEntityKey) return;\n          const curEntity = contentState.getEntity(curEntityKey);\n          const startOffset = selectionState.getStartOffset();\n          const endOffset = selectionState.getEndOffset();\n          if (checkOverlap(start, end, startOffset, endOffset, false)) {\n            if (curEntity.type === 'LINK' && !firstLinkEntityKey) {\n              firstLinkEntityKey = curEntityKey;\n            }\n          }\n        },\n      );\n\n      let url = '';\n      if (firstLinkEntityKey) {\n        const entity = contentState.getEntity(firstLinkEntityKey);\n        url = entity.data.url;\n      }\n\n      // If url is empty and the selection is collapsed, it is not possible to create link\n      if (url.length === 0 && selectionState.isCollapsed()) {\n        closeEditor(null, selectionState);\n        setShowEmptySelectionWarning(true);\n        return;\n      }\n\n      setLinkContent(url);\n      setAnchorPosition(newPosition);\n      setSelectionState(linkRange);\n    } else if (anchorPosition.left !== 0) {\n      clearState();\n    }\n  }, [linkRange]); // eslint-disable-line\n\n  // When preLinkRange is set, focus editor, force selection, then trigger linkRange\n  useEffect(() => {\n    if (!preLinkRange) return;\n\n    const selectionState = preLinkRange;\n    setPreLinkRange(dispatch, pageUuid, null);\n    handleFocusEditor();\n    setTimeout(() => {\n      showEditorSelection(dispatch, pageUuid, selectionState);\n      setLinkRange(dispatch, pageUuid, selectionState);\n    }, 0);\n  }, [preLinkRange]); // eslint-disable-line\n\n  // Set anchor position\n  useEffect(() => {\n    setAnchorEl(document.getElementById(anchorId));\n  }, []); // eslint-disable-line\n\n  // Handle keypress\n  const onKeyDown = (e) => {\n    const key = e.nativeEvent.keyCode;\n    switch (key) {\n      case 13: // Enter\n        toggleLink(dispatch, pageUuid, linkContent);\n        closeEditor(e);\n        break;\n      case 27: // Esc\n        closeEditor(e);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle done\n  const handleDone = (e) => {\n    e.nativeEvent.keyCode = 13;\n    onKeyDown(e);\n  };\n\n  return (\n    <>\n      <div className=\"geeke-inlineStyleLinkEditor-Anchor\" id={anchorId} style={anchorPosition}></div>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorPosition.left)}\n        onClose={(e) => closeEditor(e)}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onKeyDown={onKeyDown}\n      >\n        <div>\n          <Grid container>\n            <label style={{ fontSize: '0px' }}>å</label>\n            <TextField\n              label=\"Edit Link\"\n              placeholder=\"Paste link here\"\n              size=\"small\"\n              variant=\"outlined\"\n              style={{ margin: '0rem 1rem' }}\n              value={linkContent}\n              onChange={(e) => setLinkContent(e.target.value)}\n              autoFocus\n            />\n            <CustonButton variant=\"contained\" color=\"primary\" onClick={handleDone}>\n              Done\n            </CustonButton>\n          </Grid>\n        </div>\n      </Menu>\n\n      {/* Collapsed Message */}\n      <Snackbar\n        open={showEmptySelectionWarning}\n        autoHideDuration={5000}\n        onClose={(e) => setShowEmptySelectionWarning(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={(e) => setShowEmptySelectionWarning(false)} severity=\"warning\">\n          Unable to create link without selecting any text!\n        </Alert>\n      </Snackbar>\n\n      {/* Cross Line Warning */}\n      <Snackbar\n        open={showCorssLineWarning}\n        autoHideDuration={5000}\n        onClose={(e) => setShowCrossLineWarning(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={(e) => setShowCrossLineWarning(false)} severity=\"warning\">\n          Unable to create link when selection across multiple lines!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default InlineStyleLinkEditor;\n","/*************************************************\n * @file InlineStyleMathEditor.js\n * @description Editor for inline math.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectionState } from 'draft-js';\nimport { Button, Grid, Menu, MenuList, Snackbar, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Alert } from '@material-ui/lab';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { checkOverlap, getCaretRange } from '../utils/Misc';\nimport {\n  pmsc,\n  setEditingMath,\n  setMathRange,\n  setSelectionState as setEditorMiscSelectionState,\n} from '../states/editorMisc';\nimport { createEmptyInlineMath, removeInlineMath, showEditorSelection, updateInlineMathData } from '../states/editor';\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\nimport { remToPx } from '../constant';\n\nconst CustonButton = withStyles({\n  root: {\n    position: 'relative',\n    left: '-0.5rem',\n    fontWeight: 'unset',\n    marginRight: '0.5rem',\n  },\n})(Button);\nconst CustomMenuList = withStyles({\n  root: {\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n})(MenuList);\n\n/*************************************************\n * Main components\n *************************************************/\nconst InlineStyleMathEditor = (props) => {\n  // Props\n  const handleFocusEditor = props.handleFocusEditor;\n\n  // State & Reducer\n  const dispatch = useDispatch();\n  const [anchorPosition, setAnchorPosition] = useState({ top: -1000, left: 0 });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectionState, setSelectionState] = useState(null);\n  const [mathContent, setMathContent] = useState('');\n  const [lastMathContent, setLastMathContent] = useState('');\n  const [showCorssLineWarning, setShowCrossLineWarning] = useState(false);\n  const [mathEntityKey, setMathEntityKey] = useState(null);\n  const [curBlockKey, setCurBlockKey] = useState(null);\n  const [focusEditor, setFocusEditor] = useState(false);\n  const [firstSelection, setFirstSelection] = useState(true);\n  const pageUuid = useSelector((state) => state.editorMisc.focusEditor);\n  const mathRange = useSelector((state) => state.editorMisc.pages?.get(pageUuid)?.get(pmsc.mathRange));\n  const editorState = useSelector((state) => state.editor.cachedPages.get(pageUuid)?.get('content'));\n\n  // Constants\n  const anchorId = `geeke-inlineStyleMathEditor-${pageUuid}`;\n  const initAnchorPosition = { top: -1000, left: 0 };\n\n  // Clear editor state\n  const clearState = () => {\n    setAnchorPosition(initAnchorPosition);\n    setMathRange(dispatch, pageUuid, null);\n    setMathContent('');\n    setFocusEditor(false);\n    setCurBlockKey(null);\n    setFirstSelection(true);\n  };\n\n  // Handle close editor\n  const closeEditor = (e, curSelectionState = null) => {\n    e?.stopPropagation();\n    // Lock editor to prevent rendering cursor\n    setEditingMath(dispatch, pageUuid, true);\n    setTimeout(() => {\n      clearState();\n      // Unlock editor to enable editing\n      setEditingMath(dispatch, pageUuid, false);\n      setEditorMiscSelectionState(dispatch, curSelectionState ? curSelectionState : selectionState);\n      setTimeout(\n        () => showEditorSelection(dispatch, pageUuid, curSelectionState ? curSelectionState : selectionState),\n        0,\n      );\n    });\n  };\n\n  // Open math editor when mathRange is updated\n  useEffect(() => {\n    if (mathRange) {\n      // Get position\n      const editorDom = document.getElementById(`geeke-editor-${pageUuid}`);\n      const editorRect = editorDom.getBoundingClientRect();\n      const selectionRect = getCaretRange().getBoundingClientRect();\n      const menuHeight = remToPx(1.5);\n      const newPosition = {\n        top: editorDom.offsetTop + (selectionRect.top - editorRect.top) + menuHeight,\n        left: editorDom.offsetLeft + (selectionRect.left - editorRect.left) + selectionRect.width / 2,\n      };\n\n      // Get entity data\n      // Rule: if there are any math entity in the selection range,\n      const selectionState = editorState.getSelection();\n      const contentState = editorState.getCurrentContent();\n\n      // Check whether the selected text are all in the same block\n      if (selectionState.getAnchorKey() !== selectionState.getFocusKey()) {\n        closeEditor(null, selectionState);\n        setShowCrossLineWarning(true);\n        return;\n      }\n\n      const anchorBlock = contentState.getBlockForKey(selectionState.getAnchorKey());\n      let firstMathEntityKey = null;\n      let curEntityKey = null;\n      anchorBlock.findEntityRanges(\n        (value) => {\n          curEntityKey = value.entity;\n          return true;\n        },\n        (start, end) => {\n          if (!curEntityKey) return;\n          const curEntity = contentState.getEntity(curEntityKey);\n          const startOffset = selectionState.getStartOffset();\n          const endOffset = selectionState.getEndOffset();\n          if (checkOverlap(start, end, startOffset, endOffset, false)) {\n            if (curEntity.type === 'MATH' && !firstMathEntityKey) {\n              firstMathEntityKey = curEntityKey;\n            }\n          }\n        },\n      );\n\n      let newMathEntityKey = null;\n\n      // If firstMathEntityKey is not null, then get the math content\n      let math = '';\n      if (firstMathEntityKey) {\n        const entity = contentState.getEntity(firstMathEntityKey);\n        math = entity.data.math;\n        newMathEntityKey = firstMathEntityKey;\n      }\n\n      // If math is empty, we have to create a character that represent the inline style.\n      if (math.length === 0) {\n        if (selectionState.isCollapsed()) {\n          // If math is empty string, create a default one\n          createEmptyInlineMath(dispatch, pageUuid, null, null, (entityKey) => {\n            newMathEntityKey = entityKey;\n          });\n        } else {\n          let curBlock = contentState.getBlockForKey(selectionState.getFocusKey());\n          math = curBlock.getText().slice(selectionState.getStartOffset(), selectionState.getEndOffset());\n          createEmptyInlineMath(dispatch, pageUuid, math, null, (entityKey) => {\n            newMathEntityKey = entityKey;\n          });\n        }\n\n        setLastMathContent('');\n      } else {\n        setLastMathContent(math);\n      }\n\n      setMathEntityKey(newMathEntityKey);\n      setCurBlockKey(selectionState.getFocusKey());\n      setMathContent(math);\n      setAnchorPosition(newPosition);\n      setSelectionState(mathRange);\n      setFocusEditor(true);\n    } else if (anchorPosition.left !== 0) {\n      clearState();\n    }\n  }, [mathRange]); // eslint-disable-line\n\n  // Set anchor position\n  useEffect(() => {\n    setAnchorEl(document.getElementById(anchorId));\n  }, []); // eslint-disable-line\n\n  // revertEntity\n  const revertEntity = () => {\n    if (lastMathContent === '') {\n      // This entity is newly created. Remove the entity to revert the change.\n      removeInlineMath(dispatch, pageUuid, curBlockKey, mathEntityKey);\n    } else {\n      // This entity is not newly created. Set original math content to revert the change.\n      updateInlineMathData(dispatch, pageUuid, mathEntityKey, lastMathContent);\n    }\n  };\n\n  // Handle arrow key function, and close editor when caret is at the end/beginning of the editor\n  const handleKeyDown = (e) => {\n    const key = e.nativeEvent.keyCode;\n    if (key <= 40 && key >= 37) {\n      e.stopPropagation();\n\n      let selectionStart = e.target.selectionStart;\n      let selectionEnd = e.target.selectionEnd;\n      if (selectionStart === selectionEnd) {\n        if ((key === 37 || key === 38) && selectionStart === 0) {\n          // Move to left\n          return closeEditor(\n            e,\n            new SelectionState({\n              anchorKey: selectionState.getStartKey(),\n              anchorOffset: selectionState.getStartOffset(),\n              focusKey: selectionState.getStartKey(),\n              focusOffset: selectionState.getStartOffset(),\n            }),\n          );\n        } else if ((key === 39 || key === 40) && selectionStart === e.target.value.length) {\n          // Move to right\n          return closeEditor(\n            e,\n            new SelectionState({\n              anchorKey: selectionState.getStartKey(),\n              anchorOffset: selectionState.getEndOffset(),\n              focusKey: selectionState.getStartKey(),\n              focusOffset: selectionState.getEndOffset(),\n            }),\n          );\n        }\n      }\n    } else {\n      switch (key) {\n        case 13: // Enter\n          if (mathContent === '') {\n            removeInlineMath(dispatch, pageUuid, curBlockKey, mathEntityKey, true);\n            closeEditor(\n              e,\n              new SelectionState({\n                anchorKey: selectionState.getStartKey(),\n                anchorOffset: selectionState.getStartOffset(),\n                focusKey: selectionState.getStartKey(),\n                focusOffset: selectionState.getStartOffset(),\n              }),\n            );\n          } else {\n            closeEditor(e);\n          }\n          break;\n        case 27: // Esc\n          // Remove entity\n          revertEntity();\n          closeEditor(e);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // handleUpdateMathContent\n  const handleUpdateMathContent = (e) => {\n    setMathContent(e.target.value);\n    setFocusEditor(true);\n    updateInlineMathData(dispatch, pageUuid, mathEntityKey, e.target.value);\n\n    // Used for triggerring draftjs re-render\n    if (focusEditor) handleFocusEditor();\n  };\n\n  // handleDone\n  const handleDone = (e) => {\n    e.nativeEvent.keyCode = 13;\n    handleKeyDown(e);\n  };\n\n  // handle Textfield Focus\n  const handleFocus = (e) => {\n    // Only select all the text in the first focus\n    if (!firstSelection) return;\n\n    e.preventDefault();\n    e.target.focus();\n    e.target.setSelectionRange(0, e.target.value.length);\n\n    // To render the Tex in the draft editor, we have to focus editor and jump back immediately.\n    // As a result, onFocus function will be invoked at this moment.\n    // To make sure that the text will not be selected, we have to create a flag called firstSelection\n    // and set it to false after handling selection.\n    setFirstSelection(false);\n  };\n\n  return (\n    <>\n      <div className=\"geeke-inlineStyleMathEditor-Anchor\" id={anchorId} style={anchorPosition}></div>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorPosition.left)}\n        onClose={(e) => {\n          revertEntity();\n          setFocusEditor(false);\n          closeEditor(e);\n        }}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <CustomMenuList>\n          <Grid container>\n            <label style={{ fontSize: '0px' }}>å</label>\n            <TextField\n              label=\"Edit Math Equation\"\n              placeholder={'1+e^{i\\\\pi}=0'}\n              size=\"small\"\n              variant=\"outlined\"\n              style={{ margin: '0rem 1rem' }}\n              value={mathContent}\n              onChange={handleUpdateMathContent}\n              onKeyDown={handleKeyDown}\n              inputRef={(input) => input && focusEditor && input.focus()}\n              inputProps={{ onFocus: handleFocus }}\n              autoFocus\n            />\n            <CustonButton variant=\"contained\" color=\"primary\" onClick={handleDone}>\n              Done\n            </CustonButton>\n          </Grid>\n        </CustomMenuList>\n      </Menu>\n\n      {/* Cross Line Warning */}\n      <Snackbar\n        open={showCorssLineWarning}\n        autoHideDuration={5000}\n        onClose={(e) => setShowCrossLineWarning(false)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={(e) => setShowCrossLineWarning(false)} severity=\"warning\">\n          Unable to create inline math when selection across multiple lines!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default InlineStyleMathEditor;\n","/*************************************************\n * @file InlineStyleMath.js\n * @description Inline style for Math.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport debounce from 'lodash/debounce';\nimport { useSelector } from 'react-redux';\nimport { constBlockType, remToPx } from '../constant';\n\n/*************************************************\n * Utils & States\n *************************************************/\n\n/*************************************************\n * Import Components\n *************************************************/\n\n/*************************************************\n * Constant\n *************************************************/\n// NOTE: adjust **topOffset** when the top padding is adjusted...\nconst topOffset = 2 * remToPx(2);\n\nconst PageOutlineBox = withStyles({\n  root: {\n    marginLeft: '0px',\n    paddingLeft: '0px',\n  },\n})(Box);\nconst PageOutlineTooltip = withStyles({\n  tooltipPlacementTop: {\n    margin: '6px 0px',\n  },\n})(Tooltip);\n\n/*************************************************\n * Main components\n *************************************************/\nconst PageOutline = (props) => {\n  // Props\n  const pageUuid = props.pageUuid;\n\n  // Constants\n  const editorId = `geeke-editor-${pageUuid}`;\n\n  // States & Reducers\n  const editorState = useSelector((state) => state.editor.cachedPages.get(pageUuid)?.get('content'));\n  const [focusHeading, setFocusHeading] = useState(null);\n  const [hovering, setHovering] = useState(false);\n  const [showToc, setShowToc] = useState(false);\n\n  // Register function to onscroll\n  const handleScrollEnd = debounce(() => {\n    // const curY = window.scrollY + topOffset;\n    const curY = topOffset;\n\n    const closestBsearchIdx = (blocks) => {\n      // Find the element that is less then target but closest to the target\n      let start = 0;\n      let end = blocks.length;\n      let middle = -1;\n      let lastStart = start;\n      let lastEnd = end;\n\n      while (start < end) {\n        middle = Math.floor((start + end) / 2);\n        let offsetTop = blocks[middle].getBoundingClientRect().top;\n\n        if (offsetTop === curY) {\n          lastStart = -1;\n          return middle;\n        } else if (offsetTop < curY) {\n          start = middle;\n        } else {\n          end = middle;\n        }\n\n        if (lastStart === start && lastEnd === end) break;\n\n        lastStart = start;\n        lastEnd = end;\n      }\n\n      if (lastStart >= 0) {\n        if (blocks[lastEnd].getBoundingClientRect().top < curY) return lastEnd;\n        else return lastStart;\n      } else {\n        return middle;\n      }\n    };\n\n    const editorDom = document.getElementById(editorId);\n    const blocks = editorDom.children[0].children[0].children[0].children[0].children;\n    if (!blocks || blocks.length === 0) {\n      console.error('Known issue! Unable to find block!');\n      return;\n    }\n\n    // Find blocks that at top\n    const targetBlockIdx = closestBsearchIdx(blocks);\n\n    // Iterate back to find the heading block and its blockId\n    if (!editorState) {\n      console.error('EditorState is undefined!!!!!');\n      return;\n    }\n    const contentState = editorState.getCurrentContent();\n    let curIdx = targetBlockIdx;\n\n    while (curIdx >= 0) {\n      const curBlockKey = blocks[curIdx].getAttribute('data-offset-key').split('-')[0];\n      if (!curBlockKey) {\n        console.error('Unable to find block key from DOM');\n        return;\n      }\n      const curBlock = contentState.getBlockForKey(curBlockKey);\n      if (curBlock.getType() === constBlockType.heading) break;\n      curIdx--;\n    }\n\n    // If curIdx >= 0, it means that this block is a heading block\n    if (curIdx < 0) return;\n    const blockId = blocks[curIdx]?.children[0]?.children[1]?.id;\n    if (!blockId) console.error('Unable to find ID of the heading block!');\n    setFocusHeading(blockId);\n  }, 200);\n\n  useEffect(() => {\n    // For hot reloading\n    // But if function handleScrollEnd is changed, this method does not work...\n    window.removeEventListener('scroll', handleScrollEnd);\n\n    window.addEventListener('scroll', handleScrollEnd);\n  }, []); // eslint-disable-line\n\n  // Handle cursor movement\n  const handleMouseEnter = () => {\n    setHovering(true);\n    setShowToc(true);\n  };\n  const handleMouseLeave = () => {\n    setHovering(false);\n    setTimeout(() => {\n      setShowToc(false);\n    }, 100);\n  };\n\n  // Find all heading block\n  const editorDom = document.getElementById(editorId);\n  const headings = editorDom?.querySelectorAll('.geeke-headingEditor');\n  if (!headings) return null;\n\n  // Compose TOC\n  let toc = [];\n  let previousHeadingLevel = 0;\n  for (let i = 0; i < headings.length; i++) {\n    let heading = headings[i];\n    let headingType = heading.getAttribute('headingtype');\n    let headingId = heading.id;\n    if (!headingType) continue;\n    if (!headingId) continue;\n\n    let headingLevel = Math.min(previousHeadingLevel + 1, parseInt(headingType.slice(1)));\n    let headingContent = heading.textContent;\n    let focus = headingId === focusHeading || (!focusHeading && i === 0);\n\n    previousHeadingLevel = headingLevel;\n    toc.push(\n      <PageOutlineList\n        key={i}\n        content={headingContent}\n        level={headingLevel}\n        headingId={headingId}\n        focus={focus}\n        hovering={hovering}\n        showToc={showToc}\n      />,\n    );\n  }\n\n  // Render the result\n  return (\n    <div className=\"geeke-pageOutline-wrapper\" style={{ left: 0 }}>\n      <PageOutlineBox display=\"flex\" alignItems=\"center\" p={1} m={1} sx={{ height: '100%' }}>\n        <Box>\n          <div style={{ maxWidth: 150, position: 'relative' }} onMouseLeave={handleMouseLeave}>\n            <div className=\"geeke-pageOutline-inbox\" onMouseEnter={handleMouseEnter}></div>\n            {toc}\n          </div>\n        </Box>\n      </PageOutlineBox>\n    </div>\n  );\n};\n\nconst PageOutlineList = (props) => {\n  const tocItem = (\n    <PageOutlineTooltip title={props.content} enterDelay={500} placement=\"top-start\">\n      <a href={`#${props.headingId}`}>{props.content}</a>\n    </PageOutlineTooltip>\n  );\n\n  return (\n    <>\n      <div\n        className={'geeke-pageOutline-item' + (props.hovering ? '' : ' geeke-pageOutline-itemHidden')}\n        style={{\n          marginLeft: `${(props.level - 1) * 0.8}rem`,\n          color: props.focus ? '#1976d2' : 'unset',\n          fontWeight: props.focus ? 'bold' : 'inherit',\n          background: 'white',\n          boxShadow: '0px 0px 0.5rem 0.5rem white'\n        }}\n      >\n        {props.showToc ? tocItem : 'i'}\n      </div>\n      <div\n        className={'geeke-pageOutline-line' + (props.hovering ? ' geeke-pageOutline-lineHidden' : '')}\n        style={{\n          width: remToPx(0.5) + remToPx(2) * Math.pow(0.6, props.level - 1),\n          borderBottom: '3px solid ' + (props.focus ? '#1976d2' : 'rgba(65, 65, 65, 0.5)'),\n        }}\n      ></div>\n    </>\n  );\n};\n\nexport default PageOutline;\n","/*************************************************\n * @file Page.js\n * @description Page component. There are two children\n * components: PageTitle and Editor. The later one is\n * from draft-js.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useRef } from 'react';\nimport throttle from 'lodash/throttle';\nimport debounce from 'lodash/debounce';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Editor, convertToRaw } from 'draft-js';\nimport { Button } from '@material-ui/core';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { toggleCheckList } from '../utils/CheckListUtils';\nimport { toggleToggleList } from '../utils/ToggleListUtils';\nimport {\n  mapKeyToEditorCommand as _mapKeyToEditorCommand,\n  handleKeyCommand as _handleKeyCommand,\n  handleReturn as _handleReturn,\n  defaultKeyboardHandlingConfig,\n} from '../utils/KeyboardUtils';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport BasicBlock from './BasicBlock';\nimport BulletListBlock from './BulletListBlock';\nimport CheckListBlock from './CheckListBlock';\nimport CodeBlock from './CodeBlock';\nimport HeadingBlock from './HeadingBlock';\nimport NumberedListBlock from './NumberedListBlock';\nimport PageDragShadow from './PageDragShadow';\nimport PageTitle from './PageTitle';\nimport QuoteBlock from './QuoteBlock';\nimport ToggleListBlock from './ToggleListBlock';\nimport PopupMenu from './PopupMenu';\nimport InlineStyleLinkEditor from './InlineStyleLinkEditor';\nimport InlineStyleMathEditor from './InlineStyleMathEditor';\n\n/*************************************************\n * Constants\n *************************************************/\nimport { getCaretRange, setSelectionStateByKey } from '../utils/Misc';\nimport { setEditorState, toggleStyle } from '../states/editor';\nimport { constBlockType, styleMap } from '../constant';\nimport {\n  focusSpecialBlock,\n  pmsc,\n  setFocusBlockKey,\n  setFocusEditorUuid,\n  setLinkRange,\n  setMathRange,\n  setMoveDirection,\n  setPopupMenuRange,\n  setSelectedBlocks,\n  setSelectionState,\n  triggerEsc,\n} from '../states/editorMisc';\nimport PageOutline from './PageOutline';\n\n/*************************************************\n * Main components\n *************************************************/\nconst Page = (props) => {\n  // Props\n  const uuid = props.dataId;\n\n  // Status & Reducers\n  const dispatch = useDispatch();\n  const editorState = useSelector((state) => state.editor.cachedPages.get(uuid).get('content'));\n  const readOnly = useSelector((state) => state.editor.cachedPages.get(uuid).get('readOnly'));\n  const editingCode = useSelector((state) => state.editorMisc.pages.get(uuid).get(pmsc.editingCode));\n  const editingMenu = useSelector((state) => state.editorMisc.pages.get(uuid).get(pmsc.editingMenu));\n  const selectedBlocks = useSelector((state) => state.editorMisc.pages.get(uuid).get(pmsc.selectedBlocks));\n  const editingMath = useSelector((state) => state.editorMisc.pages.get(uuid).get(pmsc.editingMath));\n  const editingLink = Boolean(useSelector((state) => state.editorMisc.pages.get(uuid).get(pmsc.linkRange)));\n  const editor = useRef(null);\n\n  // Constants\n  const dargShadowId = `geeke-dragShadow-${uuid}`;\n  const commandConfig = {\n    ...defaultKeyboardHandlingConfig,\n  };\n\n  // Find selected blocks\n  const findSelectedBlocks = throttle(\n    (editorState) => {\n      // This function may consume lots of CPU resource, so use throttle to reduce CPU usage. (10Hz)\n      setSelectedBlocks(dispatch, uuid, editorState);\n    },\n    100,\n    { trailing: false },\n  );\n\n  const isSelectedBlock = (blockKey) => {\n    return selectedBlocks.has(blockKey);\n  };\n\n  // Show popup menu\n  const checkSelectionState = debounce(() => {\n    setPopupMenuRange(dispatch, uuid, getCaretRange());\n  }, 100);\n\n  // onChange\n  const updateEditor = (editorState) => {\n    // Check selection range. If not collapsed, show popup menu\n    const selectionState = editorState.getSelection();\n    findSelectedBlocks(editorState);\n    if (selectionState.isCollapsed()) {\n      setPopupMenuRange(dispatch, uuid, null);\n    } else {\n      checkSelectionState(editorState);\n    }\n\n    // If not readonly, update editorState\n    if (!readOnly) {\n      setEditorState(dispatch, uuid, editorState);\n      setSelectionState(dispatch, selectionState);\n    }\n  };\n  const updateEditorButIgnoreReadOnly = (editorState) => setEditorState(dispatch, uuid, editorState);\n\n  // handleToggleCheckList\n  const handleToggleCheckList = (blockKey) => {\n    updateEditor(toggleCheckList(editorState, blockKey));\n    // Automatically focus editor (focus will lose because of click on non-editable component)\n    setTimeout(() => editor.current.focus(), 1);\n  };\n\n  // handleToggleToggleList\n  const handleToggleToggleList = (blockKey) => {\n    updateEditor(toggleToggleList(editorState, blockKey));\n    // Automatically focus editor (focus will lose because of click on non-editable component)\n    setTimeout(() => editor.current.focus(), 1);\n  };\n\n  // handleFocusEditor\n  const handleFocusEditor = () => editor.current.focus();\n\n  // keyBindingFn\n  const mapKeyToEditorCommand = (e) => {\n    if (!readOnly) return _mapKeyToEditorCommand(e, commandConfig, dispatch, editorState, uuid);\n    return 'not-handled';\n  };\n\n  // handleKeyCommand\n  const keyCommandDispatcher = {\n    setEditorState: updateEditor,\n    setFocusBlockKey: (focusBlockKey) => setFocusBlockKey(dispatch, uuid, focusBlockKey),\n    setMoveDirection: (moveDirection) => setMoveDirection(dispatch, uuid, moveDirection),\n    focusSpecialBlock: (blockKey, moveDirection) => focusSpecialBlock(dispatch, uuid, blockKey, moveDirection),\n    handleFocusEditor,\n    toggleInlineStyle: (style) => toggleStyle(dispatch, uuid, style),\n    triggerEsc: () => triggerEsc(dispatch, uuid),\n    setLinkRange: (selectionState) => setLinkRange(dispatch, uuid, selectionState),\n    setMathRange: (selectionState) => setMathRange(dispatch, uuid, selectionState),\n  };\n  const handleKeyCommand = (command, editorState, blockKey) =>\n    _handleKeyCommand(editorState, command, keyCommandDispatcher, blockKey);\n\n  // handleReturn\n  const handleReturn = (e, editorState) =>\n    _handleReturn(e, editorState, {\n      setEditorState: updateEditor,\n    });\n\n  // blockRendererFn\n  const defaultBlockProps = {\n    pageUuid: uuid,\n    readOnly,\n  };\n  const blockDecorator = (contentBlock) => {\n    const blockType = contentBlock.getType();\n    switch (blockType) {\n      case constBlockType.bulletList:\n        return {\n          component: BulletListBlock,\n          props: defaultBlockProps,\n        };\n\n      case constBlockType.numberList:\n        return {\n          component: NumberedListBlock,\n          props: defaultBlockProps,\n        };\n\n      case constBlockType.checkList:\n        return {\n          component: CheckListBlock,\n          props: { ...defaultBlockProps, handleToggleCheckList },\n        };\n\n      case constBlockType.toggleList:\n        return {\n          component: ToggleListBlock,\n          props: { ...defaultBlockProps, handleToggleToggleList },\n        };\n\n      case constBlockType.quote:\n        return {\n          component: QuoteBlock,\n          props: defaultBlockProps,\n        };\n\n      case constBlockType.heading:\n        return {\n          component: HeadingBlock,\n          props: defaultBlockProps,\n        };\n\n      case constBlockType.code:\n        return {\n          component: CodeBlock,\n          props: {\n            ...defaultBlockProps,\n            editorState,\n            isSelectedBlock,\n            handleFocusEditor,\n            keyCommandDispatcher,\n            updateSelectionState: (blockKey) => updateEditor(setSelectionStateByKey(editorState, blockKey)),\n          },\n        };\n\n      default:\n        return {\n          component: BasicBlock,\n          props: defaultBlockProps,\n        };\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle uuid={uuid} />\n      <div id={`geeke-editor-${uuid}`}>\n        <Editor\n          ref={editor}\n          editorState={editorState}\n          onChange={updateEditor}\n          keyBindingFn={mapKeyToEditorCommand}\n          handleKeyCommand={handleKeyCommand}\n          handleReturn={handleReturn}\n          blockRendererFn={blockDecorator}\n          spellCheck={true}\n          readOnly={readOnly || editingCode || editingMenu || editingLink || editingMath}\n          customStyleMap={styleMap}\n          onFocus={() => setFocusEditorUuid(dispatch, uuid)}\n          // placeholder={'Write something here...'}\n        />\n        <PopupMenu pageUuid={uuid} handleFocusEditor={handleFocusEditor} />\n        <InlineStyleLinkEditor handleFocusEditor={handleFocusEditor} />\n        <InlineStyleMathEditor handleFocusEditor={handleFocusEditor} />\n\n        <PageOutline pageUuid={uuid} />\n      </div>\n\n      <PageDragShadow\n        pageUuid={uuid}\n        elementId={dargShadowId}\n        editorState={editorState}\n        updateEditor={updateEditorButIgnoreReadOnly}\n        focusEditor={handleFocusEditor}\n      />\n\n      {/* TODO: focus editor when click this padding block */}\n      <div className=\"geeke-pageBottom\"></div>\n\n      {/* For debug only */}\n      <Button\n        variant=\"outlined\"\n        onClick={(e) => {\n          copyTextToClipboard(JSON.stringify(convertToRaw(editorState.getCurrentContent())));\n        }}\n      >\n        Copy content\n      </Button>\n    </div>\n  );\n};\n\nexport default Page;\n\n// For debug only\n// Copied from https://stackoverflow.com/a/30810322/6868122\nfunction copyTextToClipboard(text) {\n  var textArea = document.createElement('textarea');\n\n  //\n  // *** This styling is an extra step which is likely not required. ***\n  //\n  // Why is it here? To ensure:\n  // 1. the element is able to have focus and selection.\n  // 2. if the element was to flash render it has minimal visual impact.\n  // 3. less flakyness with selection and copying which **might** occur if\n  //    the textarea element is not visible.\n  //\n  // The likelihood is the element won't even render, not even a\n  // flash, so some of these are just precautions. However in\n  // Internet Explorer the element is visible whilst the popup\n  // box asking the user for permission for the web page to\n  // copy to the clipboard.\n  //\n\n  // Place in the top-left corner of screen regardless of scroll position.\n  textArea.style.position = 'fixed';\n  textArea.style.top = 0;\n  textArea.style.left = 0;\n\n  // Ensure it has a small width and height. Setting to 1px / 1em\n  // doesn't work as this gives a negative w/h on some browsers.\n  textArea.style.width = '2em';\n  textArea.style.height = '2em';\n\n  // We don't need padding, reducing the size if it does flash render.\n  textArea.style.padding = 0;\n\n  // Clean up any borders.\n  textArea.style.border = 'none';\n  textArea.style.outline = 'none';\n  textArea.style.boxShadow = 'none';\n\n  // Avoid flash of the white box if rendered for any reason.\n  textArea.style.background = 'transparent';\n\n  text = text.replace(/\\\\/g, '\\\\\\\\');\n  textArea.value = text;\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Copying text command was ' + msg);\n  } catch (err) {\n    console.log('Oops, unable to copy');\n  }\n\n  document.body.removeChild(textArea);\n}\n","/**\n * @file CheckListUtils.js\n * @description Utilities for handling toggle events of check list.\n * Keyword: \"/// Start\"\n */\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { EditorState, SelectionState } from 'draft-js';\nimport { GeekeMap, updateBlockData } from './Misc';\n\n/*************************************************\n * CONST\n *************************************************/\nimport { blockDataKeys } from '../constant';\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\nexport const toggleCheckList = (editorState, blockKey) => {\n  let newEditorState = editorState;\n  let newContentState = newEditorState.getCurrentContent();\n  let selectionState = editorState.getSelection();\n  let focusBlockKey = selectionState.getFocusKey();\n  let newSelectionState = new SelectionState({\n    focusKey: blockKey,\n    focusOffset: 0,\n    anchorKey: blockKey,\n    anchorOffset: 0,\n  });\n\n  // Get block data\n  let curBlock = newContentState.getBlockForKey(blockKey);\n  let curBlockData = curBlock.getData();\n  let checked = curBlockData.get(blockDataKeys.checkListCheck);\n\n  // Set new check data\n  let newBlockData = new GeekeMap(curBlockData);\n  newBlockData.set(blockDataKeys.checkListCheck, checked ? false : true);\n\n  // Merge new block data\n  newContentState = updateBlockData(newContentState, null, newBlockData, newSelectionState);\n\n  // Push state\n  newEditorState = EditorState.push(newEditorState, newContentState, 'toggle-check-list');\n  if (focusBlockKey !== blockKey) {\n    newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n  }\n\n  return newEditorState;\n};\n","/**\n * @file CheckListUtils.js\n * @description Utilities for handling toggle events of check list.\n * Keyword: \"/// Start\"\n */\n\n/*************************************************\n * IMPORT\n *************************************************/\nimport { EditorState, SelectionState } from 'draft-js';\nimport { GeekeMap, updateBlockData } from './Misc';\n\n/*************************************************\n * CONST\n *************************************************/\nimport { blockDataKeys } from '../constant';\n\n/*************************************************\n * FUNCTIONS\n *************************************************/\nexport const toggleToggleList = (editorState, blockKey, setNewSelectionState = true) => {\n  let newEditorState = editorState;\n  let newContentState = newEditorState.getCurrentContent();\n  let selectionState = editorState.getSelection();\n  let focusBlockKey = selectionState.getFocusKey();\n  let newSelectionState = new SelectionState({\n    focusKey: blockKey,\n    focusOffset: 0,\n    anchorKey: blockKey,\n    anchorOffset: 0,\n  });\n\n  // Get block data\n  let curBlock = newContentState.getBlockForKey(blockKey);\n  let curBlockData = curBlock.getData();\n  let toggle = curBlockData.get(blockDataKeys.toggleListToggle);\n\n  // Set new check data\n  let newBlockData = new GeekeMap(curBlockData);\n  newBlockData.set(blockDataKeys.toggleListToggle, toggle ? false : true);\n\n  // Merge new block data\n  newContentState = updateBlockData(newContentState, null, newBlockData, newSelectionState);\n\n  // Push state\n  newEditorState = EditorState.push(newEditorState, newContentState, 'toggle-toggle-list');\n  if (setNewSelectionState && focusBlockKey !== blockKey) {\n    newEditorState = EditorState.forceSelection(newEditorState, newSelectionState);\n  }\n\n  return newEditorState;\n};\n","/*************************************************\n * @file Geeke.js\n * @description Framework component of Geeke.\n *************************************************/\n\n/*************************************************\n * React Components\n *************************************************/\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { convertFromRaw, EditorState } from 'draft-js';\nimport { Container } from '@material-ui/core';\n\n/*************************************************\n * Utils & States\n *************************************************/\nimport { initPage as initPageMisc } from '../states/editorMisc';\nimport { initPage, setEditorState } from '../states/editor';\nimport { trimNumberListInWholePage } from '../utils/NumberListUtils';\nimport Dispatcher from '../utils/Dispatcher';\nimport { decorator } from '../utils/Decorator';\n\n/*************************************************\n * Import Components\n *************************************************/\nimport Page from './Page';\n\n/*************************************************\n * Styles\n *************************************************/\nimport '../Geeke.css';\nimport '../../node_modules/katex/dist/katex.css';\n\n/*************************************************\n * Main components\n *************************************************/\n// For debug only\n\n// Normal case\nconst testString = `{\"blocks\":[{\"key\":\"3g302\",\"text\":\"About This Project\",\"type\":\"heading\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"headingType\":\"h1\"}},{\"key\":\"7gm57\",\"text\":\"The goal of this project is to create a Notion-like editor, but open-source. Everyone can host a Geeke server on their machine.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"dbr5l\",\"text\":\"Geeke is still under development. Welcome to contribute code to this project!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"9gqcq\",\"text\":\"Demo\",\"type\":\"heading\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"headingType\":\"h1\"}},{\"key\":\"e2cn7\",\"text\":\"Geeke support most basic functions in Notion.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"6i52r\",\"text\":\"Block Level Examples\",\"type\":\"heading\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"headingType\":\"h2\"}},{\"key\":\"ib9m\",\"text\":\"Type 1. with a space to create a numbered list.\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":5,\"length\":2,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":1}},{\"key\":\"dqhvf\",\"text\":\"Type  * or - with a space to create a bullet list.\",\"type\":\"bullet-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":6,\"length\":1,\"style\":\"CODE\"},{\"offset\":11,\"length\":1,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"9psji\",\"text\":\"Type [] with a space to create a check list.\",\"type\":\"check-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":5,\"length\":2,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"f97ur\",\"text\":\"Press ctrl + enter on Windows/Linux or cmd + enter on macOS to toggle this check list.\",\"type\":\"check-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":6,\"length\":12,\"style\":\"CODE\"},{\"offset\":39,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"9psji\",\"checkListCheck\":true}},{\"key\":\"84rsd\",\"text\":\"Type > with a space to create a toggle list.\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":5,\"length\":1,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"toggleListToggle\":true}},{\"key\":\"2olht\",\"text\":\"This is a secret block :)\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"84rsd\"}},{\"key\":\"6lb63\",\"text\":\"Press ctrl + enter on Windows/Linux or cmd + enter on macOS to toggle this block.\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":6,\"length\":12,\"style\":\"CODE\"},{\"offset\":39,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"84rsd\",\"toggleListToggle\":false}},{\"key\":\"dbhbc\",\"text\":\"Also, Users can type tab to increase indent level and shift + tab to decrease indent level.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":21,\"length\":3,\"style\":\"CODE\"},{\"offset\":54,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"5giol\",\"text\":\"Just like this!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"dbhbc\"}},{\"key\":\"7c8lh\",\"text\":\"If user want to create a heading block, just type # with a space at the start of a line to convert that line into heading block. The number of # represents the level you want to create.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":50,\"length\":1,\"style\":\"CODE\"},{\"offset\":143,\"length\":1,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"3hliv\",\"text\":\"Drag and Drop\",\"type\":\"heading\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"headingType\":\"h3\"}},{\"key\":\"5jr71\",\"text\":\"Each block with a dot icon is draggable. Users can drag these blocks in any order, just like Notion.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"bou36\",\"text\":\"Inline Style Examples\",\"type\":\"heading\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"headingType\":\"h2\"}},{\"key\":\"64fmo\",\"text\":\"Geeke supports lots of inline style.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}},{\"key\":\"coc7j\",\"text\":\"bold (ctrl + B / cmd + B)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":1}},{\"key\":\"a61ub\",\"text\":\"italic (ctrl + I / cmd + I)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":2}},{\"key\":\"8ia36\",\"text\":\"Underline (ctrl + U /  cmd + U)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"UNDERLINE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":3}},{\"key\":\"b7k3u\",\"text\":\"Strikethrough (ctrl + shift + S / cmd + shift + S)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"STRIKETHROUGH\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":4}},{\"key\":\"5m3m8\",\"text\":\"code (ctrl + E / cmd + E)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":5}},{\"key\":\"4e15l\",\"text\":\"Inline math: ¡™¡                              (ctrl + shift + E / cmd + shift + E)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":13,\"length\":32,\"key\":0}],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":6}},{\"key\":\"17e7o\",\"text\":\"Hover on the math equation, there are something surprise!\",\"type\":\"bullet-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":38,\"length\":18,\"style\":\"ITALIC\"},{\"offset\":38,\"length\":18,\"style\":\"UNDERLINE\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"4e15l\"}},{\"key\":\"l6n6\",\"text\":\"Link (ctrl + K / cmd + K)\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":4,\"key\":1}],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":7}},{\"key\":\"c4dk1\",\"text\":\"Hover on the link, there are something surprise!\",\"type\":\"bullet-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":29,\"length\":18,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"l6n6\"}},{\"key\":\"25gih\",\"text\":\"Press alt on Windows or option on macOS to open the link directly.\",\"type\":\"bullet-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"l6n6\"}},{\"key\":\"7lq92\",\"text\":\"Colorful text\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"TEXTRED\"},{\"offset\":1,\"length\":1,\"style\":\"TEXTORANGE\"},{\"offset\":2,\"length\":1,\"style\":\"TEXTYELLOW\"},{\"offset\":3,\"length\":1,\"style\":\"TEXTGREEN\"},{\"offset\":4,\"length\":1,\"style\":\"TEXTBLUE\"},{\"offset\":5,\"length\":1,\"style\":\"TEXTPURPLE\"},{\"offset\":6,\"length\":1,\"style\":\"TEXTPINK\"},{\"offset\":7,\"length\":1,\"style\":\"TEXTBROWN\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":8}},{\"key\":\"6plar\",\"text\":\"Colorful background\",\"type\":\"number-list\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"BGRED\"},{\"offset\":1,\"length\":1,\"style\":\"BGORANGE\"},{\"offset\":2,\"length\":1,\"style\":\"BGYELLOW\"},{\"offset\":3,\"length\":1,\"style\":\"BGGREEN\"},{\"offset\":4,\"length\":1,\"style\":\"BGBLUE\"},{\"offset\":5,\"length\":1,\"style\":\"BGPURPLE\"},{\"offset\":6,\"length\":1,\"style\":\"BGPINK\"},{\"offset\":7,\"length\":1,\"style\":\"BGBROWN\"}],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null,\"numberListOrder\":9}},{\"key\":\"6bhk0\",\"text\":\"To make the text colorful, select some words on the editor, then a menu will popup. Just select the style that you want!\",\"type\":\"bullet-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"6plar\"}},{\"key\":\"3livi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":0,\"parentKey\":null}}],\"entityMap\":{\"0\":{\"type\":\"MATH\",\"mutability\":\"IMMUTABLE\",\"data\":{\"math\":\"E=mc^2\"}},\"1\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"url\":\"http://www.google.com/\"}}}}`;\n\n// Test parentmap\n// const testString = `{\"blocks\":[{\"key\":\"feut4\",\"text\":\"Block 1000\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"toggleListToggle\":true,\"parentKey\":null}},{\"key\":\"7nf3n\",\"text\":\"Block 1100\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"indentLevel\":1,\"parentKey\":\"feut4\",\"toggleListToggle\":true}},{\"key\":\"de85\",\"text\":\"Block 1110\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"7nf3n\",\"indentLevel\":2,\"toggleListToggle\":true}},{\"key\":\"588h9\",\"text\":\"Block 1111\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"de85\",\"indentLevel\":3,\"toggleListToggle\":true}},{\"key\":\"f7tim\",\"text\":\"Block 1200\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"feut4\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"1b10k\",\"text\":\"Block 1210\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"f7tim\",\"indentLevel\":2,\"toggleListToggle\":true}},{\"key\":\"bqs8b\",\"text\":\"Block 1211\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"toggleListToggle\":true,\"parentKey\":\"1b10k\",\"indentLevel\":3}},{\"key\":\"7u9t8\",\"text\":\"Block 1300\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"feut4\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"8l2cq\",\"text\":\"Block 1310\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"7u9t8\",\"indentLevel\":2,\"toggleListToggle\":true}},{\"key\":\"4pb5u\",\"text\":\"Block 1311\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"8l2cq\",\"indentLevel\":3,\"toggleListToggle\":true}},{\"key\":\"9fvc2\",\"text\":\"Block 2000\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":null,\"toggleListToggle\":true}},{\"key\":\"32v8c\",\"text\":\"Block 2100\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"9fvc2\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"1offb\",\"text\":\"Block 2110\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"32v8c\",\"indentLevel\":2,\"toggleListToggle\":true}},{\"key\":\"9jj3t\",\"text\":\"Block 2200\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"9fvc2\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"c86u\",\"text\":\"Block 2210\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"9jj3t\",\"indentLevel\":2,\"toggleListToggle\":true}},{\"key\":\"a3e55\",\"text\":\"Block 3000\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":null,\"indentLevel\":0,\"toggleListToggle\":true}},{\"key\":\"3ma6o\",\"text\":\"Block 3100\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"a3e55\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"frvin\",\"text\":\"Block 4000\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":null,\"toggleListToggle\":true}},{\"key\":\"1g1l0\",\"text\":\"Block 4100\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"frvin\",\"indentLevel\":1,\"toggleListToggle\":true}},{\"key\":\"im3b\",\"text\":\"Block 5000\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":null,\"indentLevel\":0}},{\"key\":\"85bm0\",\"text\":\"Block 5100\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":\"im3b\",\"indentLevel\":1}},{\"key\":\"chscq\",\"text\":\"QQQ\",\"type\":\"toggle-list\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"parentKey\":null,\"indentLevel\":0}}],\"entityMap\":{}}`;\n\nconst Geeke = () => {\n  const dispatch = useDispatch();\n  const dispatcher = new Dispatcher(dispatch, true);\n  const editorMiscPages = useSelector((state) => state.editorMisc.pages);\n\n  const fakePageUuid = '100';\n  useEffect(() => {\n    initPage(dispatch, fakePageUuid);\n    dispatcher\n      .add(initPage, fakePageUuid)\n      .add(\n        setEditorState,\n        fakePageUuid,\n        EditorState.createWithContent(trimNumberListInWholePage(convertFromRaw(JSON.parse(testString))), decorator),\n      )\n      .run();\n    dispatcher.add(initPageMisc, fakePageUuid).run();\n  }, []); // eslint-disable-line\n\n  return (\n    <div>\n      <Container>\n        {editorMiscPages.has(fakePageUuid) ? <Page dataId={fakePageUuid} /> : null}\n      </Container>\n    </div>\n  );\n};\n\nexport default Geeke;\n","/*************************************************\n * @file index.js\n * @description Entry point of main program\n *************************************************/\n\n/*************************************************\n * Import Libraries\n *************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport reportWebVitals from './reportWebVitals';\nimport { enableMapSet } from 'immer';\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\n/*************************************************\n * Redux Reducers\n *************************************************/\nimport { editorMisc } from './states/editorMisc';\nimport { editor } from './states/editor';\n\n/*************************************************\n * Components\n *************************************************/\nimport Geeke from './components/Geeke';\n\n/*************************************************\n * Setup libraries\n *************************************************/\n// Immer: enable support for MapSet\nenableMapSet();\n\n/*************************************************\n * Renderer\n *************************************************/\nif (window.event) alert('IE not supported!');\nelse {\n  const MuiTheme = createTheme({\n    palette: {\n      primary: {\n        light: '#4791db',\n        main: '#1976d2',\n        dark: '#115293',\n      },\n      secondary: {\n        light: '#e33371',\n        main: '#dc004e',\n        dark: '#9a0036',\n      },\n    },\n  });\n\n  const store = createStore(\n    combineReducers({\n      editor,\n      editorMisc,\n    }),\n  );\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <ThemeProvider theme={MuiTheme}>\n        <React.StrictMode>\n          <Geeke />\n        </React.StrictMode>\n      </ThemeProvider>\n    </Provider>,\n    document.getElementById('root'),\n  );\n\n  // Disable animation when release dragged component\n  // Source: https://stackoverflow.com/questions/42725321/prevent-html5-drag-ghost-image-flying-back\n  document.ondragover = (e) => {\n    e.preventDefault();\n  };\n\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n  // reportWebVitals(console.log);\n}\n"],"sourceRoot":""}